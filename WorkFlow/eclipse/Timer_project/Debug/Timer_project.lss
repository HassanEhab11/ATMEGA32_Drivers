
Timer_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005878  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000142  00800060  00005878  000058ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00003a50  00000000  00000000  00005a30  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000e65  00000000  00000000  00009480  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000180  00000000  00000000  0000a2e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001d3  00000000  00000000  0000a465  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000200f  00000000  00000000  0000a638  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001170  00000000  00000000  0000c647  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001001  00000000  00000000  0000d7b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  0000e7b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c1  00000000  00000000  0000e958  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008ae  00000000  00000000  0000ec19  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000f4c7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e7       	ldi	r30, 0x78	; 120
      68:	f8 e5       	ldi	r31, 0x58	; 88
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 3a       	cpi	r26, 0xA2	; 162
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 d8 0f 	call	0x1fb0	; 0x1fb0 <main>
      7a:	0c 94 3a 2c 	jmp	0x5874	; 0x5874 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 03 2c 	jmp	0x5806	; 0x5806 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a9 e6       	ldi	r26, 0x69	; 105
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 1f 2c 	jmp	0x583e	; 0x583e <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 0f 2c 	jmp	0x581e	; 0x581e <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 2b 2c 	jmp	0x5856	; 0x5856 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 0f 2c 	jmp	0x581e	; 0x581e <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 2b 2c 	jmp	0x5856	; 0x5856 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 03 2c 	jmp	0x5806	; 0x5806 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	89 e6       	ldi	r24, 0x69	; 105
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 1f 2c 	jmp	0x583e	; 0x583e <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 0f 2c 	jmp	0x581e	; 0x581e <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 2b 2c 	jmp	0x5856	; 0x5856 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 0f 2c 	jmp	0x581e	; 0x581e <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 2b 2c 	jmp	0x5856	; 0x5856 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 0f 2c 	jmp	0x581e	; 0x581e <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 2b 2c 	jmp	0x5856	; 0x5856 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 13 2c 	jmp	0x5826	; 0x5826 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 2f 2c 	jmp	0x585e	; 0x585e <__epilogue_restores__+0x20>

000007ea <__floatunsisf>:
     7ea:	a8 e0       	ldi	r26, 0x08	; 8
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 0b 2c 	jmp	0x5816	; 0x5816 <__prologue_saves__+0x10>
     7f6:	7b 01       	movw	r14, r22
     7f8:	8c 01       	movw	r16, r24
     7fa:	61 15       	cp	r22, r1
     7fc:	71 05       	cpc	r23, r1
     7fe:	81 05       	cpc	r24, r1
     800:	91 05       	cpc	r25, r1
     802:	19 f4       	brne	.+6      	; 0x80a <__floatunsisf+0x20>
     804:	82 e0       	ldi	r24, 0x02	; 2
     806:	89 83       	std	Y+1, r24	; 0x01
     808:	60 c0       	rjmp	.+192    	; 0x8ca <__stack+0x6b>
     80a:	83 e0       	ldi	r24, 0x03	; 3
     80c:	89 83       	std	Y+1, r24	; 0x01
     80e:	8e e1       	ldi	r24, 0x1E	; 30
     810:	c8 2e       	mov	r12, r24
     812:	d1 2c       	mov	r13, r1
     814:	dc 82       	std	Y+4, r13	; 0x04
     816:	cb 82       	std	Y+3, r12	; 0x03
     818:	ed 82       	std	Y+5, r14	; 0x05
     81a:	fe 82       	std	Y+6, r15	; 0x06
     81c:	0f 83       	std	Y+7, r16	; 0x07
     81e:	18 87       	std	Y+8, r17	; 0x08
     820:	c8 01       	movw	r24, r16
     822:	b7 01       	movw	r22, r14
     824:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__clzsi2>
     828:	fc 01       	movw	r30, r24
     82a:	31 97       	sbiw	r30, 0x01	; 1
     82c:	f7 ff       	sbrs	r31, 7
     82e:	3b c0       	rjmp	.+118    	; 0x8a6 <__stack+0x47>
     830:	22 27       	eor	r18, r18
     832:	33 27       	eor	r19, r19
     834:	2e 1b       	sub	r18, r30
     836:	3f 0b       	sbc	r19, r31
     838:	57 01       	movw	r10, r14
     83a:	68 01       	movw	r12, r16
     83c:	02 2e       	mov	r0, r18
     83e:	04 c0       	rjmp	.+8      	; 0x848 <__floatunsisf+0x5e>
     840:	d6 94       	lsr	r13
     842:	c7 94       	ror	r12
     844:	b7 94       	ror	r11
     846:	a7 94       	ror	r10
     848:	0a 94       	dec	r0
     84a:	d2 f7       	brpl	.-12     	; 0x840 <__floatunsisf+0x56>
     84c:	40 e0       	ldi	r20, 0x00	; 0
     84e:	50 e0       	ldi	r21, 0x00	; 0
     850:	60 e0       	ldi	r22, 0x00	; 0
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	a0 e0       	ldi	r26, 0x00	; 0
     85a:	b0 e0       	ldi	r27, 0x00	; 0
     85c:	04 c0       	rjmp	.+8      	; 0x866 <__stack+0x7>
     85e:	88 0f       	add	r24, r24
     860:	99 1f       	adc	r25, r25
     862:	aa 1f       	adc	r26, r26
     864:	bb 1f       	adc	r27, r27
     866:	2a 95       	dec	r18
     868:	d2 f7       	brpl	.-12     	; 0x85e <__floatunsisf+0x74>
     86a:	01 97       	sbiw	r24, 0x01	; 1
     86c:	a1 09       	sbc	r26, r1
     86e:	b1 09       	sbc	r27, r1
     870:	8e 21       	and	r24, r14
     872:	9f 21       	and	r25, r15
     874:	a0 23       	and	r26, r16
     876:	b1 23       	and	r27, r17
     878:	00 97       	sbiw	r24, 0x00	; 0
     87a:	a1 05       	cpc	r26, r1
     87c:	b1 05       	cpc	r27, r1
     87e:	21 f0       	breq	.+8      	; 0x888 <__stack+0x29>
     880:	41 e0       	ldi	r20, 0x01	; 1
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	4a 29       	or	r20, r10
     88a:	5b 29       	or	r21, r11
     88c:	6c 29       	or	r22, r12
     88e:	7d 29       	or	r23, r13
     890:	4d 83       	std	Y+5, r20	; 0x05
     892:	5e 83       	std	Y+6, r21	; 0x06
     894:	6f 83       	std	Y+7, r22	; 0x07
     896:	78 87       	std	Y+8, r23	; 0x08
     898:	8e e1       	ldi	r24, 0x1E	; 30
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	8e 1b       	sub	r24, r30
     89e:	9f 0b       	sbc	r25, r31
     8a0:	9c 83       	std	Y+4, r25	; 0x04
     8a2:	8b 83       	std	Y+3, r24	; 0x03
     8a4:	12 c0       	rjmp	.+36     	; 0x8ca <__stack+0x6b>
     8a6:	30 97       	sbiw	r30, 0x00	; 0
     8a8:	81 f0       	breq	.+32     	; 0x8ca <__stack+0x6b>
     8aa:	0e 2e       	mov	r0, r30
     8ac:	04 c0       	rjmp	.+8      	; 0x8b6 <__stack+0x57>
     8ae:	ee 0c       	add	r14, r14
     8b0:	ff 1c       	adc	r15, r15
     8b2:	00 1f       	adc	r16, r16
     8b4:	11 1f       	adc	r17, r17
     8b6:	0a 94       	dec	r0
     8b8:	d2 f7       	brpl	.-12     	; 0x8ae <__stack+0x4f>
     8ba:	ed 82       	std	Y+5, r14	; 0x05
     8bc:	fe 82       	std	Y+6, r15	; 0x06
     8be:	0f 83       	std	Y+7, r16	; 0x07
     8c0:	18 87       	std	Y+8, r17	; 0x08
     8c2:	ce 1a       	sub	r12, r30
     8c4:	df 0a       	sbc	r13, r31
     8c6:	dc 82       	std	Y+4, r13	; 0x04
     8c8:	cb 82       	std	Y+3, r12	; 0x03
     8ca:	1a 82       	std	Y+2, r1	; 0x02
     8cc:	ce 01       	movw	r24, r28
     8ce:	01 96       	adiw	r24, 0x01	; 1
     8d0:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     8d4:	28 96       	adiw	r28, 0x08	; 8
     8d6:	ea e0       	ldi	r30, 0x0A	; 10
     8d8:	0c 94 27 2c 	jmp	0x584e	; 0x584e <__epilogue_restores__+0x10>

000008dc <__clzsi2>:
     8dc:	ef 92       	push	r14
     8de:	ff 92       	push	r15
     8e0:	0f 93       	push	r16
     8e2:	1f 93       	push	r17
     8e4:	7b 01       	movw	r14, r22
     8e6:	8c 01       	movw	r16, r24
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	e8 16       	cp	r14, r24
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	f8 06       	cpc	r15, r24
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	08 07       	cpc	r16, r24
     8f4:	80 e0       	ldi	r24, 0x00	; 0
     8f6:	18 07       	cpc	r17, r24
     8f8:	88 f4       	brcc	.+34     	; 0x91c <__clzsi2+0x40>
     8fa:	8f ef       	ldi	r24, 0xFF	; 255
     8fc:	e8 16       	cp	r14, r24
     8fe:	f1 04       	cpc	r15, r1
     900:	01 05       	cpc	r16, r1
     902:	11 05       	cpc	r17, r1
     904:	31 f0       	breq	.+12     	; 0x912 <__clzsi2+0x36>
     906:	28 f0       	brcs	.+10     	; 0x912 <__clzsi2+0x36>
     908:	88 e0       	ldi	r24, 0x08	; 8
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	a0 e0       	ldi	r26, 0x00	; 0
     90e:	b0 e0       	ldi	r27, 0x00	; 0
     910:	17 c0       	rjmp	.+46     	; 0x940 <__clzsi2+0x64>
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	a0 e0       	ldi	r26, 0x00	; 0
     918:	b0 e0       	ldi	r27, 0x00	; 0
     91a:	12 c0       	rjmp	.+36     	; 0x940 <__clzsi2+0x64>
     91c:	80 e0       	ldi	r24, 0x00	; 0
     91e:	e8 16       	cp	r14, r24
     920:	80 e0       	ldi	r24, 0x00	; 0
     922:	f8 06       	cpc	r15, r24
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	08 07       	cpc	r16, r24
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	18 07       	cpc	r17, r24
     92c:	28 f0       	brcs	.+10     	; 0x938 <__clzsi2+0x5c>
     92e:	88 e1       	ldi	r24, 0x18	; 24
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	04 c0       	rjmp	.+8      	; 0x940 <__clzsi2+0x64>
     938:	80 e1       	ldi	r24, 0x10	; 16
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	a0 e0       	ldi	r26, 0x00	; 0
     93e:	b0 e0       	ldi	r27, 0x00	; 0
     940:	20 e2       	ldi	r18, 0x20	; 32
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	40 e0       	ldi	r20, 0x00	; 0
     946:	50 e0       	ldi	r21, 0x00	; 0
     948:	28 1b       	sub	r18, r24
     94a:	39 0b       	sbc	r19, r25
     94c:	4a 0b       	sbc	r20, r26
     94e:	5b 0b       	sbc	r21, r27
     950:	04 c0       	rjmp	.+8      	; 0x95a <__clzsi2+0x7e>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	8a 95       	dec	r24
     95c:	d2 f7       	brpl	.-12     	; 0x952 <__clzsi2+0x76>
     95e:	f7 01       	movw	r30, r14
     960:	ef 58       	subi	r30, 0x8F	; 143
     962:	ff 4f       	sbci	r31, 0xFF	; 255
     964:	80 81       	ld	r24, Z
     966:	28 1b       	sub	r18, r24
     968:	31 09       	sbc	r19, r1
     96a:	41 09       	sbc	r20, r1
     96c:	51 09       	sbc	r21, r1
     96e:	c9 01       	movw	r24, r18
     970:	1f 91       	pop	r17
     972:	0f 91       	pop	r16
     974:	ff 90       	pop	r15
     976:	ef 90       	pop	r14
     978:	08 95       	ret

0000097a <__pack_f>:
     97a:	df 92       	push	r13
     97c:	ef 92       	push	r14
     97e:	ff 92       	push	r15
     980:	0f 93       	push	r16
     982:	1f 93       	push	r17
     984:	fc 01       	movw	r30, r24
     986:	e4 80       	ldd	r14, Z+4	; 0x04
     988:	f5 80       	ldd	r15, Z+5	; 0x05
     98a:	06 81       	ldd	r16, Z+6	; 0x06
     98c:	17 81       	ldd	r17, Z+7	; 0x07
     98e:	d1 80       	ldd	r13, Z+1	; 0x01
     990:	80 81       	ld	r24, Z
     992:	82 30       	cpi	r24, 0x02	; 2
     994:	48 f4       	brcc	.+18     	; 0x9a8 <__pack_f+0x2e>
     996:	80 e0       	ldi	r24, 0x00	; 0
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	a0 e1       	ldi	r26, 0x10	; 16
     99c:	b0 e0       	ldi	r27, 0x00	; 0
     99e:	e8 2a       	or	r14, r24
     9a0:	f9 2a       	or	r15, r25
     9a2:	0a 2b       	or	r16, r26
     9a4:	1b 2b       	or	r17, r27
     9a6:	a5 c0       	rjmp	.+330    	; 0xaf2 <__pack_f+0x178>
     9a8:	84 30       	cpi	r24, 0x04	; 4
     9aa:	09 f4       	brne	.+2      	; 0x9ae <__pack_f+0x34>
     9ac:	9f c0       	rjmp	.+318    	; 0xaec <__pack_f+0x172>
     9ae:	82 30       	cpi	r24, 0x02	; 2
     9b0:	21 f4       	brne	.+8      	; 0x9ba <__pack_f+0x40>
     9b2:	ee 24       	eor	r14, r14
     9b4:	ff 24       	eor	r15, r15
     9b6:	87 01       	movw	r16, r14
     9b8:	05 c0       	rjmp	.+10     	; 0x9c4 <__pack_f+0x4a>
     9ba:	e1 14       	cp	r14, r1
     9bc:	f1 04       	cpc	r15, r1
     9be:	01 05       	cpc	r16, r1
     9c0:	11 05       	cpc	r17, r1
     9c2:	19 f4       	brne	.+6      	; 0x9ca <__pack_f+0x50>
     9c4:	e0 e0       	ldi	r30, 0x00	; 0
     9c6:	f0 e0       	ldi	r31, 0x00	; 0
     9c8:	96 c0       	rjmp	.+300    	; 0xaf6 <__pack_f+0x17c>
     9ca:	62 81       	ldd	r22, Z+2	; 0x02
     9cc:	73 81       	ldd	r23, Z+3	; 0x03
     9ce:	9f ef       	ldi	r25, 0xFF	; 255
     9d0:	62 38       	cpi	r22, 0x82	; 130
     9d2:	79 07       	cpc	r23, r25
     9d4:	0c f0       	brlt	.+2      	; 0x9d8 <__pack_f+0x5e>
     9d6:	5b c0       	rjmp	.+182    	; 0xa8e <__pack_f+0x114>
     9d8:	22 e8       	ldi	r18, 0x82	; 130
     9da:	3f ef       	ldi	r19, 0xFF	; 255
     9dc:	26 1b       	sub	r18, r22
     9de:	37 0b       	sbc	r19, r23
     9e0:	2a 31       	cpi	r18, 0x1A	; 26
     9e2:	31 05       	cpc	r19, r1
     9e4:	2c f0       	brlt	.+10     	; 0x9f0 <__pack_f+0x76>
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	40 e0       	ldi	r20, 0x00	; 0
     9ec:	50 e0       	ldi	r21, 0x00	; 0
     9ee:	2a c0       	rjmp	.+84     	; 0xa44 <__pack_f+0xca>
     9f0:	b8 01       	movw	r22, r16
     9f2:	a7 01       	movw	r20, r14
     9f4:	02 2e       	mov	r0, r18
     9f6:	04 c0       	rjmp	.+8      	; 0xa00 <__pack_f+0x86>
     9f8:	76 95       	lsr	r23
     9fa:	67 95       	ror	r22
     9fc:	57 95       	ror	r21
     9fe:	47 95       	ror	r20
     a00:	0a 94       	dec	r0
     a02:	d2 f7       	brpl	.-12     	; 0x9f8 <__pack_f+0x7e>
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	a0 e0       	ldi	r26, 0x00	; 0
     a0a:	b0 e0       	ldi	r27, 0x00	; 0
     a0c:	04 c0       	rjmp	.+8      	; 0xa16 <__pack_f+0x9c>
     a0e:	88 0f       	add	r24, r24
     a10:	99 1f       	adc	r25, r25
     a12:	aa 1f       	adc	r26, r26
     a14:	bb 1f       	adc	r27, r27
     a16:	2a 95       	dec	r18
     a18:	d2 f7       	brpl	.-12     	; 0xa0e <__pack_f+0x94>
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	a1 09       	sbc	r26, r1
     a1e:	b1 09       	sbc	r27, r1
     a20:	8e 21       	and	r24, r14
     a22:	9f 21       	and	r25, r15
     a24:	a0 23       	and	r26, r16
     a26:	b1 23       	and	r27, r17
     a28:	00 97       	sbiw	r24, 0x00	; 0
     a2a:	a1 05       	cpc	r26, r1
     a2c:	b1 05       	cpc	r27, r1
     a2e:	21 f0       	breq	.+8      	; 0xa38 <__pack_f+0xbe>
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	9a 01       	movw	r18, r20
     a3a:	ab 01       	movw	r20, r22
     a3c:	28 2b       	or	r18, r24
     a3e:	39 2b       	or	r19, r25
     a40:	4a 2b       	or	r20, r26
     a42:	5b 2b       	or	r21, r27
     a44:	da 01       	movw	r26, r20
     a46:	c9 01       	movw	r24, r18
     a48:	8f 77       	andi	r24, 0x7F	; 127
     a4a:	90 70       	andi	r25, 0x00	; 0
     a4c:	a0 70       	andi	r26, 0x00	; 0
     a4e:	b0 70       	andi	r27, 0x00	; 0
     a50:	80 34       	cpi	r24, 0x40	; 64
     a52:	91 05       	cpc	r25, r1
     a54:	a1 05       	cpc	r26, r1
     a56:	b1 05       	cpc	r27, r1
     a58:	39 f4       	brne	.+14     	; 0xa68 <__pack_f+0xee>
     a5a:	27 ff       	sbrs	r18, 7
     a5c:	09 c0       	rjmp	.+18     	; 0xa70 <__pack_f+0xf6>
     a5e:	20 5c       	subi	r18, 0xC0	; 192
     a60:	3f 4f       	sbci	r19, 0xFF	; 255
     a62:	4f 4f       	sbci	r20, 0xFF	; 255
     a64:	5f 4f       	sbci	r21, 0xFF	; 255
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <__pack_f+0xf6>
     a68:	21 5c       	subi	r18, 0xC1	; 193
     a6a:	3f 4f       	sbci	r19, 0xFF	; 255
     a6c:	4f 4f       	sbci	r20, 0xFF	; 255
     a6e:	5f 4f       	sbci	r21, 0xFF	; 255
     a70:	e0 e0       	ldi	r30, 0x00	; 0
     a72:	f0 e0       	ldi	r31, 0x00	; 0
     a74:	20 30       	cpi	r18, 0x00	; 0
     a76:	a0 e0       	ldi	r26, 0x00	; 0
     a78:	3a 07       	cpc	r19, r26
     a7a:	a0 e0       	ldi	r26, 0x00	; 0
     a7c:	4a 07       	cpc	r20, r26
     a7e:	a0 e4       	ldi	r26, 0x40	; 64
     a80:	5a 07       	cpc	r21, r26
     a82:	10 f0       	brcs	.+4      	; 0xa88 <__pack_f+0x10e>
     a84:	e1 e0       	ldi	r30, 0x01	; 1
     a86:	f0 e0       	ldi	r31, 0x00	; 0
     a88:	79 01       	movw	r14, r18
     a8a:	8a 01       	movw	r16, r20
     a8c:	27 c0       	rjmp	.+78     	; 0xadc <__pack_f+0x162>
     a8e:	60 38       	cpi	r22, 0x80	; 128
     a90:	71 05       	cpc	r23, r1
     a92:	64 f5       	brge	.+88     	; 0xaec <__pack_f+0x172>
     a94:	fb 01       	movw	r30, r22
     a96:	e1 58       	subi	r30, 0x81	; 129
     a98:	ff 4f       	sbci	r31, 0xFF	; 255
     a9a:	d8 01       	movw	r26, r16
     a9c:	c7 01       	movw	r24, r14
     a9e:	8f 77       	andi	r24, 0x7F	; 127
     aa0:	90 70       	andi	r25, 0x00	; 0
     aa2:	a0 70       	andi	r26, 0x00	; 0
     aa4:	b0 70       	andi	r27, 0x00	; 0
     aa6:	80 34       	cpi	r24, 0x40	; 64
     aa8:	91 05       	cpc	r25, r1
     aaa:	a1 05       	cpc	r26, r1
     aac:	b1 05       	cpc	r27, r1
     aae:	39 f4       	brne	.+14     	; 0xabe <__pack_f+0x144>
     ab0:	e7 fe       	sbrs	r14, 7
     ab2:	0d c0       	rjmp	.+26     	; 0xace <__pack_f+0x154>
     ab4:	80 e4       	ldi	r24, 0x40	; 64
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	a0 e0       	ldi	r26, 0x00	; 0
     aba:	b0 e0       	ldi	r27, 0x00	; 0
     abc:	04 c0       	rjmp	.+8      	; 0xac6 <__pack_f+0x14c>
     abe:	8f e3       	ldi	r24, 0x3F	; 63
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	a0 e0       	ldi	r26, 0x00	; 0
     ac4:	b0 e0       	ldi	r27, 0x00	; 0
     ac6:	e8 0e       	add	r14, r24
     ac8:	f9 1e       	adc	r15, r25
     aca:	0a 1f       	adc	r16, r26
     acc:	1b 1f       	adc	r17, r27
     ace:	17 ff       	sbrs	r17, 7
     ad0:	05 c0       	rjmp	.+10     	; 0xadc <__pack_f+0x162>
     ad2:	16 95       	lsr	r17
     ad4:	07 95       	ror	r16
     ad6:	f7 94       	ror	r15
     ad8:	e7 94       	ror	r14
     ada:	31 96       	adiw	r30, 0x01	; 1
     adc:	87 e0       	ldi	r24, 0x07	; 7
     ade:	16 95       	lsr	r17
     ae0:	07 95       	ror	r16
     ae2:	f7 94       	ror	r15
     ae4:	e7 94       	ror	r14
     ae6:	8a 95       	dec	r24
     ae8:	d1 f7       	brne	.-12     	; 0xade <__pack_f+0x164>
     aea:	05 c0       	rjmp	.+10     	; 0xaf6 <__pack_f+0x17c>
     aec:	ee 24       	eor	r14, r14
     aee:	ff 24       	eor	r15, r15
     af0:	87 01       	movw	r16, r14
     af2:	ef ef       	ldi	r30, 0xFF	; 255
     af4:	f0 e0       	ldi	r31, 0x00	; 0
     af6:	6e 2f       	mov	r22, r30
     af8:	67 95       	ror	r22
     afa:	66 27       	eor	r22, r22
     afc:	67 95       	ror	r22
     afe:	90 2f       	mov	r25, r16
     b00:	9f 77       	andi	r25, 0x7F	; 127
     b02:	d7 94       	ror	r13
     b04:	dd 24       	eor	r13, r13
     b06:	d7 94       	ror	r13
     b08:	8e 2f       	mov	r24, r30
     b0a:	86 95       	lsr	r24
     b0c:	49 2f       	mov	r20, r25
     b0e:	46 2b       	or	r20, r22
     b10:	58 2f       	mov	r21, r24
     b12:	5d 29       	or	r21, r13
     b14:	b7 01       	movw	r22, r14
     b16:	ca 01       	movw	r24, r20
     b18:	1f 91       	pop	r17
     b1a:	0f 91       	pop	r16
     b1c:	ff 90       	pop	r15
     b1e:	ef 90       	pop	r14
     b20:	df 90       	pop	r13
     b22:	08 95       	ret

00000b24 <__unpack_f>:
     b24:	fc 01       	movw	r30, r24
     b26:	db 01       	movw	r26, r22
     b28:	40 81       	ld	r20, Z
     b2a:	51 81       	ldd	r21, Z+1	; 0x01
     b2c:	22 81       	ldd	r18, Z+2	; 0x02
     b2e:	62 2f       	mov	r22, r18
     b30:	6f 77       	andi	r22, 0x7F	; 127
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	22 1f       	adc	r18, r18
     b36:	22 27       	eor	r18, r18
     b38:	22 1f       	adc	r18, r18
     b3a:	93 81       	ldd	r25, Z+3	; 0x03
     b3c:	89 2f       	mov	r24, r25
     b3e:	88 0f       	add	r24, r24
     b40:	82 2b       	or	r24, r18
     b42:	28 2f       	mov	r18, r24
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	99 1f       	adc	r25, r25
     b48:	99 27       	eor	r25, r25
     b4a:	99 1f       	adc	r25, r25
     b4c:	11 96       	adiw	r26, 0x01	; 1
     b4e:	9c 93       	st	X, r25
     b50:	11 97       	sbiw	r26, 0x01	; 1
     b52:	21 15       	cp	r18, r1
     b54:	31 05       	cpc	r19, r1
     b56:	a9 f5       	brne	.+106    	; 0xbc2 <__unpack_f+0x9e>
     b58:	41 15       	cp	r20, r1
     b5a:	51 05       	cpc	r21, r1
     b5c:	61 05       	cpc	r22, r1
     b5e:	71 05       	cpc	r23, r1
     b60:	11 f4       	brne	.+4      	; 0xb66 <__unpack_f+0x42>
     b62:	82 e0       	ldi	r24, 0x02	; 2
     b64:	37 c0       	rjmp	.+110    	; 0xbd4 <__unpack_f+0xb0>
     b66:	82 e8       	ldi	r24, 0x82	; 130
     b68:	9f ef       	ldi	r25, 0xFF	; 255
     b6a:	13 96       	adiw	r26, 0x03	; 3
     b6c:	9c 93       	st	X, r25
     b6e:	8e 93       	st	-X, r24
     b70:	12 97       	sbiw	r26, 0x02	; 2
     b72:	9a 01       	movw	r18, r20
     b74:	ab 01       	movw	r20, r22
     b76:	67 e0       	ldi	r22, 0x07	; 7
     b78:	22 0f       	add	r18, r18
     b7a:	33 1f       	adc	r19, r19
     b7c:	44 1f       	adc	r20, r20
     b7e:	55 1f       	adc	r21, r21
     b80:	6a 95       	dec	r22
     b82:	d1 f7       	brne	.-12     	; 0xb78 <__unpack_f+0x54>
     b84:	83 e0       	ldi	r24, 0x03	; 3
     b86:	8c 93       	st	X, r24
     b88:	0d c0       	rjmp	.+26     	; 0xba4 <__unpack_f+0x80>
     b8a:	22 0f       	add	r18, r18
     b8c:	33 1f       	adc	r19, r19
     b8e:	44 1f       	adc	r20, r20
     b90:	55 1f       	adc	r21, r21
     b92:	12 96       	adiw	r26, 0x02	; 2
     b94:	8d 91       	ld	r24, X+
     b96:	9c 91       	ld	r25, X
     b98:	13 97       	sbiw	r26, 0x03	; 3
     b9a:	01 97       	sbiw	r24, 0x01	; 1
     b9c:	13 96       	adiw	r26, 0x03	; 3
     b9e:	9c 93       	st	X, r25
     ba0:	8e 93       	st	-X, r24
     ba2:	12 97       	sbiw	r26, 0x02	; 2
     ba4:	20 30       	cpi	r18, 0x00	; 0
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	38 07       	cpc	r19, r24
     baa:	80 e0       	ldi	r24, 0x00	; 0
     bac:	48 07       	cpc	r20, r24
     bae:	80 e4       	ldi	r24, 0x40	; 64
     bb0:	58 07       	cpc	r21, r24
     bb2:	58 f3       	brcs	.-42     	; 0xb8a <__unpack_f+0x66>
     bb4:	14 96       	adiw	r26, 0x04	; 4
     bb6:	2d 93       	st	X+, r18
     bb8:	3d 93       	st	X+, r19
     bba:	4d 93       	st	X+, r20
     bbc:	5c 93       	st	X, r21
     bbe:	17 97       	sbiw	r26, 0x07	; 7
     bc0:	08 95       	ret
     bc2:	2f 3f       	cpi	r18, 0xFF	; 255
     bc4:	31 05       	cpc	r19, r1
     bc6:	79 f4       	brne	.+30     	; 0xbe6 <__unpack_f+0xc2>
     bc8:	41 15       	cp	r20, r1
     bca:	51 05       	cpc	r21, r1
     bcc:	61 05       	cpc	r22, r1
     bce:	71 05       	cpc	r23, r1
     bd0:	19 f4       	brne	.+6      	; 0xbd8 <__unpack_f+0xb4>
     bd2:	84 e0       	ldi	r24, 0x04	; 4
     bd4:	8c 93       	st	X, r24
     bd6:	08 95       	ret
     bd8:	64 ff       	sbrs	r22, 4
     bda:	03 c0       	rjmp	.+6      	; 0xbe2 <__unpack_f+0xbe>
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	8c 93       	st	X, r24
     be0:	12 c0       	rjmp	.+36     	; 0xc06 <__unpack_f+0xe2>
     be2:	1c 92       	st	X, r1
     be4:	10 c0       	rjmp	.+32     	; 0xc06 <__unpack_f+0xe2>
     be6:	2f 57       	subi	r18, 0x7F	; 127
     be8:	30 40       	sbci	r19, 0x00	; 0
     bea:	13 96       	adiw	r26, 0x03	; 3
     bec:	3c 93       	st	X, r19
     bee:	2e 93       	st	-X, r18
     bf0:	12 97       	sbiw	r26, 0x02	; 2
     bf2:	83 e0       	ldi	r24, 0x03	; 3
     bf4:	8c 93       	st	X, r24
     bf6:	87 e0       	ldi	r24, 0x07	; 7
     bf8:	44 0f       	add	r20, r20
     bfa:	55 1f       	adc	r21, r21
     bfc:	66 1f       	adc	r22, r22
     bfe:	77 1f       	adc	r23, r23
     c00:	8a 95       	dec	r24
     c02:	d1 f7       	brne	.-12     	; 0xbf8 <__unpack_f+0xd4>
     c04:	70 64       	ori	r23, 0x40	; 64
     c06:	14 96       	adiw	r26, 0x04	; 4
     c08:	4d 93       	st	X+, r20
     c0a:	5d 93       	st	X+, r21
     c0c:	6d 93       	st	X+, r22
     c0e:	7c 93       	st	X, r23
     c10:	17 97       	sbiw	r26, 0x07	; 7
     c12:	08 95       	ret

00000c14 <__fpcmp_parts_f>:
     c14:	1f 93       	push	r17
     c16:	dc 01       	movw	r26, r24
     c18:	fb 01       	movw	r30, r22
     c1a:	9c 91       	ld	r25, X
     c1c:	92 30       	cpi	r25, 0x02	; 2
     c1e:	08 f4       	brcc	.+2      	; 0xc22 <__fpcmp_parts_f+0xe>
     c20:	47 c0       	rjmp	.+142    	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c22:	80 81       	ld	r24, Z
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	08 f4       	brcc	.+2      	; 0xc2a <__fpcmp_parts_f+0x16>
     c28:	43 c0       	rjmp	.+134    	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c2a:	94 30       	cpi	r25, 0x04	; 4
     c2c:	51 f4       	brne	.+20     	; 0xc42 <__fpcmp_parts_f+0x2e>
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	1c 91       	ld	r17, X
     c32:	84 30       	cpi	r24, 0x04	; 4
     c34:	99 f5       	brne	.+102    	; 0xc9c <__fpcmp_parts_f+0x88>
     c36:	81 81       	ldd	r24, Z+1	; 0x01
     c38:	68 2f       	mov	r22, r24
     c3a:	70 e0       	ldi	r23, 0x00	; 0
     c3c:	61 1b       	sub	r22, r17
     c3e:	71 09       	sbc	r23, r1
     c40:	3f c0       	rjmp	.+126    	; 0xcc0 <__fpcmp_parts_f+0xac>
     c42:	84 30       	cpi	r24, 0x04	; 4
     c44:	21 f0       	breq	.+8      	; 0xc4e <__fpcmp_parts_f+0x3a>
     c46:	92 30       	cpi	r25, 0x02	; 2
     c48:	31 f4       	brne	.+12     	; 0xc56 <__fpcmp_parts_f+0x42>
     c4a:	82 30       	cpi	r24, 0x02	; 2
     c4c:	b9 f1       	breq	.+110    	; 0xcbc <__fpcmp_parts_f+0xa8>
     c4e:	81 81       	ldd	r24, Z+1	; 0x01
     c50:	88 23       	and	r24, r24
     c52:	89 f1       	breq	.+98     	; 0xcb6 <__fpcmp_parts_f+0xa2>
     c54:	2d c0       	rjmp	.+90     	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c56:	11 96       	adiw	r26, 0x01	; 1
     c58:	1c 91       	ld	r17, X
     c5a:	11 97       	sbiw	r26, 0x01	; 1
     c5c:	82 30       	cpi	r24, 0x02	; 2
     c5e:	f1 f0       	breq	.+60     	; 0xc9c <__fpcmp_parts_f+0x88>
     c60:	81 81       	ldd	r24, Z+1	; 0x01
     c62:	18 17       	cp	r17, r24
     c64:	d9 f4       	brne	.+54     	; 0xc9c <__fpcmp_parts_f+0x88>
     c66:	12 96       	adiw	r26, 0x02	; 2
     c68:	2d 91       	ld	r18, X+
     c6a:	3c 91       	ld	r19, X
     c6c:	13 97       	sbiw	r26, 0x03	; 3
     c6e:	82 81       	ldd	r24, Z+2	; 0x02
     c70:	93 81       	ldd	r25, Z+3	; 0x03
     c72:	82 17       	cp	r24, r18
     c74:	93 07       	cpc	r25, r19
     c76:	94 f0       	brlt	.+36     	; 0xc9c <__fpcmp_parts_f+0x88>
     c78:	28 17       	cp	r18, r24
     c7a:	39 07       	cpc	r19, r25
     c7c:	bc f0       	brlt	.+46     	; 0xcac <__fpcmp_parts_f+0x98>
     c7e:	14 96       	adiw	r26, 0x04	; 4
     c80:	8d 91       	ld	r24, X+
     c82:	9d 91       	ld	r25, X+
     c84:	0d 90       	ld	r0, X+
     c86:	bc 91       	ld	r27, X
     c88:	a0 2d       	mov	r26, r0
     c8a:	24 81       	ldd	r18, Z+4	; 0x04
     c8c:	35 81       	ldd	r19, Z+5	; 0x05
     c8e:	46 81       	ldd	r20, Z+6	; 0x06
     c90:	57 81       	ldd	r21, Z+7	; 0x07
     c92:	28 17       	cp	r18, r24
     c94:	39 07       	cpc	r19, r25
     c96:	4a 07       	cpc	r20, r26
     c98:	5b 07       	cpc	r21, r27
     c9a:	18 f4       	brcc	.+6      	; 0xca2 <__fpcmp_parts_f+0x8e>
     c9c:	11 23       	and	r17, r17
     c9e:	41 f0       	breq	.+16     	; 0xcb0 <__fpcmp_parts_f+0x9c>
     ca0:	0a c0       	rjmp	.+20     	; 0xcb6 <__fpcmp_parts_f+0xa2>
     ca2:	82 17       	cp	r24, r18
     ca4:	93 07       	cpc	r25, r19
     ca6:	a4 07       	cpc	r26, r20
     ca8:	b5 07       	cpc	r27, r21
     caa:	40 f4       	brcc	.+16     	; 0xcbc <__fpcmp_parts_f+0xa8>
     cac:	11 23       	and	r17, r17
     cae:	19 f0       	breq	.+6      	; 0xcb6 <__fpcmp_parts_f+0xa2>
     cb0:	61 e0       	ldi	r22, 0x01	; 1
     cb2:	70 e0       	ldi	r23, 0x00	; 0
     cb4:	05 c0       	rjmp	.+10     	; 0xcc0 <__fpcmp_parts_f+0xac>
     cb6:	6f ef       	ldi	r22, 0xFF	; 255
     cb8:	7f ef       	ldi	r23, 0xFF	; 255
     cba:	02 c0       	rjmp	.+4      	; 0xcc0 <__fpcmp_parts_f+0xac>
     cbc:	60 e0       	ldi	r22, 0x00	; 0
     cbe:	70 e0       	ldi	r23, 0x00	; 0
     cc0:	cb 01       	movw	r24, r22
     cc2:	1f 91       	pop	r17
     cc4:	08 95       	ret

00000cc6 <C_LCD_voidSendCommand>:

#include "CLCD_private.h"


void C_LCD_voidSendCommand(u8 Copy_u8Command)
{
     cc6:	1f 93       	push	r17
     cc8:	df 93       	push	r29
     cca:	cf 93       	push	r28
     ccc:	cd b7       	in	r28, 0x3d	; 61
     cce:	de b7       	in	r29, 0x3e	; 62
     cd0:	ea 97       	sbiw	r28, 0x3a	; 58
     cd2:	0f b6       	in	r0, 0x3f	; 63
     cd4:	f8 94       	cli
     cd6:	de bf       	out	0x3e, r29	; 62
     cd8:	0f be       	out	0x3f, r0	; 63
     cda:	cd bf       	out	0x3d, r28	; 61
     cdc:	8a af       	std	Y+58, r24	; 0x3a
	/*Set RS Pin to low to send command */
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RS_PIN,DIO_u8PIN_LOW);
     cde:	80 e0       	ldi	r24, 0x00	; 0
     ce0:	61 e0       	ldi	r22, 0x01	; 1
     ce2:	40 e0       	ldi	r20, 0x00	; 0
     ce4:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <DIO_u8SetPinValue>
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);

#elif   MODE_SELECT ==_4_BIT_MODE

	u8 Local_u8Command = (((Copy_u8Command >> 1) & 0b01111000) | DIO_u8AndWithPort(CLCD_DATA_PORT, 0b10000111));
     ce8:	8a ad       	ldd	r24, Y+58	; 0x3a
     cea:	86 95       	lsr	r24
     cec:	18 2f       	mov	r17, r24
     cee:	18 77       	andi	r17, 0x78	; 120
     cf0:	80 e0       	ldi	r24, 0x00	; 0
     cf2:	67 e8       	ldi	r22, 0x87	; 135
     cf4:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <DIO_u8AndWithPort>
     cf8:	81 2b       	or	r24, r17
     cfa:	89 af       	std	Y+57, r24	; 0x39
	/* Set Command to data pins */
	DIO_u8SetPortValue(CLCD_DATA_PORT,Local_u8Command);
     cfc:	80 e0       	ldi	r24, 0x00	; 0
     cfe:	69 ad       	ldd	r22, Y+57	; 0x39
     d00:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <DIO_u8SetPortValue>

	/*Send Enable pulse */
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_HIGH);
     d04:	80 e0       	ldi	r24, 0x00	; 0
     d06:	62 e0       	ldi	r22, 0x02	; 2
     d08:	41 e0       	ldi	r20, 0x01	; 1
     d0a:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <DIO_u8SetPinValue>
     d0e:	80 e0       	ldi	r24, 0x00	; 0
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	a0 e0       	ldi	r26, 0x00	; 0
     d14:	b0 e4       	ldi	r27, 0x40	; 64
     d16:	8d ab       	std	Y+53, r24	; 0x35
     d18:	9e ab       	std	Y+54, r25	; 0x36
     d1a:	af ab       	std	Y+55, r26	; 0x37
     d1c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     d1e:	6d a9       	ldd	r22, Y+53	; 0x35
     d20:	7e a9       	ldd	r23, Y+54	; 0x36
     d22:	8f a9       	ldd	r24, Y+55	; 0x37
     d24:	98 ad       	ldd	r25, Y+56	; 0x38
     d26:	20 e0       	ldi	r18, 0x00	; 0
     d28:	30 e0       	ldi	r19, 0x00	; 0
     d2a:	4a ef       	ldi	r20, 0xFA	; 250
     d2c:	54 e4       	ldi	r21, 0x44	; 68
     d2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d32:	dc 01       	movw	r26, r24
     d34:	cb 01       	movw	r24, r22
     d36:	89 ab       	std	Y+49, r24	; 0x31
     d38:	9a ab       	std	Y+50, r25	; 0x32
     d3a:	ab ab       	std	Y+51, r26	; 0x33
     d3c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     d3e:	69 a9       	ldd	r22, Y+49	; 0x31
     d40:	7a a9       	ldd	r23, Y+50	; 0x32
     d42:	8b a9       	ldd	r24, Y+51	; 0x33
     d44:	9c a9       	ldd	r25, Y+52	; 0x34
     d46:	20 e0       	ldi	r18, 0x00	; 0
     d48:	30 e0       	ldi	r19, 0x00	; 0
     d4a:	40 e8       	ldi	r20, 0x80	; 128
     d4c:	5f e3       	ldi	r21, 0x3F	; 63
     d4e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     d52:	88 23       	and	r24, r24
     d54:	2c f4       	brge	.+10     	; 0xd60 <C_LCD_voidSendCommand+0x9a>
		__ticks = 1;
     d56:	81 e0       	ldi	r24, 0x01	; 1
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	98 ab       	std	Y+48, r25	; 0x30
     d5c:	8f a7       	std	Y+47, r24	; 0x2f
     d5e:	3f c0       	rjmp	.+126    	; 0xdde <C_LCD_voidSendCommand+0x118>
	else if (__tmp > 65535)
     d60:	69 a9       	ldd	r22, Y+49	; 0x31
     d62:	7a a9       	ldd	r23, Y+50	; 0x32
     d64:	8b a9       	ldd	r24, Y+51	; 0x33
     d66:	9c a9       	ldd	r25, Y+52	; 0x34
     d68:	20 e0       	ldi	r18, 0x00	; 0
     d6a:	3f ef       	ldi	r19, 0xFF	; 255
     d6c:	4f e7       	ldi	r20, 0x7F	; 127
     d6e:	57 e4       	ldi	r21, 0x47	; 71
     d70:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d74:	18 16       	cp	r1, r24
     d76:	4c f5       	brge	.+82     	; 0xdca <C_LCD_voidSendCommand+0x104>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d78:	6d a9       	ldd	r22, Y+53	; 0x35
     d7a:	7e a9       	ldd	r23, Y+54	; 0x36
     d7c:	8f a9       	ldd	r24, Y+55	; 0x37
     d7e:	98 ad       	ldd	r25, Y+56	; 0x38
     d80:	20 e0       	ldi	r18, 0x00	; 0
     d82:	30 e0       	ldi	r19, 0x00	; 0
     d84:	40 e2       	ldi	r20, 0x20	; 32
     d86:	51 e4       	ldi	r21, 0x41	; 65
     d88:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d8c:	dc 01       	movw	r26, r24
     d8e:	cb 01       	movw	r24, r22
     d90:	bc 01       	movw	r22, r24
     d92:	cd 01       	movw	r24, r26
     d94:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d98:	dc 01       	movw	r26, r24
     d9a:	cb 01       	movw	r24, r22
     d9c:	98 ab       	std	Y+48, r25	; 0x30
     d9e:	8f a7       	std	Y+47, r24	; 0x2f
     da0:	0f c0       	rjmp	.+30     	; 0xdc0 <C_LCD_voidSendCommand+0xfa>
     da2:	88 ec       	ldi	r24, 0xC8	; 200
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	9e a7       	std	Y+46, r25	; 0x2e
     da8:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     daa:	8d a5       	ldd	r24, Y+45	; 0x2d
     dac:	9e a5       	ldd	r25, Y+46	; 0x2e
     dae:	01 97       	sbiw	r24, 0x01	; 1
     db0:	f1 f7       	brne	.-4      	; 0xdae <C_LCD_voidSendCommand+0xe8>
     db2:	9e a7       	std	Y+46, r25	; 0x2e
     db4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     db6:	8f a5       	ldd	r24, Y+47	; 0x2f
     db8:	98 a9       	ldd	r25, Y+48	; 0x30
     dba:	01 97       	sbiw	r24, 0x01	; 1
     dbc:	98 ab       	std	Y+48, r25	; 0x30
     dbe:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     dc0:	8f a5       	ldd	r24, Y+47	; 0x2f
     dc2:	98 a9       	ldd	r25, Y+48	; 0x30
     dc4:	00 97       	sbiw	r24, 0x00	; 0
     dc6:	69 f7       	brne	.-38     	; 0xda2 <C_LCD_voidSendCommand+0xdc>
     dc8:	14 c0       	rjmp	.+40     	; 0xdf2 <C_LCD_voidSendCommand+0x12c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     dca:	69 a9       	ldd	r22, Y+49	; 0x31
     dcc:	7a a9       	ldd	r23, Y+50	; 0x32
     dce:	8b a9       	ldd	r24, Y+51	; 0x33
     dd0:	9c a9       	ldd	r25, Y+52	; 0x34
     dd2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     dd6:	dc 01       	movw	r26, r24
     dd8:	cb 01       	movw	r24, r22
     dda:	98 ab       	std	Y+48, r25	; 0x30
     ddc:	8f a7       	std	Y+47, r24	; 0x2f
     dde:	8f a5       	ldd	r24, Y+47	; 0x2f
     de0:	98 a9       	ldd	r25, Y+48	; 0x30
     de2:	9c a7       	std	Y+44, r25	; 0x2c
     de4:	8b a7       	std	Y+43, r24	; 0x2b
     de6:	8b a5       	ldd	r24, Y+43	; 0x2b
     de8:	9c a5       	ldd	r25, Y+44	; 0x2c
     dea:	01 97       	sbiw	r24, 0x01	; 1
     dec:	f1 f7       	brne	.-4      	; 0xdea <C_LCD_voidSendCommand+0x124>
     dee:	9c a7       	std	Y+44, r25	; 0x2c
     df0:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);
     df2:	80 e0       	ldi	r24, 0x00	; 0
     df4:	62 e0       	ldi	r22, 0x02	; 2
     df6:	40 e0       	ldi	r20, 0x00	; 0
     df8:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <DIO_u8SetPinValue>
     dfc:	80 e0       	ldi	r24, 0x00	; 0
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	a0 ea       	ldi	r26, 0xA0	; 160
     e02:	b0 e4       	ldi	r27, 0x40	; 64
     e04:	8f a3       	std	Y+39, r24	; 0x27
     e06:	98 a7       	std	Y+40, r25	; 0x28
     e08:	a9 a7       	std	Y+41, r26	; 0x29
     e0a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e0c:	6f a1       	ldd	r22, Y+39	; 0x27
     e0e:	78 a5       	ldd	r23, Y+40	; 0x28
     e10:	89 a5       	ldd	r24, Y+41	; 0x29
     e12:	9a a5       	ldd	r25, Y+42	; 0x2a
     e14:	20 e0       	ldi	r18, 0x00	; 0
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	4a ef       	ldi	r20, 0xFA	; 250
     e1a:	54 e4       	ldi	r21, 0x44	; 68
     e1c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e20:	dc 01       	movw	r26, r24
     e22:	cb 01       	movw	r24, r22
     e24:	8b a3       	std	Y+35, r24	; 0x23
     e26:	9c a3       	std	Y+36, r25	; 0x24
     e28:	ad a3       	std	Y+37, r26	; 0x25
     e2a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     e2c:	6b a1       	ldd	r22, Y+35	; 0x23
     e2e:	7c a1       	ldd	r23, Y+36	; 0x24
     e30:	8d a1       	ldd	r24, Y+37	; 0x25
     e32:	9e a1       	ldd	r25, Y+38	; 0x26
     e34:	20 e0       	ldi	r18, 0x00	; 0
     e36:	30 e0       	ldi	r19, 0x00	; 0
     e38:	40 e8       	ldi	r20, 0x80	; 128
     e3a:	5f e3       	ldi	r21, 0x3F	; 63
     e3c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     e40:	88 23       	and	r24, r24
     e42:	2c f4       	brge	.+10     	; 0xe4e <C_LCD_voidSendCommand+0x188>
		__ticks = 1;
     e44:	81 e0       	ldi	r24, 0x01	; 1
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	9a a3       	std	Y+34, r25	; 0x22
     e4a:	89 a3       	std	Y+33, r24	; 0x21
     e4c:	3f c0       	rjmp	.+126    	; 0xecc <C_LCD_voidSendCommand+0x206>
	else if (__tmp > 65535)
     e4e:	6b a1       	ldd	r22, Y+35	; 0x23
     e50:	7c a1       	ldd	r23, Y+36	; 0x24
     e52:	8d a1       	ldd	r24, Y+37	; 0x25
     e54:	9e a1       	ldd	r25, Y+38	; 0x26
     e56:	20 e0       	ldi	r18, 0x00	; 0
     e58:	3f ef       	ldi	r19, 0xFF	; 255
     e5a:	4f e7       	ldi	r20, 0x7F	; 127
     e5c:	57 e4       	ldi	r21, 0x47	; 71
     e5e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     e62:	18 16       	cp	r1, r24
     e64:	4c f5       	brge	.+82     	; 0xeb8 <C_LCD_voidSendCommand+0x1f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e66:	6f a1       	ldd	r22, Y+39	; 0x27
     e68:	78 a5       	ldd	r23, Y+40	; 0x28
     e6a:	89 a5       	ldd	r24, Y+41	; 0x29
     e6c:	9a a5       	ldd	r25, Y+42	; 0x2a
     e6e:	20 e0       	ldi	r18, 0x00	; 0
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	40 e2       	ldi	r20, 0x20	; 32
     e74:	51 e4       	ldi	r21, 0x41	; 65
     e76:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e7a:	dc 01       	movw	r26, r24
     e7c:	cb 01       	movw	r24, r22
     e7e:	bc 01       	movw	r22, r24
     e80:	cd 01       	movw	r24, r26
     e82:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     e86:	dc 01       	movw	r26, r24
     e88:	cb 01       	movw	r24, r22
     e8a:	9a a3       	std	Y+34, r25	; 0x22
     e8c:	89 a3       	std	Y+33, r24	; 0x21
     e8e:	0f c0       	rjmp	.+30     	; 0xeae <C_LCD_voidSendCommand+0x1e8>
     e90:	88 ec       	ldi	r24, 0xC8	; 200
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	98 a3       	std	Y+32, r25	; 0x20
     e96:	8f 8f       	std	Y+31, r24	; 0x1f
     e98:	8f 8d       	ldd	r24, Y+31	; 0x1f
     e9a:	98 a1       	ldd	r25, Y+32	; 0x20
     e9c:	01 97       	sbiw	r24, 0x01	; 1
     e9e:	f1 f7       	brne	.-4      	; 0xe9c <C_LCD_voidSendCommand+0x1d6>
     ea0:	98 a3       	std	Y+32, r25	; 0x20
     ea2:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ea4:	89 a1       	ldd	r24, Y+33	; 0x21
     ea6:	9a a1       	ldd	r25, Y+34	; 0x22
     ea8:	01 97       	sbiw	r24, 0x01	; 1
     eaa:	9a a3       	std	Y+34, r25	; 0x22
     eac:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     eae:	89 a1       	ldd	r24, Y+33	; 0x21
     eb0:	9a a1       	ldd	r25, Y+34	; 0x22
     eb2:	00 97       	sbiw	r24, 0x00	; 0
     eb4:	69 f7       	brne	.-38     	; 0xe90 <C_LCD_voidSendCommand+0x1ca>
     eb6:	14 c0       	rjmp	.+40     	; 0xee0 <C_LCD_voidSendCommand+0x21a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     eb8:	6b a1       	ldd	r22, Y+35	; 0x23
     eba:	7c a1       	ldd	r23, Y+36	; 0x24
     ebc:	8d a1       	ldd	r24, Y+37	; 0x25
     ebe:	9e a1       	ldd	r25, Y+38	; 0x26
     ec0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     ec4:	dc 01       	movw	r26, r24
     ec6:	cb 01       	movw	r24, r22
     ec8:	9a a3       	std	Y+34, r25	; 0x22
     eca:	89 a3       	std	Y+33, r24	; 0x21
     ecc:	89 a1       	ldd	r24, Y+33	; 0x21
     ece:	9a a1       	ldd	r25, Y+34	; 0x22
     ed0:	9e 8f       	std	Y+30, r25	; 0x1e
     ed2:	8d 8f       	std	Y+29, r24	; 0x1d
     ed4:	8d 8d       	ldd	r24, Y+29	; 0x1d
     ed6:	9e 8d       	ldd	r25, Y+30	; 0x1e
     ed8:	01 97       	sbiw	r24, 0x01	; 1
     eda:	f1 f7       	brne	.-4      	; 0xed8 <C_LCD_voidSendCommand+0x212>
     edc:	9e 8f       	std	Y+30, r25	; 0x1e
     ede:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(5);

	Local_u8Command = ((Copy_u8Command <<3) |DIO_u8AndWithPort(CLCD_DATA_PORT, 0b10000111));
     ee0:	8a ad       	ldd	r24, Y+58	; 0x3a
     ee2:	88 2f       	mov	r24, r24
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	88 0f       	add	r24, r24
     ee8:	99 1f       	adc	r25, r25
     eea:	88 0f       	add	r24, r24
     eec:	99 1f       	adc	r25, r25
     eee:	88 0f       	add	r24, r24
     ef0:	99 1f       	adc	r25, r25
     ef2:	18 2f       	mov	r17, r24
     ef4:	80 e0       	ldi	r24, 0x00	; 0
     ef6:	67 e8       	ldi	r22, 0x87	; 135
     ef8:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <DIO_u8AndWithPort>
     efc:	81 2b       	or	r24, r17
     efe:	89 af       	std	Y+57, r24	; 0x39
	DIO_u8SetPortValue(CLCD_DATA_PORT,Local_u8Command);
     f00:	80 e0       	ldi	r24, 0x00	; 0
     f02:	69 ad       	ldd	r22, Y+57	; 0x39
     f04:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <DIO_u8SetPortValue>

	/*Send Enable pulse */
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_HIGH);
     f08:	80 e0       	ldi	r24, 0x00	; 0
     f0a:	62 e0       	ldi	r22, 0x02	; 2
     f0c:	41 e0       	ldi	r20, 0x01	; 1
     f0e:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <DIO_u8SetPinValue>
     f12:	80 e0       	ldi	r24, 0x00	; 0
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	a0 e0       	ldi	r26, 0x00	; 0
     f18:	b0 e4       	ldi	r27, 0x40	; 64
     f1a:	89 8f       	std	Y+25, r24	; 0x19
     f1c:	9a 8f       	std	Y+26, r25	; 0x1a
     f1e:	ab 8f       	std	Y+27, r26	; 0x1b
     f20:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     f22:	69 8d       	ldd	r22, Y+25	; 0x19
     f24:	7a 8d       	ldd	r23, Y+26	; 0x1a
     f26:	8b 8d       	ldd	r24, Y+27	; 0x1b
     f28:	9c 8d       	ldd	r25, Y+28	; 0x1c
     f2a:	20 e0       	ldi	r18, 0x00	; 0
     f2c:	30 e0       	ldi	r19, 0x00	; 0
     f2e:	4a ef       	ldi	r20, 0xFA	; 250
     f30:	54 e4       	ldi	r21, 0x44	; 68
     f32:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f36:	dc 01       	movw	r26, r24
     f38:	cb 01       	movw	r24, r22
     f3a:	8d 8b       	std	Y+21, r24	; 0x15
     f3c:	9e 8b       	std	Y+22, r25	; 0x16
     f3e:	af 8b       	std	Y+23, r26	; 0x17
     f40:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     f42:	6d 89       	ldd	r22, Y+21	; 0x15
     f44:	7e 89       	ldd	r23, Y+22	; 0x16
     f46:	8f 89       	ldd	r24, Y+23	; 0x17
     f48:	98 8d       	ldd	r25, Y+24	; 0x18
     f4a:	20 e0       	ldi	r18, 0x00	; 0
     f4c:	30 e0       	ldi	r19, 0x00	; 0
     f4e:	40 e8       	ldi	r20, 0x80	; 128
     f50:	5f e3       	ldi	r21, 0x3F	; 63
     f52:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     f56:	88 23       	and	r24, r24
     f58:	2c f4       	brge	.+10     	; 0xf64 <C_LCD_voidSendCommand+0x29e>
		__ticks = 1;
     f5a:	81 e0       	ldi	r24, 0x01	; 1
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	9c 8b       	std	Y+20, r25	; 0x14
     f60:	8b 8b       	std	Y+19, r24	; 0x13
     f62:	3f c0       	rjmp	.+126    	; 0xfe2 <C_LCD_voidSendCommand+0x31c>
	else if (__tmp > 65535)
     f64:	6d 89       	ldd	r22, Y+21	; 0x15
     f66:	7e 89       	ldd	r23, Y+22	; 0x16
     f68:	8f 89       	ldd	r24, Y+23	; 0x17
     f6a:	98 8d       	ldd	r25, Y+24	; 0x18
     f6c:	20 e0       	ldi	r18, 0x00	; 0
     f6e:	3f ef       	ldi	r19, 0xFF	; 255
     f70:	4f e7       	ldi	r20, 0x7F	; 127
     f72:	57 e4       	ldi	r21, 0x47	; 71
     f74:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     f78:	18 16       	cp	r1, r24
     f7a:	4c f5       	brge	.+82     	; 0xfce <C_LCD_voidSendCommand+0x308>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f7c:	69 8d       	ldd	r22, Y+25	; 0x19
     f7e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     f80:	8b 8d       	ldd	r24, Y+27	; 0x1b
     f82:	9c 8d       	ldd	r25, Y+28	; 0x1c
     f84:	20 e0       	ldi	r18, 0x00	; 0
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	40 e2       	ldi	r20, 0x20	; 32
     f8a:	51 e4       	ldi	r21, 0x41	; 65
     f8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     f90:	dc 01       	movw	r26, r24
     f92:	cb 01       	movw	r24, r22
     f94:	bc 01       	movw	r22, r24
     f96:	cd 01       	movw	r24, r26
     f98:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f9c:	dc 01       	movw	r26, r24
     f9e:	cb 01       	movw	r24, r22
     fa0:	9c 8b       	std	Y+20, r25	; 0x14
     fa2:	8b 8b       	std	Y+19, r24	; 0x13
     fa4:	0f c0       	rjmp	.+30     	; 0xfc4 <C_LCD_voidSendCommand+0x2fe>
     fa6:	88 ec       	ldi	r24, 0xC8	; 200
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	9a 8b       	std	Y+18, r25	; 0x12
     fac:	89 8b       	std	Y+17, r24	; 0x11
     fae:	89 89       	ldd	r24, Y+17	; 0x11
     fb0:	9a 89       	ldd	r25, Y+18	; 0x12
     fb2:	01 97       	sbiw	r24, 0x01	; 1
     fb4:	f1 f7       	brne	.-4      	; 0xfb2 <C_LCD_voidSendCommand+0x2ec>
     fb6:	9a 8b       	std	Y+18, r25	; 0x12
     fb8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fba:	8b 89       	ldd	r24, Y+19	; 0x13
     fbc:	9c 89       	ldd	r25, Y+20	; 0x14
     fbe:	01 97       	sbiw	r24, 0x01	; 1
     fc0:	9c 8b       	std	Y+20, r25	; 0x14
     fc2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fc4:	8b 89       	ldd	r24, Y+19	; 0x13
     fc6:	9c 89       	ldd	r25, Y+20	; 0x14
     fc8:	00 97       	sbiw	r24, 0x00	; 0
     fca:	69 f7       	brne	.-38     	; 0xfa6 <C_LCD_voidSendCommand+0x2e0>
     fcc:	14 c0       	rjmp	.+40     	; 0xff6 <C_LCD_voidSendCommand+0x330>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fce:	6d 89       	ldd	r22, Y+21	; 0x15
     fd0:	7e 89       	ldd	r23, Y+22	; 0x16
     fd2:	8f 89       	ldd	r24, Y+23	; 0x17
     fd4:	98 8d       	ldd	r25, Y+24	; 0x18
     fd6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     fda:	dc 01       	movw	r26, r24
     fdc:	cb 01       	movw	r24, r22
     fde:	9c 8b       	std	Y+20, r25	; 0x14
     fe0:	8b 8b       	std	Y+19, r24	; 0x13
     fe2:	8b 89       	ldd	r24, Y+19	; 0x13
     fe4:	9c 89       	ldd	r25, Y+20	; 0x14
     fe6:	98 8b       	std	Y+16, r25	; 0x10
     fe8:	8f 87       	std	Y+15, r24	; 0x0f
     fea:	8f 85       	ldd	r24, Y+15	; 0x0f
     fec:	98 89       	ldd	r25, Y+16	; 0x10
     fee:	01 97       	sbiw	r24, 0x01	; 1
     ff0:	f1 f7       	brne	.-4      	; 0xfee <C_LCD_voidSendCommand+0x328>
     ff2:	98 8b       	std	Y+16, r25	; 0x10
     ff4:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);
     ff6:	80 e0       	ldi	r24, 0x00	; 0
     ff8:	62 e0       	ldi	r22, 0x02	; 2
     ffa:	40 e0       	ldi	r20, 0x00	; 0
     ffc:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <DIO_u8SetPinValue>
    1000:	80 e0       	ldi	r24, 0x00	; 0
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	a0 ea       	ldi	r26, 0xA0	; 160
    1006:	b0 e4       	ldi	r27, 0x40	; 64
    1008:	8b 87       	std	Y+11, r24	; 0x0b
    100a:	9c 87       	std	Y+12, r25	; 0x0c
    100c:	ad 87       	std	Y+13, r26	; 0x0d
    100e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1010:	6b 85       	ldd	r22, Y+11	; 0x0b
    1012:	7c 85       	ldd	r23, Y+12	; 0x0c
    1014:	8d 85       	ldd	r24, Y+13	; 0x0d
    1016:	9e 85       	ldd	r25, Y+14	; 0x0e
    1018:	20 e0       	ldi	r18, 0x00	; 0
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	4a ef       	ldi	r20, 0xFA	; 250
    101e:	54 e4       	ldi	r21, 0x44	; 68
    1020:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1024:	dc 01       	movw	r26, r24
    1026:	cb 01       	movw	r24, r22
    1028:	8f 83       	std	Y+7, r24	; 0x07
    102a:	98 87       	std	Y+8, r25	; 0x08
    102c:	a9 87       	std	Y+9, r26	; 0x09
    102e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1030:	6f 81       	ldd	r22, Y+7	; 0x07
    1032:	78 85       	ldd	r23, Y+8	; 0x08
    1034:	89 85       	ldd	r24, Y+9	; 0x09
    1036:	9a 85       	ldd	r25, Y+10	; 0x0a
    1038:	20 e0       	ldi	r18, 0x00	; 0
    103a:	30 e0       	ldi	r19, 0x00	; 0
    103c:	40 e8       	ldi	r20, 0x80	; 128
    103e:	5f e3       	ldi	r21, 0x3F	; 63
    1040:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1044:	88 23       	and	r24, r24
    1046:	2c f4       	brge	.+10     	; 0x1052 <C_LCD_voidSendCommand+0x38c>
		__ticks = 1;
    1048:	81 e0       	ldi	r24, 0x01	; 1
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	9e 83       	std	Y+6, r25	; 0x06
    104e:	8d 83       	std	Y+5, r24	; 0x05
    1050:	3f c0       	rjmp	.+126    	; 0x10d0 <C_LCD_voidSendCommand+0x40a>
	else if (__tmp > 65535)
    1052:	6f 81       	ldd	r22, Y+7	; 0x07
    1054:	78 85       	ldd	r23, Y+8	; 0x08
    1056:	89 85       	ldd	r24, Y+9	; 0x09
    1058:	9a 85       	ldd	r25, Y+10	; 0x0a
    105a:	20 e0       	ldi	r18, 0x00	; 0
    105c:	3f ef       	ldi	r19, 0xFF	; 255
    105e:	4f e7       	ldi	r20, 0x7F	; 127
    1060:	57 e4       	ldi	r21, 0x47	; 71
    1062:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1066:	18 16       	cp	r1, r24
    1068:	4c f5       	brge	.+82     	; 0x10bc <C_LCD_voidSendCommand+0x3f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    106a:	6b 85       	ldd	r22, Y+11	; 0x0b
    106c:	7c 85       	ldd	r23, Y+12	; 0x0c
    106e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1070:	9e 85       	ldd	r25, Y+14	; 0x0e
    1072:	20 e0       	ldi	r18, 0x00	; 0
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	40 e2       	ldi	r20, 0x20	; 32
    1078:	51 e4       	ldi	r21, 0x41	; 65
    107a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    107e:	dc 01       	movw	r26, r24
    1080:	cb 01       	movw	r24, r22
    1082:	bc 01       	movw	r22, r24
    1084:	cd 01       	movw	r24, r26
    1086:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    108a:	dc 01       	movw	r26, r24
    108c:	cb 01       	movw	r24, r22
    108e:	9e 83       	std	Y+6, r25	; 0x06
    1090:	8d 83       	std	Y+5, r24	; 0x05
    1092:	0f c0       	rjmp	.+30     	; 0x10b2 <C_LCD_voidSendCommand+0x3ec>
    1094:	88 ec       	ldi	r24, 0xC8	; 200
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	9c 83       	std	Y+4, r25	; 0x04
    109a:	8b 83       	std	Y+3, r24	; 0x03
    109c:	8b 81       	ldd	r24, Y+3	; 0x03
    109e:	9c 81       	ldd	r25, Y+4	; 0x04
    10a0:	01 97       	sbiw	r24, 0x01	; 1
    10a2:	f1 f7       	brne	.-4      	; 0x10a0 <C_LCD_voidSendCommand+0x3da>
    10a4:	9c 83       	std	Y+4, r25	; 0x04
    10a6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10a8:	8d 81       	ldd	r24, Y+5	; 0x05
    10aa:	9e 81       	ldd	r25, Y+6	; 0x06
    10ac:	01 97       	sbiw	r24, 0x01	; 1
    10ae:	9e 83       	std	Y+6, r25	; 0x06
    10b0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10b2:	8d 81       	ldd	r24, Y+5	; 0x05
    10b4:	9e 81       	ldd	r25, Y+6	; 0x06
    10b6:	00 97       	sbiw	r24, 0x00	; 0
    10b8:	69 f7       	brne	.-38     	; 0x1094 <C_LCD_voidSendCommand+0x3ce>
    10ba:	14 c0       	rjmp	.+40     	; 0x10e4 <C_LCD_voidSendCommand+0x41e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10bc:	6f 81       	ldd	r22, Y+7	; 0x07
    10be:	78 85       	ldd	r23, Y+8	; 0x08
    10c0:	89 85       	ldd	r24, Y+9	; 0x09
    10c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    10c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    10c8:	dc 01       	movw	r26, r24
    10ca:	cb 01       	movw	r24, r22
    10cc:	9e 83       	std	Y+6, r25	; 0x06
    10ce:	8d 83       	std	Y+5, r24	; 0x05
    10d0:	8d 81       	ldd	r24, Y+5	; 0x05
    10d2:	9e 81       	ldd	r25, Y+6	; 0x06
    10d4:	9a 83       	std	Y+2, r25	; 0x02
    10d6:	89 83       	std	Y+1, r24	; 0x01
    10d8:	89 81       	ldd	r24, Y+1	; 0x01
    10da:	9a 81       	ldd	r25, Y+2	; 0x02
    10dc:	01 97       	sbiw	r24, 0x01	; 1
    10de:	f1 f7       	brne	.-4      	; 0x10dc <C_LCD_voidSendCommand+0x416>
    10e0:	9a 83       	std	Y+2, r25	; 0x02
    10e2:	89 83       	std	Y+1, r24	; 0x01

#endif



}
    10e4:	ea 96       	adiw	r28, 0x3a	; 58
    10e6:	0f b6       	in	r0, 0x3f	; 63
    10e8:	f8 94       	cli
    10ea:	de bf       	out	0x3e, r29	; 62
    10ec:	0f be       	out	0x3f, r0	; 63
    10ee:	cd bf       	out	0x3d, r28	; 61
    10f0:	cf 91       	pop	r28
    10f2:	df 91       	pop	r29
    10f4:	1f 91       	pop	r17
    10f6:	08 95       	ret

000010f8 <CLCD_voidSendData>:

void CLCD_voidSendData(u8 Copy_u8Data)
{
    10f8:	1f 93       	push	r17
    10fa:	df 93       	push	r29
    10fc:	cf 93       	push	r28
    10fe:	cd b7       	in	r28, 0x3d	; 61
    1100:	de b7       	in	r29, 0x3e	; 62
    1102:	ea 97       	sbiw	r28, 0x3a	; 58
    1104:	0f b6       	in	r0, 0x3f	; 63
    1106:	f8 94       	cli
    1108:	de bf       	out	0x3e, r29	; 62
    110a:	0f be       	out	0x3f, r0	; 63
    110c:	cd bf       	out	0x3d, r28	; 61
    110e:	8a af       	std	Y+58, r24	; 0x3a
	/*Set RS Pin to low to send data */
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_RS_PIN,DIO_u8PIN_HIGH);
    1110:	80 e0       	ldi	r24, 0x00	; 0
    1112:	61 e0       	ldi	r22, 0x01	; 1
    1114:	41 e0       	ldi	r20, 0x01	; 1
    1116:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <DIO_u8SetPinValue>
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);

#elif   MODE_SELECT ==_4_BIT_MODE

	u8 Local_u8Data = (((Copy_u8Data >> 1) & 0b01111000) | DIO_u8AndWithPort(CLCD_DATA_PORT, 0b10000111));
    111a:	8a ad       	ldd	r24, Y+58	; 0x3a
    111c:	86 95       	lsr	r24
    111e:	18 2f       	mov	r17, r24
    1120:	18 77       	andi	r17, 0x78	; 120
    1122:	80 e0       	ldi	r24, 0x00	; 0
    1124:	67 e8       	ldi	r22, 0x87	; 135
    1126:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <DIO_u8AndWithPort>
    112a:	81 2b       	or	r24, r17
    112c:	89 af       	std	Y+57, r24	; 0x39
	/* Set Command to data pins */
	DIO_u8SetPortValue(CLCD_DATA_PORT,Local_u8Data);
    112e:	80 e0       	ldi	r24, 0x00	; 0
    1130:	69 ad       	ldd	r22, Y+57	; 0x39
    1132:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <DIO_u8SetPortValue>

	/*Send Enable pulse */
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_HIGH);
    1136:	80 e0       	ldi	r24, 0x00	; 0
    1138:	62 e0       	ldi	r22, 0x02	; 2
    113a:	41 e0       	ldi	r20, 0x01	; 1
    113c:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <DIO_u8SetPinValue>
    1140:	80 e0       	ldi	r24, 0x00	; 0
    1142:	90 e0       	ldi	r25, 0x00	; 0
    1144:	a0 e0       	ldi	r26, 0x00	; 0
    1146:	b0 e4       	ldi	r27, 0x40	; 64
    1148:	8d ab       	std	Y+53, r24	; 0x35
    114a:	9e ab       	std	Y+54, r25	; 0x36
    114c:	af ab       	std	Y+55, r26	; 0x37
    114e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1150:	6d a9       	ldd	r22, Y+53	; 0x35
    1152:	7e a9       	ldd	r23, Y+54	; 0x36
    1154:	8f a9       	ldd	r24, Y+55	; 0x37
    1156:	98 ad       	ldd	r25, Y+56	; 0x38
    1158:	20 e0       	ldi	r18, 0x00	; 0
    115a:	30 e0       	ldi	r19, 0x00	; 0
    115c:	4a ef       	ldi	r20, 0xFA	; 250
    115e:	54 e4       	ldi	r21, 0x44	; 68
    1160:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1164:	dc 01       	movw	r26, r24
    1166:	cb 01       	movw	r24, r22
    1168:	89 ab       	std	Y+49, r24	; 0x31
    116a:	9a ab       	std	Y+50, r25	; 0x32
    116c:	ab ab       	std	Y+51, r26	; 0x33
    116e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1170:	69 a9       	ldd	r22, Y+49	; 0x31
    1172:	7a a9       	ldd	r23, Y+50	; 0x32
    1174:	8b a9       	ldd	r24, Y+51	; 0x33
    1176:	9c a9       	ldd	r25, Y+52	; 0x34
    1178:	20 e0       	ldi	r18, 0x00	; 0
    117a:	30 e0       	ldi	r19, 0x00	; 0
    117c:	40 e8       	ldi	r20, 0x80	; 128
    117e:	5f e3       	ldi	r21, 0x3F	; 63
    1180:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1184:	88 23       	and	r24, r24
    1186:	2c f4       	brge	.+10     	; 0x1192 <CLCD_voidSendData+0x9a>
		__ticks = 1;
    1188:	81 e0       	ldi	r24, 0x01	; 1
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	98 ab       	std	Y+48, r25	; 0x30
    118e:	8f a7       	std	Y+47, r24	; 0x2f
    1190:	3f c0       	rjmp	.+126    	; 0x1210 <CLCD_voidSendData+0x118>
	else if (__tmp > 65535)
    1192:	69 a9       	ldd	r22, Y+49	; 0x31
    1194:	7a a9       	ldd	r23, Y+50	; 0x32
    1196:	8b a9       	ldd	r24, Y+51	; 0x33
    1198:	9c a9       	ldd	r25, Y+52	; 0x34
    119a:	20 e0       	ldi	r18, 0x00	; 0
    119c:	3f ef       	ldi	r19, 0xFF	; 255
    119e:	4f e7       	ldi	r20, 0x7F	; 127
    11a0:	57 e4       	ldi	r21, 0x47	; 71
    11a2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    11a6:	18 16       	cp	r1, r24
    11a8:	4c f5       	brge	.+82     	; 0x11fc <CLCD_voidSendData+0x104>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11aa:	6d a9       	ldd	r22, Y+53	; 0x35
    11ac:	7e a9       	ldd	r23, Y+54	; 0x36
    11ae:	8f a9       	ldd	r24, Y+55	; 0x37
    11b0:	98 ad       	ldd	r25, Y+56	; 0x38
    11b2:	20 e0       	ldi	r18, 0x00	; 0
    11b4:	30 e0       	ldi	r19, 0x00	; 0
    11b6:	40 e2       	ldi	r20, 0x20	; 32
    11b8:	51 e4       	ldi	r21, 0x41	; 65
    11ba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11be:	dc 01       	movw	r26, r24
    11c0:	cb 01       	movw	r24, r22
    11c2:	bc 01       	movw	r22, r24
    11c4:	cd 01       	movw	r24, r26
    11c6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11ca:	dc 01       	movw	r26, r24
    11cc:	cb 01       	movw	r24, r22
    11ce:	98 ab       	std	Y+48, r25	; 0x30
    11d0:	8f a7       	std	Y+47, r24	; 0x2f
    11d2:	0f c0       	rjmp	.+30     	; 0x11f2 <CLCD_voidSendData+0xfa>
    11d4:	88 ec       	ldi	r24, 0xC8	; 200
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	9e a7       	std	Y+46, r25	; 0x2e
    11da:	8d a7       	std	Y+45, r24	; 0x2d
    11dc:	8d a5       	ldd	r24, Y+45	; 0x2d
    11de:	9e a5       	ldd	r25, Y+46	; 0x2e
    11e0:	01 97       	sbiw	r24, 0x01	; 1
    11e2:	f1 f7       	brne	.-4      	; 0x11e0 <CLCD_voidSendData+0xe8>
    11e4:	9e a7       	std	Y+46, r25	; 0x2e
    11e6:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11e8:	8f a5       	ldd	r24, Y+47	; 0x2f
    11ea:	98 a9       	ldd	r25, Y+48	; 0x30
    11ec:	01 97       	sbiw	r24, 0x01	; 1
    11ee:	98 ab       	std	Y+48, r25	; 0x30
    11f0:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11f2:	8f a5       	ldd	r24, Y+47	; 0x2f
    11f4:	98 a9       	ldd	r25, Y+48	; 0x30
    11f6:	00 97       	sbiw	r24, 0x00	; 0
    11f8:	69 f7       	brne	.-38     	; 0x11d4 <CLCD_voidSendData+0xdc>
    11fa:	14 c0       	rjmp	.+40     	; 0x1224 <CLCD_voidSendData+0x12c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11fc:	69 a9       	ldd	r22, Y+49	; 0x31
    11fe:	7a a9       	ldd	r23, Y+50	; 0x32
    1200:	8b a9       	ldd	r24, Y+51	; 0x33
    1202:	9c a9       	ldd	r25, Y+52	; 0x34
    1204:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1208:	dc 01       	movw	r26, r24
    120a:	cb 01       	movw	r24, r22
    120c:	98 ab       	std	Y+48, r25	; 0x30
    120e:	8f a7       	std	Y+47, r24	; 0x2f
    1210:	8f a5       	ldd	r24, Y+47	; 0x2f
    1212:	98 a9       	ldd	r25, Y+48	; 0x30
    1214:	9c a7       	std	Y+44, r25	; 0x2c
    1216:	8b a7       	std	Y+43, r24	; 0x2b
    1218:	8b a5       	ldd	r24, Y+43	; 0x2b
    121a:	9c a5       	ldd	r25, Y+44	; 0x2c
    121c:	01 97       	sbiw	r24, 0x01	; 1
    121e:	f1 f7       	brne	.-4      	; 0x121c <CLCD_voidSendData+0x124>
    1220:	9c a7       	std	Y+44, r25	; 0x2c
    1222:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);
    1224:	80 e0       	ldi	r24, 0x00	; 0
    1226:	62 e0       	ldi	r22, 0x02	; 2
    1228:	40 e0       	ldi	r20, 0x00	; 0
    122a:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <DIO_u8SetPinValue>
    122e:	80 e0       	ldi	r24, 0x00	; 0
    1230:	90 e0       	ldi	r25, 0x00	; 0
    1232:	a0 ea       	ldi	r26, 0xA0	; 160
    1234:	b0 e4       	ldi	r27, 0x40	; 64
    1236:	8f a3       	std	Y+39, r24	; 0x27
    1238:	98 a7       	std	Y+40, r25	; 0x28
    123a:	a9 a7       	std	Y+41, r26	; 0x29
    123c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    123e:	6f a1       	ldd	r22, Y+39	; 0x27
    1240:	78 a5       	ldd	r23, Y+40	; 0x28
    1242:	89 a5       	ldd	r24, Y+41	; 0x29
    1244:	9a a5       	ldd	r25, Y+42	; 0x2a
    1246:	20 e0       	ldi	r18, 0x00	; 0
    1248:	30 e0       	ldi	r19, 0x00	; 0
    124a:	4a ef       	ldi	r20, 0xFA	; 250
    124c:	54 e4       	ldi	r21, 0x44	; 68
    124e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1252:	dc 01       	movw	r26, r24
    1254:	cb 01       	movw	r24, r22
    1256:	8b a3       	std	Y+35, r24	; 0x23
    1258:	9c a3       	std	Y+36, r25	; 0x24
    125a:	ad a3       	std	Y+37, r26	; 0x25
    125c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    125e:	6b a1       	ldd	r22, Y+35	; 0x23
    1260:	7c a1       	ldd	r23, Y+36	; 0x24
    1262:	8d a1       	ldd	r24, Y+37	; 0x25
    1264:	9e a1       	ldd	r25, Y+38	; 0x26
    1266:	20 e0       	ldi	r18, 0x00	; 0
    1268:	30 e0       	ldi	r19, 0x00	; 0
    126a:	40 e8       	ldi	r20, 0x80	; 128
    126c:	5f e3       	ldi	r21, 0x3F	; 63
    126e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1272:	88 23       	and	r24, r24
    1274:	2c f4       	brge	.+10     	; 0x1280 <CLCD_voidSendData+0x188>
		__ticks = 1;
    1276:	81 e0       	ldi	r24, 0x01	; 1
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	9a a3       	std	Y+34, r25	; 0x22
    127c:	89 a3       	std	Y+33, r24	; 0x21
    127e:	3f c0       	rjmp	.+126    	; 0x12fe <CLCD_voidSendData+0x206>
	else if (__tmp > 65535)
    1280:	6b a1       	ldd	r22, Y+35	; 0x23
    1282:	7c a1       	ldd	r23, Y+36	; 0x24
    1284:	8d a1       	ldd	r24, Y+37	; 0x25
    1286:	9e a1       	ldd	r25, Y+38	; 0x26
    1288:	20 e0       	ldi	r18, 0x00	; 0
    128a:	3f ef       	ldi	r19, 0xFF	; 255
    128c:	4f e7       	ldi	r20, 0x7F	; 127
    128e:	57 e4       	ldi	r21, 0x47	; 71
    1290:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1294:	18 16       	cp	r1, r24
    1296:	4c f5       	brge	.+82     	; 0x12ea <CLCD_voidSendData+0x1f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1298:	6f a1       	ldd	r22, Y+39	; 0x27
    129a:	78 a5       	ldd	r23, Y+40	; 0x28
    129c:	89 a5       	ldd	r24, Y+41	; 0x29
    129e:	9a a5       	ldd	r25, Y+42	; 0x2a
    12a0:	20 e0       	ldi	r18, 0x00	; 0
    12a2:	30 e0       	ldi	r19, 0x00	; 0
    12a4:	40 e2       	ldi	r20, 0x20	; 32
    12a6:	51 e4       	ldi	r21, 0x41	; 65
    12a8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12ac:	dc 01       	movw	r26, r24
    12ae:	cb 01       	movw	r24, r22
    12b0:	bc 01       	movw	r22, r24
    12b2:	cd 01       	movw	r24, r26
    12b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12b8:	dc 01       	movw	r26, r24
    12ba:	cb 01       	movw	r24, r22
    12bc:	9a a3       	std	Y+34, r25	; 0x22
    12be:	89 a3       	std	Y+33, r24	; 0x21
    12c0:	0f c0       	rjmp	.+30     	; 0x12e0 <CLCD_voidSendData+0x1e8>
    12c2:	88 ec       	ldi	r24, 0xC8	; 200
    12c4:	90 e0       	ldi	r25, 0x00	; 0
    12c6:	98 a3       	std	Y+32, r25	; 0x20
    12c8:	8f 8f       	std	Y+31, r24	; 0x1f
    12ca:	8f 8d       	ldd	r24, Y+31	; 0x1f
    12cc:	98 a1       	ldd	r25, Y+32	; 0x20
    12ce:	01 97       	sbiw	r24, 0x01	; 1
    12d0:	f1 f7       	brne	.-4      	; 0x12ce <CLCD_voidSendData+0x1d6>
    12d2:	98 a3       	std	Y+32, r25	; 0x20
    12d4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    12d6:	89 a1       	ldd	r24, Y+33	; 0x21
    12d8:	9a a1       	ldd	r25, Y+34	; 0x22
    12da:	01 97       	sbiw	r24, 0x01	; 1
    12dc:	9a a3       	std	Y+34, r25	; 0x22
    12de:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    12e0:	89 a1       	ldd	r24, Y+33	; 0x21
    12e2:	9a a1       	ldd	r25, Y+34	; 0x22
    12e4:	00 97       	sbiw	r24, 0x00	; 0
    12e6:	69 f7       	brne	.-38     	; 0x12c2 <CLCD_voidSendData+0x1ca>
    12e8:	14 c0       	rjmp	.+40     	; 0x1312 <CLCD_voidSendData+0x21a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    12ea:	6b a1       	ldd	r22, Y+35	; 0x23
    12ec:	7c a1       	ldd	r23, Y+36	; 0x24
    12ee:	8d a1       	ldd	r24, Y+37	; 0x25
    12f0:	9e a1       	ldd	r25, Y+38	; 0x26
    12f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    12f6:	dc 01       	movw	r26, r24
    12f8:	cb 01       	movw	r24, r22
    12fa:	9a a3       	std	Y+34, r25	; 0x22
    12fc:	89 a3       	std	Y+33, r24	; 0x21
    12fe:	89 a1       	ldd	r24, Y+33	; 0x21
    1300:	9a a1       	ldd	r25, Y+34	; 0x22
    1302:	9e 8f       	std	Y+30, r25	; 0x1e
    1304:	8d 8f       	std	Y+29, r24	; 0x1d
    1306:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1308:	9e 8d       	ldd	r25, Y+30	; 0x1e
    130a:	01 97       	sbiw	r24, 0x01	; 1
    130c:	f1 f7       	brne	.-4      	; 0x130a <CLCD_voidSendData+0x212>
    130e:	9e 8f       	std	Y+30, r25	; 0x1e
    1310:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(5);

	Local_u8Data = ((Copy_u8Data <<3) |DIO_u8AndWithPort(CLCD_DATA_PORT, 0b10000111));
    1312:	8a ad       	ldd	r24, Y+58	; 0x3a
    1314:	88 2f       	mov	r24, r24
    1316:	90 e0       	ldi	r25, 0x00	; 0
    1318:	88 0f       	add	r24, r24
    131a:	99 1f       	adc	r25, r25
    131c:	88 0f       	add	r24, r24
    131e:	99 1f       	adc	r25, r25
    1320:	88 0f       	add	r24, r24
    1322:	99 1f       	adc	r25, r25
    1324:	18 2f       	mov	r17, r24
    1326:	80 e0       	ldi	r24, 0x00	; 0
    1328:	67 e8       	ldi	r22, 0x87	; 135
    132a:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <DIO_u8AndWithPort>
    132e:	81 2b       	or	r24, r17
    1330:	89 af       	std	Y+57, r24	; 0x39

	DIO_u8SetPortValue(CLCD_DATA_PORT,Local_u8Data);
    1332:	80 e0       	ldi	r24, 0x00	; 0
    1334:	69 ad       	ldd	r22, Y+57	; 0x39
    1336:	0e 94 6e 0d 	call	0x1adc	; 0x1adc <DIO_u8SetPortValue>

	/*Send Enable pulse */
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_HIGH);
    133a:	80 e0       	ldi	r24, 0x00	; 0
    133c:	62 e0       	ldi	r22, 0x02	; 2
    133e:	41 e0       	ldi	r20, 0x01	; 1
    1340:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <DIO_u8SetPinValue>
    1344:	80 e0       	ldi	r24, 0x00	; 0
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	a0 e0       	ldi	r26, 0x00	; 0
    134a:	b0 e4       	ldi	r27, 0x40	; 64
    134c:	89 8f       	std	Y+25, r24	; 0x19
    134e:	9a 8f       	std	Y+26, r25	; 0x1a
    1350:	ab 8f       	std	Y+27, r26	; 0x1b
    1352:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1354:	69 8d       	ldd	r22, Y+25	; 0x19
    1356:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1358:	8b 8d       	ldd	r24, Y+27	; 0x1b
    135a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    135c:	20 e0       	ldi	r18, 0x00	; 0
    135e:	30 e0       	ldi	r19, 0x00	; 0
    1360:	4a ef       	ldi	r20, 0xFA	; 250
    1362:	54 e4       	ldi	r21, 0x44	; 68
    1364:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1368:	dc 01       	movw	r26, r24
    136a:	cb 01       	movw	r24, r22
    136c:	8d 8b       	std	Y+21, r24	; 0x15
    136e:	9e 8b       	std	Y+22, r25	; 0x16
    1370:	af 8b       	std	Y+23, r26	; 0x17
    1372:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1374:	6d 89       	ldd	r22, Y+21	; 0x15
    1376:	7e 89       	ldd	r23, Y+22	; 0x16
    1378:	8f 89       	ldd	r24, Y+23	; 0x17
    137a:	98 8d       	ldd	r25, Y+24	; 0x18
    137c:	20 e0       	ldi	r18, 0x00	; 0
    137e:	30 e0       	ldi	r19, 0x00	; 0
    1380:	40 e8       	ldi	r20, 0x80	; 128
    1382:	5f e3       	ldi	r21, 0x3F	; 63
    1384:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1388:	88 23       	and	r24, r24
    138a:	2c f4       	brge	.+10     	; 0x1396 <CLCD_voidSendData+0x29e>
		__ticks = 1;
    138c:	81 e0       	ldi	r24, 0x01	; 1
    138e:	90 e0       	ldi	r25, 0x00	; 0
    1390:	9c 8b       	std	Y+20, r25	; 0x14
    1392:	8b 8b       	std	Y+19, r24	; 0x13
    1394:	3f c0       	rjmp	.+126    	; 0x1414 <CLCD_voidSendData+0x31c>
	else if (__tmp > 65535)
    1396:	6d 89       	ldd	r22, Y+21	; 0x15
    1398:	7e 89       	ldd	r23, Y+22	; 0x16
    139a:	8f 89       	ldd	r24, Y+23	; 0x17
    139c:	98 8d       	ldd	r25, Y+24	; 0x18
    139e:	20 e0       	ldi	r18, 0x00	; 0
    13a0:	3f ef       	ldi	r19, 0xFF	; 255
    13a2:	4f e7       	ldi	r20, 0x7F	; 127
    13a4:	57 e4       	ldi	r21, 0x47	; 71
    13a6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    13aa:	18 16       	cp	r1, r24
    13ac:	4c f5       	brge	.+82     	; 0x1400 <CLCD_voidSendData+0x308>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13ae:	69 8d       	ldd	r22, Y+25	; 0x19
    13b0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    13b2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    13b4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    13b6:	20 e0       	ldi	r18, 0x00	; 0
    13b8:	30 e0       	ldi	r19, 0x00	; 0
    13ba:	40 e2       	ldi	r20, 0x20	; 32
    13bc:	51 e4       	ldi	r21, 0x41	; 65
    13be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13c2:	dc 01       	movw	r26, r24
    13c4:	cb 01       	movw	r24, r22
    13c6:	bc 01       	movw	r22, r24
    13c8:	cd 01       	movw	r24, r26
    13ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13ce:	dc 01       	movw	r26, r24
    13d0:	cb 01       	movw	r24, r22
    13d2:	9c 8b       	std	Y+20, r25	; 0x14
    13d4:	8b 8b       	std	Y+19, r24	; 0x13
    13d6:	0f c0       	rjmp	.+30     	; 0x13f6 <CLCD_voidSendData+0x2fe>
    13d8:	88 ec       	ldi	r24, 0xC8	; 200
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	9a 8b       	std	Y+18, r25	; 0x12
    13de:	89 8b       	std	Y+17, r24	; 0x11
    13e0:	89 89       	ldd	r24, Y+17	; 0x11
    13e2:	9a 89       	ldd	r25, Y+18	; 0x12
    13e4:	01 97       	sbiw	r24, 0x01	; 1
    13e6:	f1 f7       	brne	.-4      	; 0x13e4 <CLCD_voidSendData+0x2ec>
    13e8:	9a 8b       	std	Y+18, r25	; 0x12
    13ea:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13ec:	8b 89       	ldd	r24, Y+19	; 0x13
    13ee:	9c 89       	ldd	r25, Y+20	; 0x14
    13f0:	01 97       	sbiw	r24, 0x01	; 1
    13f2:	9c 8b       	std	Y+20, r25	; 0x14
    13f4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13f6:	8b 89       	ldd	r24, Y+19	; 0x13
    13f8:	9c 89       	ldd	r25, Y+20	; 0x14
    13fa:	00 97       	sbiw	r24, 0x00	; 0
    13fc:	69 f7       	brne	.-38     	; 0x13d8 <CLCD_voidSendData+0x2e0>
    13fe:	14 c0       	rjmp	.+40     	; 0x1428 <CLCD_voidSendData+0x330>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1400:	6d 89       	ldd	r22, Y+21	; 0x15
    1402:	7e 89       	ldd	r23, Y+22	; 0x16
    1404:	8f 89       	ldd	r24, Y+23	; 0x17
    1406:	98 8d       	ldd	r25, Y+24	; 0x18
    1408:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    140c:	dc 01       	movw	r26, r24
    140e:	cb 01       	movw	r24, r22
    1410:	9c 8b       	std	Y+20, r25	; 0x14
    1412:	8b 8b       	std	Y+19, r24	; 0x13
    1414:	8b 89       	ldd	r24, Y+19	; 0x13
    1416:	9c 89       	ldd	r25, Y+20	; 0x14
    1418:	98 8b       	std	Y+16, r25	; 0x10
    141a:	8f 87       	std	Y+15, r24	; 0x0f
    141c:	8f 85       	ldd	r24, Y+15	; 0x0f
    141e:	98 89       	ldd	r25, Y+16	; 0x10
    1420:	01 97       	sbiw	r24, 0x01	; 1
    1422:	f1 f7       	brne	.-4      	; 0x1420 <CLCD_voidSendData+0x328>
    1424:	98 8b       	std	Y+16, r25	; 0x10
    1426:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	DIO_u8SetPinValue(CLCD_CTRL_PORT,CLCD_E_PIN,DIO_u8PIN_LOW);
    1428:	80 e0       	ldi	r24, 0x00	; 0
    142a:	62 e0       	ldi	r22, 0x02	; 2
    142c:	40 e0       	ldi	r20, 0x00	; 0
    142e:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <DIO_u8SetPinValue>
    1432:	80 e0       	ldi	r24, 0x00	; 0
    1434:	90 e0       	ldi	r25, 0x00	; 0
    1436:	a0 ea       	ldi	r26, 0xA0	; 160
    1438:	b0 e4       	ldi	r27, 0x40	; 64
    143a:	8b 87       	std	Y+11, r24	; 0x0b
    143c:	9c 87       	std	Y+12, r25	; 0x0c
    143e:	ad 87       	std	Y+13, r26	; 0x0d
    1440:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1442:	6b 85       	ldd	r22, Y+11	; 0x0b
    1444:	7c 85       	ldd	r23, Y+12	; 0x0c
    1446:	8d 85       	ldd	r24, Y+13	; 0x0d
    1448:	9e 85       	ldd	r25, Y+14	; 0x0e
    144a:	20 e0       	ldi	r18, 0x00	; 0
    144c:	30 e0       	ldi	r19, 0x00	; 0
    144e:	4a ef       	ldi	r20, 0xFA	; 250
    1450:	54 e4       	ldi	r21, 0x44	; 68
    1452:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1456:	dc 01       	movw	r26, r24
    1458:	cb 01       	movw	r24, r22
    145a:	8f 83       	std	Y+7, r24	; 0x07
    145c:	98 87       	std	Y+8, r25	; 0x08
    145e:	a9 87       	std	Y+9, r26	; 0x09
    1460:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1462:	6f 81       	ldd	r22, Y+7	; 0x07
    1464:	78 85       	ldd	r23, Y+8	; 0x08
    1466:	89 85       	ldd	r24, Y+9	; 0x09
    1468:	9a 85       	ldd	r25, Y+10	; 0x0a
    146a:	20 e0       	ldi	r18, 0x00	; 0
    146c:	30 e0       	ldi	r19, 0x00	; 0
    146e:	40 e8       	ldi	r20, 0x80	; 128
    1470:	5f e3       	ldi	r21, 0x3F	; 63
    1472:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1476:	88 23       	and	r24, r24
    1478:	2c f4       	brge	.+10     	; 0x1484 <CLCD_voidSendData+0x38c>
		__ticks = 1;
    147a:	81 e0       	ldi	r24, 0x01	; 1
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	9e 83       	std	Y+6, r25	; 0x06
    1480:	8d 83       	std	Y+5, r24	; 0x05
    1482:	3f c0       	rjmp	.+126    	; 0x1502 <CLCD_voidSendData+0x40a>
	else if (__tmp > 65535)
    1484:	6f 81       	ldd	r22, Y+7	; 0x07
    1486:	78 85       	ldd	r23, Y+8	; 0x08
    1488:	89 85       	ldd	r24, Y+9	; 0x09
    148a:	9a 85       	ldd	r25, Y+10	; 0x0a
    148c:	20 e0       	ldi	r18, 0x00	; 0
    148e:	3f ef       	ldi	r19, 0xFF	; 255
    1490:	4f e7       	ldi	r20, 0x7F	; 127
    1492:	57 e4       	ldi	r21, 0x47	; 71
    1494:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1498:	18 16       	cp	r1, r24
    149a:	4c f5       	brge	.+82     	; 0x14ee <CLCD_voidSendData+0x3f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    149c:	6b 85       	ldd	r22, Y+11	; 0x0b
    149e:	7c 85       	ldd	r23, Y+12	; 0x0c
    14a0:	8d 85       	ldd	r24, Y+13	; 0x0d
    14a2:	9e 85       	ldd	r25, Y+14	; 0x0e
    14a4:	20 e0       	ldi	r18, 0x00	; 0
    14a6:	30 e0       	ldi	r19, 0x00	; 0
    14a8:	40 e2       	ldi	r20, 0x20	; 32
    14aa:	51 e4       	ldi	r21, 0x41	; 65
    14ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14b0:	dc 01       	movw	r26, r24
    14b2:	cb 01       	movw	r24, r22
    14b4:	bc 01       	movw	r22, r24
    14b6:	cd 01       	movw	r24, r26
    14b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14bc:	dc 01       	movw	r26, r24
    14be:	cb 01       	movw	r24, r22
    14c0:	9e 83       	std	Y+6, r25	; 0x06
    14c2:	8d 83       	std	Y+5, r24	; 0x05
    14c4:	0f c0       	rjmp	.+30     	; 0x14e4 <CLCD_voidSendData+0x3ec>
    14c6:	88 ec       	ldi	r24, 0xC8	; 200
    14c8:	90 e0       	ldi	r25, 0x00	; 0
    14ca:	9c 83       	std	Y+4, r25	; 0x04
    14cc:	8b 83       	std	Y+3, r24	; 0x03
    14ce:	8b 81       	ldd	r24, Y+3	; 0x03
    14d0:	9c 81       	ldd	r25, Y+4	; 0x04
    14d2:	01 97       	sbiw	r24, 0x01	; 1
    14d4:	f1 f7       	brne	.-4      	; 0x14d2 <CLCD_voidSendData+0x3da>
    14d6:	9c 83       	std	Y+4, r25	; 0x04
    14d8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14da:	8d 81       	ldd	r24, Y+5	; 0x05
    14dc:	9e 81       	ldd	r25, Y+6	; 0x06
    14de:	01 97       	sbiw	r24, 0x01	; 1
    14e0:	9e 83       	std	Y+6, r25	; 0x06
    14e2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14e4:	8d 81       	ldd	r24, Y+5	; 0x05
    14e6:	9e 81       	ldd	r25, Y+6	; 0x06
    14e8:	00 97       	sbiw	r24, 0x00	; 0
    14ea:	69 f7       	brne	.-38     	; 0x14c6 <CLCD_voidSendData+0x3ce>
    14ec:	14 c0       	rjmp	.+40     	; 0x1516 <CLCD_voidSendData+0x41e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14ee:	6f 81       	ldd	r22, Y+7	; 0x07
    14f0:	78 85       	ldd	r23, Y+8	; 0x08
    14f2:	89 85       	ldd	r24, Y+9	; 0x09
    14f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    14f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14fa:	dc 01       	movw	r26, r24
    14fc:	cb 01       	movw	r24, r22
    14fe:	9e 83       	std	Y+6, r25	; 0x06
    1500:	8d 83       	std	Y+5, r24	; 0x05
    1502:	8d 81       	ldd	r24, Y+5	; 0x05
    1504:	9e 81       	ldd	r25, Y+6	; 0x06
    1506:	9a 83       	std	Y+2, r25	; 0x02
    1508:	89 83       	std	Y+1, r24	; 0x01
    150a:	89 81       	ldd	r24, Y+1	; 0x01
    150c:	9a 81       	ldd	r25, Y+2	; 0x02
    150e:	01 97       	sbiw	r24, 0x01	; 1
    1510:	f1 f7       	brne	.-4      	; 0x150e <CLCD_voidSendData+0x416>
    1512:	9a 83       	std	Y+2, r25	; 0x02
    1514:	89 83       	std	Y+1, r24	; 0x01



#endif

}
    1516:	ea 96       	adiw	r28, 0x3a	; 58
    1518:	0f b6       	in	r0, 0x3f	; 63
    151a:	f8 94       	cli
    151c:	de bf       	out	0x3e, r29	; 62
    151e:	0f be       	out	0x3f, r0	; 63
    1520:	cd bf       	out	0x3d, r28	; 61
    1522:	cf 91       	pop	r28
    1524:	df 91       	pop	r29
    1526:	1f 91       	pop	r17
    1528:	08 95       	ret

0000152a <CLCD_voidInit>:

void CLCD_voidInit(void)
{
    152a:	df 93       	push	r29
    152c:	cf 93       	push	r28
    152e:	cd b7       	in	r28, 0x3d	; 61
    1530:	de b7       	in	r29, 0x3e	; 62
    1532:	2e 97       	sbiw	r28, 0x0e	; 14
    1534:	0f b6       	in	r0, 0x3f	; 63
    1536:	f8 94       	cli
    1538:	de bf       	out	0x3e, r29	; 62
    153a:	0f be       	out	0x3f, r0	; 63
    153c:	cd bf       	out	0x3d, r28	; 61
    153e:	80 e0       	ldi	r24, 0x00	; 0
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	a0 e2       	ldi	r26, 0x20	; 32
    1544:	b2 e4       	ldi	r27, 0x42	; 66
    1546:	8b 87       	std	Y+11, r24	; 0x0b
    1548:	9c 87       	std	Y+12, r25	; 0x0c
    154a:	ad 87       	std	Y+13, r26	; 0x0d
    154c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    154e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1550:	7c 85       	ldd	r23, Y+12	; 0x0c
    1552:	8d 85       	ldd	r24, Y+13	; 0x0d
    1554:	9e 85       	ldd	r25, Y+14	; 0x0e
    1556:	20 e0       	ldi	r18, 0x00	; 0
    1558:	30 e0       	ldi	r19, 0x00	; 0
    155a:	4a ef       	ldi	r20, 0xFA	; 250
    155c:	54 e4       	ldi	r21, 0x44	; 68
    155e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1562:	dc 01       	movw	r26, r24
    1564:	cb 01       	movw	r24, r22
    1566:	8f 83       	std	Y+7, r24	; 0x07
    1568:	98 87       	std	Y+8, r25	; 0x08
    156a:	a9 87       	std	Y+9, r26	; 0x09
    156c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    156e:	6f 81       	ldd	r22, Y+7	; 0x07
    1570:	78 85       	ldd	r23, Y+8	; 0x08
    1572:	89 85       	ldd	r24, Y+9	; 0x09
    1574:	9a 85       	ldd	r25, Y+10	; 0x0a
    1576:	20 e0       	ldi	r18, 0x00	; 0
    1578:	30 e0       	ldi	r19, 0x00	; 0
    157a:	40 e8       	ldi	r20, 0x80	; 128
    157c:	5f e3       	ldi	r21, 0x3F	; 63
    157e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1582:	88 23       	and	r24, r24
    1584:	2c f4       	brge	.+10     	; 0x1590 <CLCD_voidInit+0x66>
		__ticks = 1;
    1586:	81 e0       	ldi	r24, 0x01	; 1
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	9e 83       	std	Y+6, r25	; 0x06
    158c:	8d 83       	std	Y+5, r24	; 0x05
    158e:	3f c0       	rjmp	.+126    	; 0x160e <CLCD_voidInit+0xe4>
	else if (__tmp > 65535)
    1590:	6f 81       	ldd	r22, Y+7	; 0x07
    1592:	78 85       	ldd	r23, Y+8	; 0x08
    1594:	89 85       	ldd	r24, Y+9	; 0x09
    1596:	9a 85       	ldd	r25, Y+10	; 0x0a
    1598:	20 e0       	ldi	r18, 0x00	; 0
    159a:	3f ef       	ldi	r19, 0xFF	; 255
    159c:	4f e7       	ldi	r20, 0x7F	; 127
    159e:	57 e4       	ldi	r21, 0x47	; 71
    15a0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15a4:	18 16       	cp	r1, r24
    15a6:	4c f5       	brge	.+82     	; 0x15fa <CLCD_voidInit+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15a8:	6b 85       	ldd	r22, Y+11	; 0x0b
    15aa:	7c 85       	ldd	r23, Y+12	; 0x0c
    15ac:	8d 85       	ldd	r24, Y+13	; 0x0d
    15ae:	9e 85       	ldd	r25, Y+14	; 0x0e
    15b0:	20 e0       	ldi	r18, 0x00	; 0
    15b2:	30 e0       	ldi	r19, 0x00	; 0
    15b4:	40 e2       	ldi	r20, 0x20	; 32
    15b6:	51 e4       	ldi	r21, 0x41	; 65
    15b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15bc:	dc 01       	movw	r26, r24
    15be:	cb 01       	movw	r24, r22
    15c0:	bc 01       	movw	r22, r24
    15c2:	cd 01       	movw	r24, r26
    15c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15c8:	dc 01       	movw	r26, r24
    15ca:	cb 01       	movw	r24, r22
    15cc:	9e 83       	std	Y+6, r25	; 0x06
    15ce:	8d 83       	std	Y+5, r24	; 0x05
    15d0:	0f c0       	rjmp	.+30     	; 0x15f0 <CLCD_voidInit+0xc6>
    15d2:	88 ec       	ldi	r24, 0xC8	; 200
    15d4:	90 e0       	ldi	r25, 0x00	; 0
    15d6:	9c 83       	std	Y+4, r25	; 0x04
    15d8:	8b 83       	std	Y+3, r24	; 0x03
    15da:	8b 81       	ldd	r24, Y+3	; 0x03
    15dc:	9c 81       	ldd	r25, Y+4	; 0x04
    15de:	01 97       	sbiw	r24, 0x01	; 1
    15e0:	f1 f7       	brne	.-4      	; 0x15de <CLCD_voidInit+0xb4>
    15e2:	9c 83       	std	Y+4, r25	; 0x04
    15e4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15e6:	8d 81       	ldd	r24, Y+5	; 0x05
    15e8:	9e 81       	ldd	r25, Y+6	; 0x06
    15ea:	01 97       	sbiw	r24, 0x01	; 1
    15ec:	9e 83       	std	Y+6, r25	; 0x06
    15ee:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15f0:	8d 81       	ldd	r24, Y+5	; 0x05
    15f2:	9e 81       	ldd	r25, Y+6	; 0x06
    15f4:	00 97       	sbiw	r24, 0x00	; 0
    15f6:	69 f7       	brne	.-38     	; 0x15d2 <CLCD_voidInit+0xa8>
    15f8:	14 c0       	rjmp	.+40     	; 0x1622 <CLCD_voidInit+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15fa:	6f 81       	ldd	r22, Y+7	; 0x07
    15fc:	78 85       	ldd	r23, Y+8	; 0x08
    15fe:	89 85       	ldd	r24, Y+9	; 0x09
    1600:	9a 85       	ldd	r25, Y+10	; 0x0a
    1602:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1606:	dc 01       	movw	r26, r24
    1608:	cb 01       	movw	r24, r22
    160a:	9e 83       	std	Y+6, r25	; 0x06
    160c:	8d 83       	std	Y+5, r24	; 0x05
    160e:	8d 81       	ldd	r24, Y+5	; 0x05
    1610:	9e 81       	ldd	r25, Y+6	; 0x06
    1612:	9a 83       	std	Y+2, r25	; 0x02
    1614:	89 83       	std	Y+1, r24	; 0x01
    1616:	89 81       	ldd	r24, Y+1	; 0x01
    1618:	9a 81       	ldd	r25, Y+2	; 0x02
    161a:	01 97       	sbiw	r24, 0x01	; 1
    161c:	f1 f7       	brne	.-4      	; 0x161a <CLCD_voidInit+0xf0>
    161e:	9a 83       	std	Y+2, r25	; 0x02
    1620:	89 83       	std	Y+1, r24	; 0x01
	C_LCD_voidSendCommand(0x01); /* 1 or 0x01 or 0b00000001*/

#elif   MODE_SELECT ==_4_BIT_MODE

	/* Function set command : 2 lines , 5*8 font size */
	C_LCD_voidSendCommand(0x33);
    1622:	83 e3       	ldi	r24, 0x33	; 51
    1624:	0e 94 63 06 	call	0xcc6	; 0xcc6 <C_LCD_voidSendCommand>
	C_LCD_voidSendCommand(0x32);
    1628:	82 e3       	ldi	r24, 0x32	; 50
    162a:	0e 94 63 06 	call	0xcc6	; 0xcc6 <C_LCD_voidSendCommand>
	C_LCD_voidSendCommand(0x28);   /* 0bNFXXXXXX  --> N: no of lines F: font size*/
    162e:	88 e2       	ldi	r24, 0x28	; 40
    1630:	0e 94 63 06 	call	0xcc6	; 0xcc6 <C_LCD_voidSendCommand>


	/*Display on off control : disable enable , disable cursor , no blink cursor*/
	C_LCD_voidSendCommand(0x0C);
    1634:	8c e0       	ldi	r24, 0x0C	; 12
    1636:	0e 94 63 06 	call	0xcc6	; 0xcc6 <C_LCD_voidSendCommand>
	C_LCD_voidSendCommand(0x02);
    163a:	82 e0       	ldi	r24, 0x02	; 2
    163c:	0e 94 63 06 	call	0xcc6	; 0xcc6 <C_LCD_voidSendCommand>

	C_LCD_voidSendCommand(0x06);
    1640:	86 e0       	ldi	r24, 0x06	; 6
    1642:	0e 94 63 06 	call	0xcc6	; 0xcc6 <C_LCD_voidSendCommand>

	/* Clear display */
	C_LCD_voidSendCommand(0x01);
    1646:	81 e0       	ldi	r24, 0x01	; 1
    1648:	0e 94 63 06 	call	0xcc6	; 0xcc6 <C_LCD_voidSendCommand>


#endif


}
    164c:	2e 96       	adiw	r28, 0x0e	; 14
    164e:	0f b6       	in	r0, 0x3f	; 63
    1650:	f8 94       	cli
    1652:	de bf       	out	0x3e, r29	; 62
    1654:	0f be       	out	0x3f, r0	; 63
    1656:	cd bf       	out	0x3d, r28	; 61
    1658:	cf 91       	pop	r28
    165a:	df 91       	pop	r29
    165c:	08 95       	ret

0000165e <CLCD_voidSendString>:

void CLCD_voidSendString(const char* Copy_pcString )
{
    165e:	df 93       	push	r29
    1660:	cf 93       	push	r28
    1662:	00 d0       	rcall	.+0      	; 0x1664 <CLCD_voidSendString+0x6>
    1664:	0f 92       	push	r0
    1666:	cd b7       	in	r28, 0x3d	; 61
    1668:	de b7       	in	r29, 0x3e	; 62
    166a:	9b 83       	std	Y+3, r25	; 0x03
    166c:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8Counter = 0;
    166e:	19 82       	std	Y+1, r1	; 0x01
    1670:	0e c0       	rjmp	.+28     	; 0x168e <CLCD_voidSendString+0x30>
	while (Copy_pcString[Local_u8Counter] != NULL)
	{
		CLCD_voidSendData(Copy_pcString[Local_u8Counter]);
    1672:	89 81       	ldd	r24, Y+1	; 0x01
    1674:	28 2f       	mov	r18, r24
    1676:	30 e0       	ldi	r19, 0x00	; 0
    1678:	8a 81       	ldd	r24, Y+2	; 0x02
    167a:	9b 81       	ldd	r25, Y+3	; 0x03
    167c:	fc 01       	movw	r30, r24
    167e:	e2 0f       	add	r30, r18
    1680:	f3 1f       	adc	r31, r19
    1682:	80 81       	ld	r24, Z
    1684:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <CLCD_voidSendData>
		Local_u8Counter++;
    1688:	89 81       	ldd	r24, Y+1	; 0x01
    168a:	8f 5f       	subi	r24, 0xFF	; 255
    168c:	89 83       	std	Y+1, r24	; 0x01
}

void CLCD_voidSendString(const char* Copy_pcString )
{
	u8 Local_u8Counter = 0;
	while (Copy_pcString[Local_u8Counter] != NULL)
    168e:	89 81       	ldd	r24, Y+1	; 0x01
    1690:	28 2f       	mov	r18, r24
    1692:	30 e0       	ldi	r19, 0x00	; 0
    1694:	8a 81       	ldd	r24, Y+2	; 0x02
    1696:	9b 81       	ldd	r25, Y+3	; 0x03
    1698:	fc 01       	movw	r30, r24
    169a:	e2 0f       	add	r30, r18
    169c:	f3 1f       	adc	r31, r19
    169e:	80 81       	ld	r24, Z
    16a0:	88 23       	and	r24, r24
    16a2:	39 f7       	brne	.-50     	; 0x1672 <CLCD_voidSendString+0x14>
	{
		CLCD_voidSendData(Copy_pcString[Local_u8Counter]);
		Local_u8Counter++;
	}
}
    16a4:	0f 90       	pop	r0
    16a6:	0f 90       	pop	r0
    16a8:	0f 90       	pop	r0
    16aa:	cf 91       	pop	r28
    16ac:	df 91       	pop	r29
    16ae:	08 95       	ret

000016b0 <CLCD_voidGoToXY>:

void CLCD_voidGoToXY(u8 Copy_u8Xpos, u8 Copy_u8Ypos)
{
    16b0:	df 93       	push	r29
    16b2:	cf 93       	push	r28
    16b4:	00 d0       	rcall	.+0      	; 0x16b6 <CLCD_voidGoToXY+0x6>
    16b6:	0f 92       	push	r0
    16b8:	cd b7       	in	r28, 0x3d	; 61
    16ba:	de b7       	in	r29, 0x3e	; 62
    16bc:	8a 83       	std	Y+2, r24	; 0x02
    16be:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8Adress=0;
    16c0:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_u8Xpos == 0)
    16c2:	8a 81       	ldd	r24, Y+2	; 0x02
    16c4:	88 23       	and	r24, r24
    16c6:	19 f4       	brne	.+6      	; 0x16ce <CLCD_voidGoToXY+0x1e>
	{
		Local_u8Adress = Copy_u8Ypos;
    16c8:	8b 81       	ldd	r24, Y+3	; 0x03
    16ca:	89 83       	std	Y+1, r24	; 0x01
    16cc:	06 c0       	rjmp	.+12     	; 0x16da <CLCD_voidGoToXY+0x2a>
	}
	else if (Copy_u8Xpos == 1)
    16ce:	8a 81       	ldd	r24, Y+2	; 0x02
    16d0:	81 30       	cpi	r24, 0x01	; 1
    16d2:	19 f4       	brne	.+6      	; 0x16da <CLCD_voidGoToXY+0x2a>
	{
		Local_u8Adress = Copy_u8Ypos+0x40;
    16d4:	8b 81       	ldd	r24, Y+3	; 0x03
    16d6:	80 5c       	subi	r24, 0xC0	; 192
    16d8:	89 83       	std	Y+1, r24	; 0x01
	}

	C_LCD_voidSendCommand(Local_u8Adress+128);
    16da:	89 81       	ldd	r24, Y+1	; 0x01
    16dc:	80 58       	subi	r24, 0x80	; 128
    16de:	0e 94 63 06 	call	0xcc6	; 0xcc6 <C_LCD_voidSendCommand>



}
    16e2:	0f 90       	pop	r0
    16e4:	0f 90       	pop	r0
    16e6:	0f 90       	pop	r0
    16e8:	cf 91       	pop	r28
    16ea:	df 91       	pop	r29
    16ec:	08 95       	ret

000016ee <CLCD_voidWriteSpecialCharacter>:

void CLCD_voidWriteSpecialCharacter(u8* Copy_pu8Pattern, u8 Copy_u8PatternNumber, u8 Copy_u8XPos, u8 Copy_u8YPos)
{
    16ee:	df 93       	push	r29
    16f0:	cf 93       	push	r28
    16f2:	cd b7       	in	r28, 0x3d	; 61
    16f4:	de b7       	in	r29, 0x3e	; 62
    16f6:	27 97       	sbiw	r28, 0x07	; 7
    16f8:	0f b6       	in	r0, 0x3f	; 63
    16fa:	f8 94       	cli
    16fc:	de bf       	out	0x3e, r29	; 62
    16fe:	0f be       	out	0x3f, r0	; 63
    1700:	cd bf       	out	0x3d, r28	; 61
    1702:	9c 83       	std	Y+4, r25	; 0x04
    1704:	8b 83       	std	Y+3, r24	; 0x03
    1706:	6d 83       	std	Y+5, r22	; 0x05
    1708:	4e 83       	std	Y+6, r20	; 0x06
    170a:	2f 83       	std	Y+7, r18	; 0x07
	u8 Local_u8CGRAMAddress= 0, Local_u8Iterator;
    170c:	1a 82       	std	Y+2, r1	; 0x02
	/* Calculate the CGRAM address whose each block is 8 bytes */
	Local_u8CGRAMAddress =Copy_u8PatternNumber*8;
    170e:	8d 81       	ldd	r24, Y+5	; 0x05
    1710:	88 2f       	mov	r24, r24
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	88 0f       	add	r24, r24
    1716:	99 1f       	adc	r25, r25
    1718:	88 0f       	add	r24, r24
    171a:	99 1f       	adc	r25, r25
    171c:	88 0f       	add	r24, r24
    171e:	99 1f       	adc	r25, r25
    1720:	8a 83       	std	Y+2, r24	; 0x02

	/* Send CGRAM Address command to LCD, with setting bit 6, clearing bit 7*/
	C_LCD_voidSendCommand(Local_u8CGRAMAddress+64);
    1722:	8a 81       	ldd	r24, Y+2	; 0x02
    1724:	80 5c       	subi	r24, 0xC0	; 192
    1726:	0e 94 63 06 	call	0xcc6	; 0xcc6 <C_LCD_voidSendCommand>

	/* Write the pattern into CGRAM */

	for (Local_u8Iterator=0;Local_u8Iterator<8;Local_u8Iterator++)
    172a:	19 82       	std	Y+1, r1	; 0x01
    172c:	0e c0       	rjmp	.+28     	; 0x174a <CLCD_voidWriteSpecialCharacter+0x5c>
	{
		CLCD_voidSendData(Copy_pu8Pattern[Local_u8Iterator]);
    172e:	89 81       	ldd	r24, Y+1	; 0x01
    1730:	28 2f       	mov	r18, r24
    1732:	30 e0       	ldi	r19, 0x00	; 0
    1734:	8b 81       	ldd	r24, Y+3	; 0x03
    1736:	9c 81       	ldd	r25, Y+4	; 0x04
    1738:	fc 01       	movw	r30, r24
    173a:	e2 0f       	add	r30, r18
    173c:	f3 1f       	adc	r31, r19
    173e:	80 81       	ld	r24, Z
    1740:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <CLCD_voidSendData>
	/* Send CGRAM Address command to LCD, with setting bit 6, clearing bit 7*/
	C_LCD_voidSendCommand(Local_u8CGRAMAddress+64);

	/* Write the pattern into CGRAM */

	for (Local_u8Iterator=0;Local_u8Iterator<8;Local_u8Iterator++)
    1744:	89 81       	ldd	r24, Y+1	; 0x01
    1746:	8f 5f       	subi	r24, 0xFF	; 255
    1748:	89 83       	std	Y+1, r24	; 0x01
    174a:	89 81       	ldd	r24, Y+1	; 0x01
    174c:	88 30       	cpi	r24, 0x08	; 8
    174e:	78 f3       	brcs	.-34     	; 0x172e <CLCD_voidWriteSpecialCharacter+0x40>
	{
		CLCD_voidSendData(Copy_pu8Pattern[Local_u8Iterator]);
	}

	/* go back to the DDRAM to display the Pattern*/
	CLCD_voidGoToXY(Copy_u8XPos,Copy_u8YPos);
    1750:	8e 81       	ldd	r24, Y+6	; 0x06
    1752:	6f 81       	ldd	r22, Y+7	; 0x07
    1754:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
	/* Display the pattern written in the CGRAM*/
	CLCD_voidSendData(Copy_u8PatternNumber);
    1758:	8d 81       	ldd	r24, Y+5	; 0x05
    175a:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <CLCD_voidSendData>
}
    175e:	27 96       	adiw	r28, 0x07	; 7
    1760:	0f b6       	in	r0, 0x3f	; 63
    1762:	f8 94       	cli
    1764:	de bf       	out	0x3e, r29	; 62
    1766:	0f be       	out	0x3f, r0	; 63
    1768:	cd bf       	out	0x3d, r28	; 61
    176a:	cf 91       	pop	r28
    176c:	df 91       	pop	r29
    176e:	08 95       	ret

00001770 <CLCD_VoidWriteNumber>:

void CLCD_VoidWriteNumber(f32 Copy_u32Number)
{
    1770:	0f 93       	push	r16
    1772:	1f 93       	push	r17
    1774:	df 93       	push	r29
    1776:	cf 93       	push	r28
    1778:	cd b7       	in	r28, 0x3d	; 61
    177a:	de b7       	in	r29, 0x3e	; 62
    177c:	6d 97       	sbiw	r28, 0x1d	; 29
    177e:	0f b6       	in	r0, 0x3f	; 63
    1780:	f8 94       	cli
    1782:	de bf       	out	0x3e, r29	; 62
    1784:	0f be       	out	0x3f, r0	; 63
    1786:	cd bf       	out	0x3d, r28	; 61
    1788:	6a 8f       	std	Y+26, r22	; 0x1a
    178a:	7b 8f       	std	Y+27, r23	; 0x1b
    178c:	8c 8f       	std	Y+28, r24	; 0x1c
    178e:	9d 8f       	std	Y+29, r25	; 0x1d
	s32 Local_s32Number = Copy_u32Number;
    1790:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1792:	7b 8d       	ldd	r23, Y+27	; 0x1b
    1794:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1796:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1798:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
    179c:	dc 01       	movw	r26, r24
    179e:	cb 01       	movw	r24, r22
    17a0:	8a 83       	std	Y+2, r24	; 0x02
    17a2:	9b 83       	std	Y+3, r25	; 0x03
    17a4:	ac 83       	std	Y+4, r26	; 0x04
    17a6:	bd 83       	std	Y+5, r27	; 0x05

	if(Local_s32Number == 0)
    17a8:	8a 81       	ldd	r24, Y+2	; 0x02
    17aa:	9b 81       	ldd	r25, Y+3	; 0x03
    17ac:	ac 81       	ldd	r26, Y+4	; 0x04
    17ae:	bd 81       	ldd	r27, Y+5	; 0x05
    17b0:	00 97       	sbiw	r24, 0x00	; 0
    17b2:	a1 05       	cpc	r26, r1
    17b4:	b1 05       	cpc	r27, r1
    17b6:	21 f4       	brne	.+8      	; 0x17c0 <CLCD_VoidWriteNumber+0x50>
	{
		CLCD_voidSendData('0');
    17b8:	80 e3       	ldi	r24, 0x30	; 48
    17ba:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <CLCD_voidSendData>
    17be:	18 c0       	rjmp	.+48     	; 0x17f0 <CLCD_VoidWriteNumber+0x80>
	}
	else if (Local_s32Number <0)
    17c0:	8a 81       	ldd	r24, Y+2	; 0x02
    17c2:	9b 81       	ldd	r25, Y+3	; 0x03
    17c4:	ac 81       	ldd	r26, Y+4	; 0x04
    17c6:	bd 81       	ldd	r27, Y+5	; 0x05
    17c8:	bb 23       	and	r27, r27
    17ca:	94 f4       	brge	.+36     	; 0x17f0 <CLCD_VoidWriteNumber+0x80>
	{
		CLCD_voidSendData('-');
    17cc:	8d e2       	ldi	r24, 0x2D	; 45
    17ce:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <CLCD_voidSendData>
		Local_s32Number = Local_s32Number *(-1);
    17d2:	8a 81       	ldd	r24, Y+2	; 0x02
    17d4:	9b 81       	ldd	r25, Y+3	; 0x03
    17d6:	ac 81       	ldd	r26, Y+4	; 0x04
    17d8:	bd 81       	ldd	r27, Y+5	; 0x05
    17da:	b0 95       	com	r27
    17dc:	a0 95       	com	r26
    17de:	90 95       	com	r25
    17e0:	81 95       	neg	r24
    17e2:	9f 4f       	sbci	r25, 0xFF	; 255
    17e4:	af 4f       	sbci	r26, 0xFF	; 255
    17e6:	bf 4f       	sbci	r27, 0xFF	; 255
    17e8:	8a 83       	std	Y+2, r24	; 0x02
    17ea:	9b 83       	std	Y+3, r25	; 0x03
    17ec:	ac 83       	std	Y+4, r26	; 0x04
    17ee:	bd 83       	std	Y+5, r27	; 0x05

	}
	u8 Local_u8Array[20]={0};
    17f0:	84 e1       	ldi	r24, 0x14	; 20
    17f2:	fe 01       	movw	r30, r28
    17f4:	36 96       	adiw	r30, 0x06	; 6
    17f6:	df 01       	movw	r26, r30
    17f8:	98 2f       	mov	r25, r24
    17fa:	1d 92       	st	X+, r1
    17fc:	9a 95       	dec	r25
    17fe:	e9 f7       	brne	.-6      	; 0x17fa <CLCD_VoidWriteNumber+0x8a>
	s8 local_s8Counter =0;
    1800:	19 82       	std	Y+1, r1	; 0x01
    1802:	2f c0       	rjmp	.+94     	; 0x1862 <CLCD_VoidWriteNumber+0xf2>
	while (Local_s32Number != 0)
	{
		Local_u8Array[local_s8Counter]= Local_s32Number%10;
    1804:	89 81       	ldd	r24, Y+1	; 0x01
    1806:	08 2f       	mov	r16, r24
    1808:	11 27       	eor	r17, r17
    180a:	07 fd       	sbrc	r16, 7
    180c:	10 95       	com	r17
    180e:	8a 81       	ldd	r24, Y+2	; 0x02
    1810:	9b 81       	ldd	r25, Y+3	; 0x03
    1812:	ac 81       	ldd	r26, Y+4	; 0x04
    1814:	bd 81       	ldd	r27, Y+5	; 0x05
    1816:	2a e0       	ldi	r18, 0x0A	; 10
    1818:	30 e0       	ldi	r19, 0x00	; 0
    181a:	40 e0       	ldi	r20, 0x00	; 0
    181c:	50 e0       	ldi	r21, 0x00	; 0
    181e:	bc 01       	movw	r22, r24
    1820:	cd 01       	movw	r24, r26
    1822:	0e 94 c6 2b 	call	0x578c	; 0x578c <__divmodsi4>
    1826:	dc 01       	movw	r26, r24
    1828:	cb 01       	movw	r24, r22
    182a:	28 2f       	mov	r18, r24
    182c:	ce 01       	movw	r24, r28
    182e:	06 96       	adiw	r24, 0x06	; 6
    1830:	fc 01       	movw	r30, r24
    1832:	e0 0f       	add	r30, r16
    1834:	f1 1f       	adc	r31, r17
    1836:	20 83       	st	Z, r18
		Local_s32Number/=10;
    1838:	8a 81       	ldd	r24, Y+2	; 0x02
    183a:	9b 81       	ldd	r25, Y+3	; 0x03
    183c:	ac 81       	ldd	r26, Y+4	; 0x04
    183e:	bd 81       	ldd	r27, Y+5	; 0x05
    1840:	2a e0       	ldi	r18, 0x0A	; 10
    1842:	30 e0       	ldi	r19, 0x00	; 0
    1844:	40 e0       	ldi	r20, 0x00	; 0
    1846:	50 e0       	ldi	r21, 0x00	; 0
    1848:	bc 01       	movw	r22, r24
    184a:	cd 01       	movw	r24, r26
    184c:	0e 94 c6 2b 	call	0x578c	; 0x578c <__divmodsi4>
    1850:	da 01       	movw	r26, r20
    1852:	c9 01       	movw	r24, r18
    1854:	8a 83       	std	Y+2, r24	; 0x02
    1856:	9b 83       	std	Y+3, r25	; 0x03
    1858:	ac 83       	std	Y+4, r26	; 0x04
    185a:	bd 83       	std	Y+5, r27	; 0x05
		local_s8Counter++;
    185c:	89 81       	ldd	r24, Y+1	; 0x01
    185e:	8f 5f       	subi	r24, 0xFF	; 255
    1860:	89 83       	std	Y+1, r24	; 0x01
		Local_s32Number = Local_s32Number *(-1);

	}
	u8 Local_u8Array[20]={0};
	s8 local_s8Counter =0;
	while (Local_s32Number != 0)
    1862:	8a 81       	ldd	r24, Y+2	; 0x02
    1864:	9b 81       	ldd	r25, Y+3	; 0x03
    1866:	ac 81       	ldd	r26, Y+4	; 0x04
    1868:	bd 81       	ldd	r27, Y+5	; 0x05
    186a:	00 97       	sbiw	r24, 0x00	; 0
    186c:	a1 05       	cpc	r26, r1
    186e:	b1 05       	cpc	r27, r1
    1870:	49 f6       	brne	.-110    	; 0x1804 <CLCD_VoidWriteNumber+0x94>
	{
		Local_u8Array[local_s8Counter]= Local_s32Number%10;
		Local_s32Number/=10;
		local_s8Counter++;
	}
	local_s8Counter--;
    1872:	89 81       	ldd	r24, Y+1	; 0x01
    1874:	81 50       	subi	r24, 0x01	; 1
    1876:	89 83       	std	Y+1, r24	; 0x01
    1878:	11 c0       	rjmp	.+34     	; 0x189c <CLCD_VoidWriteNumber+0x12c>
	while (local_s8Counter>=0)
	{
		CLCD_voidSendData(Local_u8Array[local_s8Counter]+'0');
    187a:	89 81       	ldd	r24, Y+1	; 0x01
    187c:	28 2f       	mov	r18, r24
    187e:	33 27       	eor	r19, r19
    1880:	27 fd       	sbrc	r18, 7
    1882:	30 95       	com	r19
    1884:	ce 01       	movw	r24, r28
    1886:	06 96       	adiw	r24, 0x06	; 6
    1888:	fc 01       	movw	r30, r24
    188a:	e2 0f       	add	r30, r18
    188c:	f3 1f       	adc	r31, r19
    188e:	80 81       	ld	r24, Z
    1890:	80 5d       	subi	r24, 0xD0	; 208
    1892:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <CLCD_voidSendData>
		local_s8Counter--;
    1896:	89 81       	ldd	r24, Y+1	; 0x01
    1898:	81 50       	subi	r24, 0x01	; 1
    189a:	89 83       	std	Y+1, r24	; 0x01
		Local_u8Array[local_s8Counter]= Local_s32Number%10;
		Local_s32Number/=10;
		local_s8Counter++;
	}
	local_s8Counter--;
	while (local_s8Counter>=0)
    189c:	89 81       	ldd	r24, Y+1	; 0x01
    189e:	88 23       	and	r24, r24
    18a0:	64 f7       	brge	.-40     	; 0x187a <CLCD_VoidWriteNumber+0x10a>
		CLCD_voidSendData(Local_u8Array[local_s8Counter]+'0');
		local_s8Counter--;
	}


}
    18a2:	6d 96       	adiw	r28, 0x1d	; 29
    18a4:	0f b6       	in	r0, 0x3f	; 63
    18a6:	f8 94       	cli
    18a8:	de bf       	out	0x3e, r29	; 62
    18aa:	0f be       	out	0x3f, r0	; 63
    18ac:	cd bf       	out	0x3d, r28	; 61
    18ae:	cf 91       	pop	r28
    18b0:	df 91       	pop	r29
    18b2:	1f 91       	pop	r17
    18b4:	0f 91       	pop	r16
    18b6:	08 95       	ret

000018b8 <DIO_u8SetPinValue>:
//
//	return Local_u8ErrorState;
//}

u8 DIO_u8SetPinValue(u8 Copy_u8port, u8 Copy_u8Pin, u8 Copy_u8Value)
{
    18b8:	df 93       	push	r29
    18ba:	cf 93       	push	r28
    18bc:	cd b7       	in	r28, 0x3d	; 61
    18be:	de b7       	in	r29, 0x3e	; 62
    18c0:	28 97       	sbiw	r28, 0x08	; 8
    18c2:	0f b6       	in	r0, 0x3f	; 63
    18c4:	f8 94       	cli
    18c6:	de bf       	out	0x3e, r29	; 62
    18c8:	0f be       	out	0x3f, r0	; 63
    18ca:	cd bf       	out	0x3d, r28	; 61
    18cc:	8a 83       	std	Y+2, r24	; 0x02
    18ce:	6b 83       	std	Y+3, r22	; 0x03
    18d0:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=0;
    18d2:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8Pin<=DIO_u8PIN7)
    18d4:	8b 81       	ldd	r24, Y+3	; 0x03
    18d6:	88 30       	cpi	r24, 0x08	; 8
    18d8:	08 f0       	brcs	.+2      	; 0x18dc <DIO_u8SetPinValue+0x24>
    18da:	f4 c0       	rjmp	.+488    	; 0x1ac4 <DIO_u8SetPinValue+0x20c>
	{
		if(Copy_u8Value == DIO_u8PIN_LOW)
    18dc:	8c 81       	ldd	r24, Y+4	; 0x04
    18de:	88 23       	and	r24, r24
    18e0:	09 f0       	breq	.+2      	; 0x18e4 <DIO_u8SetPinValue+0x2c>
    18e2:	77 c0       	rjmp	.+238    	; 0x19d2 <DIO_u8SetPinValue+0x11a>
		{

			switch(Copy_u8port)
    18e4:	8a 81       	ldd	r24, Y+2	; 0x02
    18e6:	28 2f       	mov	r18, r24
    18e8:	30 e0       	ldi	r19, 0x00	; 0
    18ea:	38 87       	std	Y+8, r19	; 0x08
    18ec:	2f 83       	std	Y+7, r18	; 0x07
    18ee:	8f 81       	ldd	r24, Y+7	; 0x07
    18f0:	98 85       	ldd	r25, Y+8	; 0x08
    18f2:	81 30       	cpi	r24, 0x01	; 1
    18f4:	91 05       	cpc	r25, r1
    18f6:	59 f1       	breq	.+86     	; 0x194e <DIO_u8SetPinValue+0x96>
    18f8:	2f 81       	ldd	r18, Y+7	; 0x07
    18fa:	38 85       	ldd	r19, Y+8	; 0x08
    18fc:	22 30       	cpi	r18, 0x02	; 2
    18fe:	31 05       	cpc	r19, r1
    1900:	2c f4       	brge	.+10     	; 0x190c <DIO_u8SetPinValue+0x54>
    1902:	8f 81       	ldd	r24, Y+7	; 0x07
    1904:	98 85       	ldd	r25, Y+8	; 0x08
    1906:	00 97       	sbiw	r24, 0x00	; 0
    1908:	69 f0       	breq	.+26     	; 0x1924 <DIO_u8SetPinValue+0x6c>
    190a:	60 c0       	rjmp	.+192    	; 0x19cc <DIO_u8SetPinValue+0x114>
    190c:	2f 81       	ldd	r18, Y+7	; 0x07
    190e:	38 85       	ldd	r19, Y+8	; 0x08
    1910:	22 30       	cpi	r18, 0x02	; 2
    1912:	31 05       	cpc	r19, r1
    1914:	89 f1       	breq	.+98     	; 0x1978 <DIO_u8SetPinValue+0xc0>
    1916:	8f 81       	ldd	r24, Y+7	; 0x07
    1918:	98 85       	ldd	r25, Y+8	; 0x08
    191a:	83 30       	cpi	r24, 0x03	; 3
    191c:	91 05       	cpc	r25, r1
    191e:	09 f4       	brne	.+2      	; 0x1922 <DIO_u8SetPinValue+0x6a>
    1920:	40 c0       	rjmp	.+128    	; 0x19a2 <DIO_u8SetPinValue+0xea>
    1922:	54 c0       	rjmp	.+168    	; 0x19cc <DIO_u8SetPinValue+0x114>
			{
			case DIO_u8PORTA: CLR_BIT(PORTA,Copy_u8Pin); break;
    1924:	ab e3       	ldi	r26, 0x3B	; 59
    1926:	b0 e0       	ldi	r27, 0x00	; 0
    1928:	eb e3       	ldi	r30, 0x3B	; 59
    192a:	f0 e0       	ldi	r31, 0x00	; 0
    192c:	80 81       	ld	r24, Z
    192e:	48 2f       	mov	r20, r24
    1930:	8b 81       	ldd	r24, Y+3	; 0x03
    1932:	28 2f       	mov	r18, r24
    1934:	30 e0       	ldi	r19, 0x00	; 0
    1936:	81 e0       	ldi	r24, 0x01	; 1
    1938:	90 e0       	ldi	r25, 0x00	; 0
    193a:	02 2e       	mov	r0, r18
    193c:	02 c0       	rjmp	.+4      	; 0x1942 <DIO_u8SetPinValue+0x8a>
    193e:	88 0f       	add	r24, r24
    1940:	99 1f       	adc	r25, r25
    1942:	0a 94       	dec	r0
    1944:	e2 f7       	brpl	.-8      	; 0x193e <DIO_u8SetPinValue+0x86>
    1946:	80 95       	com	r24
    1948:	84 23       	and	r24, r20
    194a:	8c 93       	st	X, r24
    194c:	bd c0       	rjmp	.+378    	; 0x1ac8 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB: CLR_BIT(PORTB,Copy_u8Pin); break;
    194e:	a8 e3       	ldi	r26, 0x38	; 56
    1950:	b0 e0       	ldi	r27, 0x00	; 0
    1952:	e8 e3       	ldi	r30, 0x38	; 56
    1954:	f0 e0       	ldi	r31, 0x00	; 0
    1956:	80 81       	ld	r24, Z
    1958:	48 2f       	mov	r20, r24
    195a:	8b 81       	ldd	r24, Y+3	; 0x03
    195c:	28 2f       	mov	r18, r24
    195e:	30 e0       	ldi	r19, 0x00	; 0
    1960:	81 e0       	ldi	r24, 0x01	; 1
    1962:	90 e0       	ldi	r25, 0x00	; 0
    1964:	02 2e       	mov	r0, r18
    1966:	02 c0       	rjmp	.+4      	; 0x196c <DIO_u8SetPinValue+0xb4>
    1968:	88 0f       	add	r24, r24
    196a:	99 1f       	adc	r25, r25
    196c:	0a 94       	dec	r0
    196e:	e2 f7       	brpl	.-8      	; 0x1968 <DIO_u8SetPinValue+0xb0>
    1970:	80 95       	com	r24
    1972:	84 23       	and	r24, r20
    1974:	8c 93       	st	X, r24
    1976:	a8 c0       	rjmp	.+336    	; 0x1ac8 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC: CLR_BIT(PORTC,Copy_u8Pin); break;
    1978:	a5 e3       	ldi	r26, 0x35	; 53
    197a:	b0 e0       	ldi	r27, 0x00	; 0
    197c:	e5 e3       	ldi	r30, 0x35	; 53
    197e:	f0 e0       	ldi	r31, 0x00	; 0
    1980:	80 81       	ld	r24, Z
    1982:	48 2f       	mov	r20, r24
    1984:	8b 81       	ldd	r24, Y+3	; 0x03
    1986:	28 2f       	mov	r18, r24
    1988:	30 e0       	ldi	r19, 0x00	; 0
    198a:	81 e0       	ldi	r24, 0x01	; 1
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	02 2e       	mov	r0, r18
    1990:	02 c0       	rjmp	.+4      	; 0x1996 <DIO_u8SetPinValue+0xde>
    1992:	88 0f       	add	r24, r24
    1994:	99 1f       	adc	r25, r25
    1996:	0a 94       	dec	r0
    1998:	e2 f7       	brpl	.-8      	; 0x1992 <DIO_u8SetPinValue+0xda>
    199a:	80 95       	com	r24
    199c:	84 23       	and	r24, r20
    199e:	8c 93       	st	X, r24
    19a0:	93 c0       	rjmp	.+294    	; 0x1ac8 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD: CLR_BIT(PORTD,Copy_u8Pin); break;
    19a2:	a2 e3       	ldi	r26, 0x32	; 50
    19a4:	b0 e0       	ldi	r27, 0x00	; 0
    19a6:	e2 e3       	ldi	r30, 0x32	; 50
    19a8:	f0 e0       	ldi	r31, 0x00	; 0
    19aa:	80 81       	ld	r24, Z
    19ac:	48 2f       	mov	r20, r24
    19ae:	8b 81       	ldd	r24, Y+3	; 0x03
    19b0:	28 2f       	mov	r18, r24
    19b2:	30 e0       	ldi	r19, 0x00	; 0
    19b4:	81 e0       	ldi	r24, 0x01	; 1
    19b6:	90 e0       	ldi	r25, 0x00	; 0
    19b8:	02 2e       	mov	r0, r18
    19ba:	02 c0       	rjmp	.+4      	; 0x19c0 <DIO_u8SetPinValue+0x108>
    19bc:	88 0f       	add	r24, r24
    19be:	99 1f       	adc	r25, r25
    19c0:	0a 94       	dec	r0
    19c2:	e2 f7       	brpl	.-8      	; 0x19bc <DIO_u8SetPinValue+0x104>
    19c4:	80 95       	com	r24
    19c6:	84 23       	and	r24, r20
    19c8:	8c 93       	st	X, r24
    19ca:	7e c0       	rjmp	.+252    	; 0x1ac8 <DIO_u8SetPinValue+0x210>
			default: Local_u8ErrorState =1; break;
    19cc:	81 e0       	ldi	r24, 0x01	; 1
    19ce:	89 83       	std	Y+1, r24	; 0x01
    19d0:	7b c0       	rjmp	.+246    	; 0x1ac8 <DIO_u8SetPinValue+0x210>

			}
		}
		else if(Copy_u8Value == DIO_u8PIN_HIGH)
    19d2:	8c 81       	ldd	r24, Y+4	; 0x04
    19d4:	81 30       	cpi	r24, 0x01	; 1
    19d6:	09 f0       	breq	.+2      	; 0x19da <DIO_u8SetPinValue+0x122>
    19d8:	72 c0       	rjmp	.+228    	; 0x1abe <DIO_u8SetPinValue+0x206>
		{

			switch(Copy_u8port)
    19da:	8a 81       	ldd	r24, Y+2	; 0x02
    19dc:	28 2f       	mov	r18, r24
    19de:	30 e0       	ldi	r19, 0x00	; 0
    19e0:	3e 83       	std	Y+6, r19	; 0x06
    19e2:	2d 83       	std	Y+5, r18	; 0x05
    19e4:	8d 81       	ldd	r24, Y+5	; 0x05
    19e6:	9e 81       	ldd	r25, Y+6	; 0x06
    19e8:	81 30       	cpi	r24, 0x01	; 1
    19ea:	91 05       	cpc	r25, r1
    19ec:	49 f1       	breq	.+82     	; 0x1a40 <DIO_u8SetPinValue+0x188>
    19ee:	2d 81       	ldd	r18, Y+5	; 0x05
    19f0:	3e 81       	ldd	r19, Y+6	; 0x06
    19f2:	22 30       	cpi	r18, 0x02	; 2
    19f4:	31 05       	cpc	r19, r1
    19f6:	2c f4       	brge	.+10     	; 0x1a02 <DIO_u8SetPinValue+0x14a>
    19f8:	8d 81       	ldd	r24, Y+5	; 0x05
    19fa:	9e 81       	ldd	r25, Y+6	; 0x06
    19fc:	00 97       	sbiw	r24, 0x00	; 0
    19fe:	61 f0       	breq	.+24     	; 0x1a18 <DIO_u8SetPinValue+0x160>
    1a00:	5b c0       	rjmp	.+182    	; 0x1ab8 <DIO_u8SetPinValue+0x200>
    1a02:	2d 81       	ldd	r18, Y+5	; 0x05
    1a04:	3e 81       	ldd	r19, Y+6	; 0x06
    1a06:	22 30       	cpi	r18, 0x02	; 2
    1a08:	31 05       	cpc	r19, r1
    1a0a:	71 f1       	breq	.+92     	; 0x1a68 <DIO_u8SetPinValue+0x1b0>
    1a0c:	8d 81       	ldd	r24, Y+5	; 0x05
    1a0e:	9e 81       	ldd	r25, Y+6	; 0x06
    1a10:	83 30       	cpi	r24, 0x03	; 3
    1a12:	91 05       	cpc	r25, r1
    1a14:	e9 f1       	breq	.+122    	; 0x1a90 <DIO_u8SetPinValue+0x1d8>
    1a16:	50 c0       	rjmp	.+160    	; 0x1ab8 <DIO_u8SetPinValue+0x200>
			{
			case DIO_u8PORTA: SET_BIT(PORTA,Copy_u8Pin); break;
    1a18:	ab e3       	ldi	r26, 0x3B	; 59
    1a1a:	b0 e0       	ldi	r27, 0x00	; 0
    1a1c:	eb e3       	ldi	r30, 0x3B	; 59
    1a1e:	f0 e0       	ldi	r31, 0x00	; 0
    1a20:	80 81       	ld	r24, Z
    1a22:	48 2f       	mov	r20, r24
    1a24:	8b 81       	ldd	r24, Y+3	; 0x03
    1a26:	28 2f       	mov	r18, r24
    1a28:	30 e0       	ldi	r19, 0x00	; 0
    1a2a:	81 e0       	ldi	r24, 0x01	; 1
    1a2c:	90 e0       	ldi	r25, 0x00	; 0
    1a2e:	02 2e       	mov	r0, r18
    1a30:	02 c0       	rjmp	.+4      	; 0x1a36 <DIO_u8SetPinValue+0x17e>
    1a32:	88 0f       	add	r24, r24
    1a34:	99 1f       	adc	r25, r25
    1a36:	0a 94       	dec	r0
    1a38:	e2 f7       	brpl	.-8      	; 0x1a32 <DIO_u8SetPinValue+0x17a>
    1a3a:	84 2b       	or	r24, r20
    1a3c:	8c 93       	st	X, r24
    1a3e:	44 c0       	rjmp	.+136    	; 0x1ac8 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB: SET_BIT(PORTB,Copy_u8Pin); break;
    1a40:	a8 e3       	ldi	r26, 0x38	; 56
    1a42:	b0 e0       	ldi	r27, 0x00	; 0
    1a44:	e8 e3       	ldi	r30, 0x38	; 56
    1a46:	f0 e0       	ldi	r31, 0x00	; 0
    1a48:	80 81       	ld	r24, Z
    1a4a:	48 2f       	mov	r20, r24
    1a4c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a4e:	28 2f       	mov	r18, r24
    1a50:	30 e0       	ldi	r19, 0x00	; 0
    1a52:	81 e0       	ldi	r24, 0x01	; 1
    1a54:	90 e0       	ldi	r25, 0x00	; 0
    1a56:	02 2e       	mov	r0, r18
    1a58:	02 c0       	rjmp	.+4      	; 0x1a5e <DIO_u8SetPinValue+0x1a6>
    1a5a:	88 0f       	add	r24, r24
    1a5c:	99 1f       	adc	r25, r25
    1a5e:	0a 94       	dec	r0
    1a60:	e2 f7       	brpl	.-8      	; 0x1a5a <DIO_u8SetPinValue+0x1a2>
    1a62:	84 2b       	or	r24, r20
    1a64:	8c 93       	st	X, r24
    1a66:	30 c0       	rjmp	.+96     	; 0x1ac8 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC: SET_BIT(PORTC,Copy_u8Pin); break;
    1a68:	a5 e3       	ldi	r26, 0x35	; 53
    1a6a:	b0 e0       	ldi	r27, 0x00	; 0
    1a6c:	e5 e3       	ldi	r30, 0x35	; 53
    1a6e:	f0 e0       	ldi	r31, 0x00	; 0
    1a70:	80 81       	ld	r24, Z
    1a72:	48 2f       	mov	r20, r24
    1a74:	8b 81       	ldd	r24, Y+3	; 0x03
    1a76:	28 2f       	mov	r18, r24
    1a78:	30 e0       	ldi	r19, 0x00	; 0
    1a7a:	81 e0       	ldi	r24, 0x01	; 1
    1a7c:	90 e0       	ldi	r25, 0x00	; 0
    1a7e:	02 2e       	mov	r0, r18
    1a80:	02 c0       	rjmp	.+4      	; 0x1a86 <DIO_u8SetPinValue+0x1ce>
    1a82:	88 0f       	add	r24, r24
    1a84:	99 1f       	adc	r25, r25
    1a86:	0a 94       	dec	r0
    1a88:	e2 f7       	brpl	.-8      	; 0x1a82 <DIO_u8SetPinValue+0x1ca>
    1a8a:	84 2b       	or	r24, r20
    1a8c:	8c 93       	st	X, r24
    1a8e:	1c c0       	rjmp	.+56     	; 0x1ac8 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD: SET_BIT(PORTD,Copy_u8Pin); break;
    1a90:	a2 e3       	ldi	r26, 0x32	; 50
    1a92:	b0 e0       	ldi	r27, 0x00	; 0
    1a94:	e2 e3       	ldi	r30, 0x32	; 50
    1a96:	f0 e0       	ldi	r31, 0x00	; 0
    1a98:	80 81       	ld	r24, Z
    1a9a:	48 2f       	mov	r20, r24
    1a9c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a9e:	28 2f       	mov	r18, r24
    1aa0:	30 e0       	ldi	r19, 0x00	; 0
    1aa2:	81 e0       	ldi	r24, 0x01	; 1
    1aa4:	90 e0       	ldi	r25, 0x00	; 0
    1aa6:	02 2e       	mov	r0, r18
    1aa8:	02 c0       	rjmp	.+4      	; 0x1aae <DIO_u8SetPinValue+0x1f6>
    1aaa:	88 0f       	add	r24, r24
    1aac:	99 1f       	adc	r25, r25
    1aae:	0a 94       	dec	r0
    1ab0:	e2 f7       	brpl	.-8      	; 0x1aaa <DIO_u8SetPinValue+0x1f2>
    1ab2:	84 2b       	or	r24, r20
    1ab4:	8c 93       	st	X, r24
    1ab6:	08 c0       	rjmp	.+16     	; 0x1ac8 <DIO_u8SetPinValue+0x210>
			default: Local_u8ErrorState =1; break;
    1ab8:	81 e0       	ldi	r24, 0x01	; 1
    1aba:	89 83       	std	Y+1, r24	; 0x01
    1abc:	05 c0       	rjmp	.+10     	; 0x1ac8 <DIO_u8SetPinValue+0x210>

			}
		}
		else
		{
			Local_u8ErrorState = 1;
    1abe:	81 e0       	ldi	r24, 0x01	; 1
    1ac0:	89 83       	std	Y+1, r24	; 0x01
    1ac2:	02 c0       	rjmp	.+4      	; 0x1ac8 <DIO_u8SetPinValue+0x210>
		}

	}
	else
	{
		Local_u8ErrorState = 1;
    1ac4:	81 e0       	ldi	r24, 0x01	; 1
    1ac6:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
    1ac8:	89 81       	ldd	r24, Y+1	; 0x01
}
    1aca:	28 96       	adiw	r28, 0x08	; 8
    1acc:	0f b6       	in	r0, 0x3f	; 63
    1ace:	f8 94       	cli
    1ad0:	de bf       	out	0x3e, r29	; 62
    1ad2:	0f be       	out	0x3f, r0	; 63
    1ad4:	cd bf       	out	0x3d, r28	; 61
    1ad6:	cf 91       	pop	r28
    1ad8:	df 91       	pop	r29
    1ada:	08 95       	ret

00001adc <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue(u8 Copy_u8port, u8 Copy_u8Value)
{
    1adc:	df 93       	push	r29
    1ade:	cf 93       	push	r28
    1ae0:	00 d0       	rcall	.+0      	; 0x1ae2 <DIO_u8SetPortValue+0x6>
    1ae2:	00 d0       	rcall	.+0      	; 0x1ae4 <DIO_u8SetPortValue+0x8>
    1ae4:	0f 92       	push	r0
    1ae6:	cd b7       	in	r28, 0x3d	; 61
    1ae8:	de b7       	in	r29, 0x3e	; 62
    1aea:	8a 83       	std	Y+2, r24	; 0x02
    1aec:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=0;
    1aee:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8port<=DIO_u8PORTD)
    1af0:	8a 81       	ldd	r24, Y+2	; 0x02
    1af2:	84 30       	cpi	r24, 0x04	; 4
    1af4:	b0 f5       	brcc	.+108    	; 0x1b62 <DIO_u8SetPortValue+0x86>
	{
		switch(Copy_u8port)
    1af6:	8a 81       	ldd	r24, Y+2	; 0x02
    1af8:	28 2f       	mov	r18, r24
    1afa:	30 e0       	ldi	r19, 0x00	; 0
    1afc:	3d 83       	std	Y+5, r19	; 0x05
    1afe:	2c 83       	std	Y+4, r18	; 0x04
    1b00:	8c 81       	ldd	r24, Y+4	; 0x04
    1b02:	9d 81       	ldd	r25, Y+5	; 0x05
    1b04:	81 30       	cpi	r24, 0x01	; 1
    1b06:	91 05       	cpc	r25, r1
    1b08:	d1 f0       	breq	.+52     	; 0x1b3e <DIO_u8SetPortValue+0x62>
    1b0a:	2c 81       	ldd	r18, Y+4	; 0x04
    1b0c:	3d 81       	ldd	r19, Y+5	; 0x05
    1b0e:	22 30       	cpi	r18, 0x02	; 2
    1b10:	31 05       	cpc	r19, r1
    1b12:	2c f4       	brge	.+10     	; 0x1b1e <DIO_u8SetPortValue+0x42>
    1b14:	8c 81       	ldd	r24, Y+4	; 0x04
    1b16:	9d 81       	ldd	r25, Y+5	; 0x05
    1b18:	00 97       	sbiw	r24, 0x00	; 0
    1b1a:	61 f0       	breq	.+24     	; 0x1b34 <DIO_u8SetPortValue+0x58>
    1b1c:	1f c0       	rjmp	.+62     	; 0x1b5c <DIO_u8SetPortValue+0x80>
    1b1e:	2c 81       	ldd	r18, Y+4	; 0x04
    1b20:	3d 81       	ldd	r19, Y+5	; 0x05
    1b22:	22 30       	cpi	r18, 0x02	; 2
    1b24:	31 05       	cpc	r19, r1
    1b26:	81 f0       	breq	.+32     	; 0x1b48 <DIO_u8SetPortValue+0x6c>
    1b28:	8c 81       	ldd	r24, Y+4	; 0x04
    1b2a:	9d 81       	ldd	r25, Y+5	; 0x05
    1b2c:	83 30       	cpi	r24, 0x03	; 3
    1b2e:	91 05       	cpc	r25, r1
    1b30:	81 f0       	breq	.+32     	; 0x1b52 <DIO_u8SetPortValue+0x76>
    1b32:	14 c0       	rjmp	.+40     	; 0x1b5c <DIO_u8SetPortValue+0x80>
		{
		case DIO_u8PORTA: PORTA = Copy_u8Value; break;
    1b34:	eb e3       	ldi	r30, 0x3B	; 59
    1b36:	f0 e0       	ldi	r31, 0x00	; 0
    1b38:	8b 81       	ldd	r24, Y+3	; 0x03
    1b3a:	80 83       	st	Z, r24
    1b3c:	14 c0       	rjmp	.+40     	; 0x1b66 <DIO_u8SetPortValue+0x8a>
		case DIO_u8PORTB: PORTB = Copy_u8Value; break;
    1b3e:	e8 e3       	ldi	r30, 0x38	; 56
    1b40:	f0 e0       	ldi	r31, 0x00	; 0
    1b42:	8b 81       	ldd	r24, Y+3	; 0x03
    1b44:	80 83       	st	Z, r24
    1b46:	0f c0       	rjmp	.+30     	; 0x1b66 <DIO_u8SetPortValue+0x8a>
		case DIO_u8PORTC: PORTC = Copy_u8Value; break;
    1b48:	e5 e3       	ldi	r30, 0x35	; 53
    1b4a:	f0 e0       	ldi	r31, 0x00	; 0
    1b4c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b4e:	80 83       	st	Z, r24
    1b50:	0a c0       	rjmp	.+20     	; 0x1b66 <DIO_u8SetPortValue+0x8a>
		case DIO_u8PORTD: PORTD = Copy_u8Value; break;
    1b52:	e2 e3       	ldi	r30, 0x32	; 50
    1b54:	f0 e0       	ldi	r31, 0x00	; 0
    1b56:	8b 81       	ldd	r24, Y+3	; 0x03
    1b58:	80 83       	st	Z, r24
    1b5a:	05 c0       	rjmp	.+10     	; 0x1b66 <DIO_u8SetPortValue+0x8a>
		default: Local_u8ErrorState =1; break;
    1b5c:	81 e0       	ldi	r24, 0x01	; 1
    1b5e:	89 83       	std	Y+1, r24	; 0x01
    1b60:	02 c0       	rjmp	.+4      	; 0x1b66 <DIO_u8SetPortValue+0x8a>

		}
	}
	else
	{
		Local_u8ErrorState = 1;
    1b62:	81 e0       	ldi	r24, 0x01	; 1
    1b64:	89 83       	std	Y+1, r24	; 0x01
	}


	return Local_u8ErrorState;
    1b66:	89 81       	ldd	r24, Y+1	; 0x01
}
    1b68:	0f 90       	pop	r0
    1b6a:	0f 90       	pop	r0
    1b6c:	0f 90       	pop	r0
    1b6e:	0f 90       	pop	r0
    1b70:	0f 90       	pop	r0
    1b72:	cf 91       	pop	r28
    1b74:	df 91       	pop	r29
    1b76:	08 95       	ret

00001b78 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8port, u8 Copy_u8Pin, u8* Copy_Pu8Value)
{
    1b78:	df 93       	push	r29
    1b7a:	cf 93       	push	r28
    1b7c:	cd b7       	in	r28, 0x3d	; 61
    1b7e:	de b7       	in	r29, 0x3e	; 62
    1b80:	27 97       	sbiw	r28, 0x07	; 7
    1b82:	0f b6       	in	r0, 0x3f	; 63
    1b84:	f8 94       	cli
    1b86:	de bf       	out	0x3e, r29	; 62
    1b88:	0f be       	out	0x3f, r0	; 63
    1b8a:	cd bf       	out	0x3d, r28	; 61
    1b8c:	8a 83       	std	Y+2, r24	; 0x02
    1b8e:	6b 83       	std	Y+3, r22	; 0x03
    1b90:	5d 83       	std	Y+5, r21	; 0x05
    1b92:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=0;
    1b94:	19 82       	std	Y+1, r1	; 0x01

	if((Copy_Pu8Value != NULL )&&(Copy_u8Pin<=DIO_u8PIN7))
    1b96:	8c 81       	ldd	r24, Y+4	; 0x04
    1b98:	9d 81       	ldd	r25, Y+5	; 0x05
    1b9a:	00 97       	sbiw	r24, 0x00	; 0
    1b9c:	09 f4       	brne	.+2      	; 0x1ba0 <DIO_u8GetPinValue+0x28>
    1b9e:	78 c0       	rjmp	.+240    	; 0x1c90 <DIO_u8GetPinValue+0x118>
    1ba0:	8b 81       	ldd	r24, Y+3	; 0x03
    1ba2:	88 30       	cpi	r24, 0x08	; 8
    1ba4:	08 f0       	brcs	.+2      	; 0x1ba8 <DIO_u8GetPinValue+0x30>
    1ba6:	74 c0       	rjmp	.+232    	; 0x1c90 <DIO_u8GetPinValue+0x118>
	{


			switch(Copy_u8port)
    1ba8:	8a 81       	ldd	r24, Y+2	; 0x02
    1baa:	28 2f       	mov	r18, r24
    1bac:	30 e0       	ldi	r19, 0x00	; 0
    1bae:	3f 83       	std	Y+7, r19	; 0x07
    1bb0:	2e 83       	std	Y+6, r18	; 0x06
    1bb2:	4e 81       	ldd	r20, Y+6	; 0x06
    1bb4:	5f 81       	ldd	r21, Y+7	; 0x07
    1bb6:	41 30       	cpi	r20, 0x01	; 1
    1bb8:	51 05       	cpc	r21, r1
    1bba:	59 f1       	breq	.+86     	; 0x1c12 <DIO_u8GetPinValue+0x9a>
    1bbc:	8e 81       	ldd	r24, Y+6	; 0x06
    1bbe:	9f 81       	ldd	r25, Y+7	; 0x07
    1bc0:	82 30       	cpi	r24, 0x02	; 2
    1bc2:	91 05       	cpc	r25, r1
    1bc4:	34 f4       	brge	.+12     	; 0x1bd2 <DIO_u8GetPinValue+0x5a>
    1bc6:	2e 81       	ldd	r18, Y+6	; 0x06
    1bc8:	3f 81       	ldd	r19, Y+7	; 0x07
    1bca:	21 15       	cp	r18, r1
    1bcc:	31 05       	cpc	r19, r1
    1bce:	69 f0       	breq	.+26     	; 0x1bea <DIO_u8GetPinValue+0x72>
    1bd0:	5c c0       	rjmp	.+184    	; 0x1c8a <DIO_u8GetPinValue+0x112>
    1bd2:	4e 81       	ldd	r20, Y+6	; 0x06
    1bd4:	5f 81       	ldd	r21, Y+7	; 0x07
    1bd6:	42 30       	cpi	r20, 0x02	; 2
    1bd8:	51 05       	cpc	r21, r1
    1bda:	79 f1       	breq	.+94     	; 0x1c3a <DIO_u8GetPinValue+0xc2>
    1bdc:	8e 81       	ldd	r24, Y+6	; 0x06
    1bde:	9f 81       	ldd	r25, Y+7	; 0x07
    1be0:	83 30       	cpi	r24, 0x03	; 3
    1be2:	91 05       	cpc	r25, r1
    1be4:	09 f4       	brne	.+2      	; 0x1be8 <DIO_u8GetPinValue+0x70>
    1be6:	3d c0       	rjmp	.+122    	; 0x1c62 <DIO_u8GetPinValue+0xea>
    1be8:	50 c0       	rjmp	.+160    	; 0x1c8a <DIO_u8GetPinValue+0x112>
			{
			case DIO_u8PORTA: * Copy_Pu8Value = GET_BIT(PINA,Copy_u8Pin); break;
    1bea:	e9 e3       	ldi	r30, 0x39	; 57
    1bec:	f0 e0       	ldi	r31, 0x00	; 0
    1bee:	80 81       	ld	r24, Z
    1bf0:	28 2f       	mov	r18, r24
    1bf2:	30 e0       	ldi	r19, 0x00	; 0
    1bf4:	8b 81       	ldd	r24, Y+3	; 0x03
    1bf6:	88 2f       	mov	r24, r24
    1bf8:	90 e0       	ldi	r25, 0x00	; 0
    1bfa:	a9 01       	movw	r20, r18
    1bfc:	02 c0       	rjmp	.+4      	; 0x1c02 <DIO_u8GetPinValue+0x8a>
    1bfe:	55 95       	asr	r21
    1c00:	47 95       	ror	r20
    1c02:	8a 95       	dec	r24
    1c04:	e2 f7       	brpl	.-8      	; 0x1bfe <DIO_u8GetPinValue+0x86>
    1c06:	ca 01       	movw	r24, r20
    1c08:	81 70       	andi	r24, 0x01	; 1
    1c0a:	ec 81       	ldd	r30, Y+4	; 0x04
    1c0c:	fd 81       	ldd	r31, Y+5	; 0x05
    1c0e:	80 83       	st	Z, r24
    1c10:	41 c0       	rjmp	.+130    	; 0x1c94 <DIO_u8GetPinValue+0x11c>
			case DIO_u8PORTB: * Copy_Pu8Value = GET_BIT(PINB,Copy_u8Pin); break;
    1c12:	e6 e3       	ldi	r30, 0x36	; 54
    1c14:	f0 e0       	ldi	r31, 0x00	; 0
    1c16:	80 81       	ld	r24, Z
    1c18:	28 2f       	mov	r18, r24
    1c1a:	30 e0       	ldi	r19, 0x00	; 0
    1c1c:	8b 81       	ldd	r24, Y+3	; 0x03
    1c1e:	88 2f       	mov	r24, r24
    1c20:	90 e0       	ldi	r25, 0x00	; 0
    1c22:	a9 01       	movw	r20, r18
    1c24:	02 c0       	rjmp	.+4      	; 0x1c2a <DIO_u8GetPinValue+0xb2>
    1c26:	55 95       	asr	r21
    1c28:	47 95       	ror	r20
    1c2a:	8a 95       	dec	r24
    1c2c:	e2 f7       	brpl	.-8      	; 0x1c26 <DIO_u8GetPinValue+0xae>
    1c2e:	ca 01       	movw	r24, r20
    1c30:	81 70       	andi	r24, 0x01	; 1
    1c32:	ec 81       	ldd	r30, Y+4	; 0x04
    1c34:	fd 81       	ldd	r31, Y+5	; 0x05
    1c36:	80 83       	st	Z, r24
    1c38:	2d c0       	rjmp	.+90     	; 0x1c94 <DIO_u8GetPinValue+0x11c>
			case DIO_u8PORTC: * Copy_Pu8Value = GET_BIT(PINC,Copy_u8Pin); break;
    1c3a:	e3 e3       	ldi	r30, 0x33	; 51
    1c3c:	f0 e0       	ldi	r31, 0x00	; 0
    1c3e:	80 81       	ld	r24, Z
    1c40:	28 2f       	mov	r18, r24
    1c42:	30 e0       	ldi	r19, 0x00	; 0
    1c44:	8b 81       	ldd	r24, Y+3	; 0x03
    1c46:	88 2f       	mov	r24, r24
    1c48:	90 e0       	ldi	r25, 0x00	; 0
    1c4a:	a9 01       	movw	r20, r18
    1c4c:	02 c0       	rjmp	.+4      	; 0x1c52 <DIO_u8GetPinValue+0xda>
    1c4e:	55 95       	asr	r21
    1c50:	47 95       	ror	r20
    1c52:	8a 95       	dec	r24
    1c54:	e2 f7       	brpl	.-8      	; 0x1c4e <DIO_u8GetPinValue+0xd6>
    1c56:	ca 01       	movw	r24, r20
    1c58:	81 70       	andi	r24, 0x01	; 1
    1c5a:	ec 81       	ldd	r30, Y+4	; 0x04
    1c5c:	fd 81       	ldd	r31, Y+5	; 0x05
    1c5e:	80 83       	st	Z, r24
    1c60:	19 c0       	rjmp	.+50     	; 0x1c94 <DIO_u8GetPinValue+0x11c>
			case DIO_u8PORTD: * Copy_Pu8Value = GET_BIT(PIND,Copy_u8Pin); break;
    1c62:	e0 e3       	ldi	r30, 0x30	; 48
    1c64:	f0 e0       	ldi	r31, 0x00	; 0
    1c66:	80 81       	ld	r24, Z
    1c68:	28 2f       	mov	r18, r24
    1c6a:	30 e0       	ldi	r19, 0x00	; 0
    1c6c:	8b 81       	ldd	r24, Y+3	; 0x03
    1c6e:	88 2f       	mov	r24, r24
    1c70:	90 e0       	ldi	r25, 0x00	; 0
    1c72:	a9 01       	movw	r20, r18
    1c74:	02 c0       	rjmp	.+4      	; 0x1c7a <DIO_u8GetPinValue+0x102>
    1c76:	55 95       	asr	r21
    1c78:	47 95       	ror	r20
    1c7a:	8a 95       	dec	r24
    1c7c:	e2 f7       	brpl	.-8      	; 0x1c76 <DIO_u8GetPinValue+0xfe>
    1c7e:	ca 01       	movw	r24, r20
    1c80:	81 70       	andi	r24, 0x01	; 1
    1c82:	ec 81       	ldd	r30, Y+4	; 0x04
    1c84:	fd 81       	ldd	r31, Y+5	; 0x05
    1c86:	80 83       	st	Z, r24
    1c88:	05 c0       	rjmp	.+10     	; 0x1c94 <DIO_u8GetPinValue+0x11c>
			default: Local_u8ErrorState =1; break;
    1c8a:	81 e0       	ldi	r24, 0x01	; 1
    1c8c:	89 83       	std	Y+1, r24	; 0x01
    1c8e:	02 c0       	rjmp	.+4      	; 0x1c94 <DIO_u8GetPinValue+0x11c>

			}
	}
	else
	{
		Local_u8ErrorState = 1;
    1c90:	81 e0       	ldi	r24, 0x01	; 1
    1c92:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
    1c94:	89 81       	ldd	r24, Y+1	; 0x01
}
    1c96:	27 96       	adiw	r28, 0x07	; 7
    1c98:	0f b6       	in	r0, 0x3f	; 63
    1c9a:	f8 94       	cli
    1c9c:	de bf       	out	0x3e, r29	; 62
    1c9e:	0f be       	out	0x3f, r0	; 63
    1ca0:	cd bf       	out	0x3d, r28	; 61
    1ca2:	cf 91       	pop	r28
    1ca4:	df 91       	pop	r29
    1ca6:	08 95       	ret

00001ca8 <DIO_u8AndWithPort>:

u8 DIO_u8AndWithPort(u8 Copy_u8port, u8 Copy_u8Value)
{
    1ca8:	df 93       	push	r29
    1caa:	cf 93       	push	r28
    1cac:	00 d0       	rcall	.+0      	; 0x1cae <DIO_u8AndWithPort+0x6>
    1cae:	00 d0       	rcall	.+0      	; 0x1cb0 <DIO_u8AndWithPort+0x8>
    1cb0:	0f 92       	push	r0
    1cb2:	cd b7       	in	r28, 0x3d	; 61
    1cb4:	de b7       	in	r29, 0x3e	; 62
    1cb6:	8a 83       	std	Y+2, r24	; 0x02
    1cb8:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8Result = 0;
    1cba:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8port)
    1cbc:	8a 81       	ldd	r24, Y+2	; 0x02
    1cbe:	28 2f       	mov	r18, r24
    1cc0:	30 e0       	ldi	r19, 0x00	; 0
    1cc2:	3d 83       	std	Y+5, r19	; 0x05
    1cc4:	2c 83       	std	Y+4, r18	; 0x04
    1cc6:	8c 81       	ldd	r24, Y+4	; 0x04
    1cc8:	9d 81       	ldd	r25, Y+5	; 0x05
    1cca:	81 30       	cpi	r24, 0x01	; 1
    1ccc:	91 05       	cpc	r25, r1
    1cce:	e1 f0       	breq	.+56     	; 0x1d08 <DIO_u8AndWithPort+0x60>
    1cd0:	2c 81       	ldd	r18, Y+4	; 0x04
    1cd2:	3d 81       	ldd	r19, Y+5	; 0x05
    1cd4:	22 30       	cpi	r18, 0x02	; 2
    1cd6:	31 05       	cpc	r19, r1
    1cd8:	2c f4       	brge	.+10     	; 0x1ce4 <DIO_u8AndWithPort+0x3c>
    1cda:	8c 81       	ldd	r24, Y+4	; 0x04
    1cdc:	9d 81       	ldd	r25, Y+5	; 0x05
    1cde:	00 97       	sbiw	r24, 0x00	; 0
    1ce0:	61 f0       	breq	.+24     	; 0x1cfa <DIO_u8AndWithPort+0x52>
    1ce2:	26 c0       	rjmp	.+76     	; 0x1d30 <DIO_u8AndWithPort+0x88>
    1ce4:	2c 81       	ldd	r18, Y+4	; 0x04
    1ce6:	3d 81       	ldd	r19, Y+5	; 0x05
    1ce8:	22 30       	cpi	r18, 0x02	; 2
    1cea:	31 05       	cpc	r19, r1
    1cec:	a1 f0       	breq	.+40     	; 0x1d16 <DIO_u8AndWithPort+0x6e>
    1cee:	8c 81       	ldd	r24, Y+4	; 0x04
    1cf0:	9d 81       	ldd	r25, Y+5	; 0x05
    1cf2:	83 30       	cpi	r24, 0x03	; 3
    1cf4:	91 05       	cpc	r25, r1
    1cf6:	b1 f0       	breq	.+44     	; 0x1d24 <DIO_u8AndWithPort+0x7c>
    1cf8:	1b c0       	rjmp	.+54     	; 0x1d30 <DIO_u8AndWithPort+0x88>
			{
			case DIO_u8PORTA: Local_u8Result= PORTA & Copy_u8Value; break;
    1cfa:	eb e3       	ldi	r30, 0x3B	; 59
    1cfc:	f0 e0       	ldi	r31, 0x00	; 0
    1cfe:	90 81       	ld	r25, Z
    1d00:	8b 81       	ldd	r24, Y+3	; 0x03
    1d02:	89 23       	and	r24, r25
    1d04:	89 83       	std	Y+1, r24	; 0x01
    1d06:	14 c0       	rjmp	.+40     	; 0x1d30 <DIO_u8AndWithPort+0x88>
			case DIO_u8PORTB: Local_u8Result= PORTB & Copy_u8Value; break;
    1d08:	e8 e3       	ldi	r30, 0x38	; 56
    1d0a:	f0 e0       	ldi	r31, 0x00	; 0
    1d0c:	90 81       	ld	r25, Z
    1d0e:	8b 81       	ldd	r24, Y+3	; 0x03
    1d10:	89 23       	and	r24, r25
    1d12:	89 83       	std	Y+1, r24	; 0x01
    1d14:	0d c0       	rjmp	.+26     	; 0x1d30 <DIO_u8AndWithPort+0x88>
			case DIO_u8PORTC: Local_u8Result= PORTC & Copy_u8Value; break;
    1d16:	e5 e3       	ldi	r30, 0x35	; 53
    1d18:	f0 e0       	ldi	r31, 0x00	; 0
    1d1a:	90 81       	ld	r25, Z
    1d1c:	8b 81       	ldd	r24, Y+3	; 0x03
    1d1e:	89 23       	and	r24, r25
    1d20:	89 83       	std	Y+1, r24	; 0x01
    1d22:	06 c0       	rjmp	.+12     	; 0x1d30 <DIO_u8AndWithPort+0x88>
			case DIO_u8PORTD: Local_u8Result = PORTD & Copy_u8Value; break;
    1d24:	e2 e3       	ldi	r30, 0x32	; 50
    1d26:	f0 e0       	ldi	r31, 0x00	; 0
    1d28:	90 81       	ld	r25, Z
    1d2a:	8b 81       	ldd	r24, Y+3	; 0x03
    1d2c:	89 23       	and	r24, r25
    1d2e:	89 83       	std	Y+1, r24	; 0x01
			default:  break;


			}
	return Local_u8Result;
    1d30:	89 81       	ldd	r24, Y+1	; 0x01
}
    1d32:	0f 90       	pop	r0
    1d34:	0f 90       	pop	r0
    1d36:	0f 90       	pop	r0
    1d38:	0f 90       	pop	r0
    1d3a:	0f 90       	pop	r0
    1d3c:	cf 91       	pop	r28
    1d3e:	df 91       	pop	r29
    1d40:	08 95       	ret

00001d42 <KPD_u8GetPressedKey>:
#include "KPD_private.h"



u8 KPD_u8GetPressedKey(void)
{
    1d42:	df 93       	push	r29
    1d44:	cf 93       	push	r28
    1d46:	00 d0       	rcall	.+0      	; 0x1d48 <KPD_u8GetPressedKey+0x6>
    1d48:	00 d0       	rcall	.+0      	; 0x1d4a <KPD_u8GetPressedKey+0x8>
    1d4a:	0f 92       	push	r0
    1d4c:	cd b7       	in	r28, 0x3d	; 61
    1d4e:	de b7       	in	r29, 0x3e	; 62
	u8 Local_u8PressedKey = KPD_NO_PRESSED_KEY;
    1d50:	8f ef       	ldi	r24, 0xFF	; 255
    1d52:	8b 83       	std	Y+3, r24	; 0x03
	u8 Local_u8PinState;
	static u8 Local_u8KPDColArr[COLUMN_NUM]= {KPD_COL_0_PIN,KPD_COL_1_PIN,KPD_COL_2_PIN,KPD_COL_3_PIN };
	static u8 Local_u8KPDRowArr[ROW_NUM]= {KPD_ROW_0_PIN,KPD_ROW_1_PIN,KPD_ROW_2_PIN,KPD_ROW_3_PIN };
	static u8 Local_u8KPDArr[ROW_NUM][COLUMN_NUM]=KPD_ARR_VAL;

	for (Local_u8ColCounter=0;Local_u8ColCounter<COLUMN_NUM;Local_u8ColCounter++)
    1d54:	19 82       	std	Y+1, r1	; 0x01
    1d56:	5e c0       	rjmp	.+188    	; 0x1e14 <KPD_u8GetPressedKey+0xd2>
	{
		/* Activate current Cloumn*/
		DIO_u8SetPinValue(KPD_COL_PORT,Local_u8KPDColArr[Local_u8ColCounter],DIO_u8PIN_LOW);
    1d58:	89 81       	ldd	r24, Y+1	; 0x01
    1d5a:	88 2f       	mov	r24, r24
    1d5c:	90 e0       	ldi	r25, 0x00	; 0
    1d5e:	fc 01       	movw	r30, r24
    1d60:	eb 57       	subi	r30, 0x7B	; 123
    1d62:	fe 4f       	sbci	r31, 0xFE	; 254
    1d64:	90 81       	ld	r25, Z
    1d66:	83 e0       	ldi	r24, 0x03	; 3
    1d68:	69 2f       	mov	r22, r25
    1d6a:	40 e0       	ldi	r20, 0x00	; 0
    1d6c:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <DIO_u8SetPinValue>

		for(Local_u8RowCounter=0;Local_u8RowCounter<ROW_NUM;Local_u8RowCounter++)
    1d70:	1a 82       	std	Y+2, r1	; 0x02
    1d72:	3d c0       	rjmp	.+122    	; 0x1dee <KPD_u8GetPressedKey+0xac>
		{
			/* Read the current row */
			DIO_u8GetPinValue(KPD_ROW_PORT,Local_u8KPDRowArr[Local_u8RowCounter],&Local_u8PinState);
    1d74:	8a 81       	ldd	r24, Y+2	; 0x02
    1d76:	88 2f       	mov	r24, r24
    1d78:	90 e0       	ldi	r25, 0x00	; 0
    1d7a:	fc 01       	movw	r30, r24
    1d7c:	ef 57       	subi	r30, 0x7F	; 127
    1d7e:	fe 4f       	sbci	r31, 0xFE	; 254
    1d80:	90 81       	ld	r25, Z
    1d82:	9e 01       	movw	r18, r28
    1d84:	2c 5f       	subi	r18, 0xFC	; 252
    1d86:	3f 4f       	sbci	r19, 0xFF	; 255
    1d88:	81 e0       	ldi	r24, 0x01	; 1
    1d8a:	69 2f       	mov	r22, r25
    1d8c:	a9 01       	movw	r20, r18
    1d8e:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <DIO_u8GetPinValue>
			/* Check if switch is pressed */

			if(DIO_u8PIN_LOW == Local_u8PinState )
    1d92:	8c 81       	ldd	r24, Y+4	; 0x04
    1d94:	88 23       	and	r24, r24
    1d96:	41 f5       	brne	.+80     	; 0x1de8 <KPD_u8GetPressedKey+0xa6>
			{

				Local_u8PressedKey = Local_u8KPDArr[Local_u8RowCounter][Local_u8ColCounter];
    1d98:	8a 81       	ldd	r24, Y+2	; 0x02
    1d9a:	48 2f       	mov	r20, r24
    1d9c:	50 e0       	ldi	r21, 0x00	; 0
    1d9e:	89 81       	ldd	r24, Y+1	; 0x01
    1da0:	28 2f       	mov	r18, r24
    1da2:	30 e0       	ldi	r19, 0x00	; 0
    1da4:	ca 01       	movw	r24, r20
    1da6:	88 0f       	add	r24, r24
    1da8:	99 1f       	adc	r25, r25
    1daa:	88 0f       	add	r24, r24
    1dac:	99 1f       	adc	r25, r25
    1dae:	82 0f       	add	r24, r18
    1db0:	93 1f       	adc	r25, r19
    1db2:	fc 01       	movw	r30, r24
    1db4:	ef 58       	subi	r30, 0x8F	; 143
    1db6:	fe 4f       	sbci	r31, 0xFE	; 254
    1db8:	80 81       	ld	r24, Z
    1dba:	8b 83       	std	Y+3, r24	; 0x03
    1dbc:	0f c0       	rjmp	.+30     	; 0x1ddc <KPD_u8GetPressedKey+0x9a>
				/* Polling (busy waiting ) until the key is released */
				while (DIO_u8PIN_LOW == Local_u8PinState)
				{
					DIO_u8GetPinValue(KPD_ROW_PORT,Local_u8KPDRowArr[Local_u8RowCounter],&Local_u8PinState);
    1dbe:	8a 81       	ldd	r24, Y+2	; 0x02
    1dc0:	88 2f       	mov	r24, r24
    1dc2:	90 e0       	ldi	r25, 0x00	; 0
    1dc4:	fc 01       	movw	r30, r24
    1dc6:	ef 57       	subi	r30, 0x7F	; 127
    1dc8:	fe 4f       	sbci	r31, 0xFE	; 254
    1dca:	90 81       	ld	r25, Z
    1dcc:	9e 01       	movw	r18, r28
    1dce:	2c 5f       	subi	r18, 0xFC	; 252
    1dd0:	3f 4f       	sbci	r19, 0xFF	; 255
    1dd2:	81 e0       	ldi	r24, 0x01	; 1
    1dd4:	69 2f       	mov	r22, r25
    1dd6:	a9 01       	movw	r20, r18
    1dd8:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <DIO_u8GetPinValue>
			if(DIO_u8PIN_LOW == Local_u8PinState )
			{

				Local_u8PressedKey = Local_u8KPDArr[Local_u8RowCounter][Local_u8ColCounter];
				/* Polling (busy waiting ) until the key is released */
				while (DIO_u8PIN_LOW == Local_u8PinState)
    1ddc:	8c 81       	ldd	r24, Y+4	; 0x04
    1dde:	88 23       	and	r24, r24
    1de0:	71 f3       	breq	.-36     	; 0x1dbe <KPD_u8GetPressedKey+0x7c>
				{
					DIO_u8GetPinValue(KPD_ROW_PORT,Local_u8KPDRowArr[Local_u8RowCounter],&Local_u8PinState);

				}
				return Local_u8PressedKey;
    1de2:	8b 81       	ldd	r24, Y+3	; 0x03
    1de4:	8d 83       	std	Y+5, r24	; 0x05
    1de6:	1c c0       	rjmp	.+56     	; 0x1e20 <KPD_u8GetPressedKey+0xde>
	for (Local_u8ColCounter=0;Local_u8ColCounter<COLUMN_NUM;Local_u8ColCounter++)
	{
		/* Activate current Cloumn*/
		DIO_u8SetPinValue(KPD_COL_PORT,Local_u8KPDColArr[Local_u8ColCounter],DIO_u8PIN_LOW);

		for(Local_u8RowCounter=0;Local_u8RowCounter<ROW_NUM;Local_u8RowCounter++)
    1de8:	8a 81       	ldd	r24, Y+2	; 0x02
    1dea:	8f 5f       	subi	r24, 0xFF	; 255
    1dec:	8a 83       	std	Y+2, r24	; 0x02
    1dee:	8a 81       	ldd	r24, Y+2	; 0x02
    1df0:	84 30       	cpi	r24, 0x04	; 4
    1df2:	08 f4       	brcc	.+2      	; 0x1df6 <KPD_u8GetPressedKey+0xb4>
    1df4:	bf cf       	rjmp	.-130    	; 0x1d74 <KPD_u8GetPressedKey+0x32>

		}

		/* Deactivate the current column */

		DIO_u8SetPinValue(KPD_COL_PORT,Local_u8KPDColArr[Local_u8ColCounter],DIO_u8PIN_HIGH);
    1df6:	89 81       	ldd	r24, Y+1	; 0x01
    1df8:	88 2f       	mov	r24, r24
    1dfa:	90 e0       	ldi	r25, 0x00	; 0
    1dfc:	fc 01       	movw	r30, r24
    1dfe:	eb 57       	subi	r30, 0x7B	; 123
    1e00:	fe 4f       	sbci	r31, 0xFE	; 254
    1e02:	90 81       	ld	r25, Z
    1e04:	83 e0       	ldi	r24, 0x03	; 3
    1e06:	69 2f       	mov	r22, r25
    1e08:	41 e0       	ldi	r20, 0x01	; 1
    1e0a:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <DIO_u8SetPinValue>
	u8 Local_u8PinState;
	static u8 Local_u8KPDColArr[COLUMN_NUM]= {KPD_COL_0_PIN,KPD_COL_1_PIN,KPD_COL_2_PIN,KPD_COL_3_PIN };
	static u8 Local_u8KPDRowArr[ROW_NUM]= {KPD_ROW_0_PIN,KPD_ROW_1_PIN,KPD_ROW_2_PIN,KPD_ROW_3_PIN };
	static u8 Local_u8KPDArr[ROW_NUM][COLUMN_NUM]=KPD_ARR_VAL;

	for (Local_u8ColCounter=0;Local_u8ColCounter<COLUMN_NUM;Local_u8ColCounter++)
    1e0e:	89 81       	ldd	r24, Y+1	; 0x01
    1e10:	8f 5f       	subi	r24, 0xFF	; 255
    1e12:	89 83       	std	Y+1, r24	; 0x01
    1e14:	89 81       	ldd	r24, Y+1	; 0x01
    1e16:	84 30       	cpi	r24, 0x04	; 4
    1e18:	08 f4       	brcc	.+2      	; 0x1e1c <KPD_u8GetPressedKey+0xda>
    1e1a:	9e cf       	rjmp	.-196    	; 0x1d58 <KPD_u8GetPressedKey+0x16>

		DIO_u8SetPinValue(KPD_COL_PORT,Local_u8KPDColArr[Local_u8ColCounter],DIO_u8PIN_HIGH);

	}

	return Local_u8PressedKey;
    1e1c:	8b 81       	ldd	r24, Y+3	; 0x03
    1e1e:	8d 83       	std	Y+5, r24	; 0x05
    1e20:	8d 81       	ldd	r24, Y+5	; 0x05





}
    1e22:	0f 90       	pop	r0
    1e24:	0f 90       	pop	r0
    1e26:	0f 90       	pop	r0
    1e28:	0f 90       	pop	r0
    1e2a:	0f 90       	pop	r0
    1e2c:	cf 91       	pop	r28
    1e2e:	df 91       	pop	r29
    1e30:	08 95       	ret

00001e32 <PB_u8GetState>:
//
//	return Local_u8ErrorState;
//}

u8 PB_u8GetState(u8 Copy_u8Port, u8 Copy_u8Pin)
{
    1e32:	df 93       	push	r29
    1e34:	cf 93       	push	r28
    1e36:	cd b7       	in	r28, 0x3d	; 61
    1e38:	de b7       	in	r29, 0x3e	; 62
    1e3a:	62 97       	sbiw	r28, 0x12	; 18
    1e3c:	0f b6       	in	r0, 0x3f	; 63
    1e3e:	f8 94       	cli
    1e40:	de bf       	out	0x3e, r29	; 62
    1e42:	0f be       	out	0x3f, r0	; 63
    1e44:	cd bf       	out	0x3d, r28	; 61
    1e46:	89 8b       	std	Y+17, r24	; 0x11
    1e48:	6a 8b       	std	Y+18, r22	; 0x12
		u8 Local_u8PinState=1;
    1e4a:	81 e0       	ldi	r24, 0x01	; 1
    1e4c:	88 8b       	std	Y+16, r24	; 0x10
		u8 Copy_Pu8Value;

		DIO_u8GetPinValue(Copy_u8Port, Copy_u8Pin,&Local_u8PinState);
    1e4e:	9e 01       	movw	r18, r28
    1e50:	20 5f       	subi	r18, 0xF0	; 240
    1e52:	3f 4f       	sbci	r19, 0xFF	; 255
    1e54:	89 89       	ldd	r24, Y+17	; 0x11
    1e56:	6a 89       	ldd	r22, Y+18	; 0x12
    1e58:	a9 01       	movw	r20, r18
    1e5a:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <DIO_u8GetPinValue>

		if (Local_u8PinState == 0 )
    1e5e:	88 89       	ldd	r24, Y+16	; 0x10
    1e60:	88 23       	and	r24, r24
    1e62:	09 f0       	breq	.+2      	; 0x1e66 <PB_u8GetState+0x34>
    1e64:	75 c0       	rjmp	.+234    	; 0x1f50 <PB_u8GetState+0x11e>
    1e66:	80 e0       	ldi	r24, 0x00	; 0
    1e68:	90 e0       	ldi	r25, 0x00	; 0
    1e6a:	a6 e1       	ldi	r26, 0x16	; 22
    1e6c:	b3 e4       	ldi	r27, 0x43	; 67
    1e6e:	8b 87       	std	Y+11, r24	; 0x0b
    1e70:	9c 87       	std	Y+12, r25	; 0x0c
    1e72:	ad 87       	std	Y+13, r26	; 0x0d
    1e74:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e76:	6b 85       	ldd	r22, Y+11	; 0x0b
    1e78:	7c 85       	ldd	r23, Y+12	; 0x0c
    1e7a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1e7c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1e7e:	20 e0       	ldi	r18, 0x00	; 0
    1e80:	30 e0       	ldi	r19, 0x00	; 0
    1e82:	4a ef       	ldi	r20, 0xFA	; 250
    1e84:	54 e4       	ldi	r21, 0x44	; 68
    1e86:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e8a:	dc 01       	movw	r26, r24
    1e8c:	cb 01       	movw	r24, r22
    1e8e:	8f 83       	std	Y+7, r24	; 0x07
    1e90:	98 87       	std	Y+8, r25	; 0x08
    1e92:	a9 87       	std	Y+9, r26	; 0x09
    1e94:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1e96:	6f 81       	ldd	r22, Y+7	; 0x07
    1e98:	78 85       	ldd	r23, Y+8	; 0x08
    1e9a:	89 85       	ldd	r24, Y+9	; 0x09
    1e9c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e9e:	20 e0       	ldi	r18, 0x00	; 0
    1ea0:	30 e0       	ldi	r19, 0x00	; 0
    1ea2:	40 e8       	ldi	r20, 0x80	; 128
    1ea4:	5f e3       	ldi	r21, 0x3F	; 63
    1ea6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1eaa:	88 23       	and	r24, r24
    1eac:	2c f4       	brge	.+10     	; 0x1eb8 <PB_u8GetState+0x86>
		__ticks = 1;
    1eae:	81 e0       	ldi	r24, 0x01	; 1
    1eb0:	90 e0       	ldi	r25, 0x00	; 0
    1eb2:	9e 83       	std	Y+6, r25	; 0x06
    1eb4:	8d 83       	std	Y+5, r24	; 0x05
    1eb6:	3f c0       	rjmp	.+126    	; 0x1f36 <PB_u8GetState+0x104>
	else if (__tmp > 65535)
    1eb8:	6f 81       	ldd	r22, Y+7	; 0x07
    1eba:	78 85       	ldd	r23, Y+8	; 0x08
    1ebc:	89 85       	ldd	r24, Y+9	; 0x09
    1ebe:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ec0:	20 e0       	ldi	r18, 0x00	; 0
    1ec2:	3f ef       	ldi	r19, 0xFF	; 255
    1ec4:	4f e7       	ldi	r20, 0x7F	; 127
    1ec6:	57 e4       	ldi	r21, 0x47	; 71
    1ec8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ecc:	18 16       	cp	r1, r24
    1ece:	4c f5       	brge	.+82     	; 0x1f22 <PB_u8GetState+0xf0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ed0:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ed2:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ed4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ed6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ed8:	20 e0       	ldi	r18, 0x00	; 0
    1eda:	30 e0       	ldi	r19, 0x00	; 0
    1edc:	40 e2       	ldi	r20, 0x20	; 32
    1ede:	51 e4       	ldi	r21, 0x41	; 65
    1ee0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ee4:	dc 01       	movw	r26, r24
    1ee6:	cb 01       	movw	r24, r22
    1ee8:	bc 01       	movw	r22, r24
    1eea:	cd 01       	movw	r24, r26
    1eec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ef0:	dc 01       	movw	r26, r24
    1ef2:	cb 01       	movw	r24, r22
    1ef4:	9e 83       	std	Y+6, r25	; 0x06
    1ef6:	8d 83       	std	Y+5, r24	; 0x05
    1ef8:	0f c0       	rjmp	.+30     	; 0x1f18 <PB_u8GetState+0xe6>
    1efa:	88 ec       	ldi	r24, 0xC8	; 200
    1efc:	90 e0       	ldi	r25, 0x00	; 0
    1efe:	9c 83       	std	Y+4, r25	; 0x04
    1f00:	8b 83       	std	Y+3, r24	; 0x03
    1f02:	8b 81       	ldd	r24, Y+3	; 0x03
    1f04:	9c 81       	ldd	r25, Y+4	; 0x04
    1f06:	01 97       	sbiw	r24, 0x01	; 1
    1f08:	f1 f7       	brne	.-4      	; 0x1f06 <PB_u8GetState+0xd4>
    1f0a:	9c 83       	std	Y+4, r25	; 0x04
    1f0c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f0e:	8d 81       	ldd	r24, Y+5	; 0x05
    1f10:	9e 81       	ldd	r25, Y+6	; 0x06
    1f12:	01 97       	sbiw	r24, 0x01	; 1
    1f14:	9e 83       	std	Y+6, r25	; 0x06
    1f16:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f18:	8d 81       	ldd	r24, Y+5	; 0x05
    1f1a:	9e 81       	ldd	r25, Y+6	; 0x06
    1f1c:	00 97       	sbiw	r24, 0x00	; 0
    1f1e:	69 f7       	brne	.-38     	; 0x1efa <PB_u8GetState+0xc8>
    1f20:	14 c0       	rjmp	.+40     	; 0x1f4a <PB_u8GetState+0x118>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f22:	6f 81       	ldd	r22, Y+7	; 0x07
    1f24:	78 85       	ldd	r23, Y+8	; 0x08
    1f26:	89 85       	ldd	r24, Y+9	; 0x09
    1f28:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f2a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f2e:	dc 01       	movw	r26, r24
    1f30:	cb 01       	movw	r24, r22
    1f32:	9e 83       	std	Y+6, r25	; 0x06
    1f34:	8d 83       	std	Y+5, r24	; 0x05
    1f36:	8d 81       	ldd	r24, Y+5	; 0x05
    1f38:	9e 81       	ldd	r25, Y+6	; 0x06
    1f3a:	9a 83       	std	Y+2, r25	; 0x02
    1f3c:	89 83       	std	Y+1, r24	; 0x01
    1f3e:	89 81       	ldd	r24, Y+1	; 0x01
    1f40:	9a 81       	ldd	r25, Y+2	; 0x02
    1f42:	01 97       	sbiw	r24, 0x01	; 1
    1f44:	f1 f7       	brne	.-4      	; 0x1f42 <PB_u8GetState+0x110>
    1f46:	9a 83       	std	Y+2, r25	; 0x02
    1f48:	89 83       	std	Y+1, r24	; 0x01
		{
			_delay_ms(150);
			//while(Local_u8PinState == 0 ); /* not working */
			Copy_Pu8Value = 1;
    1f4a:	81 e0       	ldi	r24, 0x01	; 1
    1f4c:	8f 87       	std	Y+15, r24	; 0x0f
    1f4e:	04 c0       	rjmp	.+8      	; 0x1f58 <PB_u8GetState+0x126>
		}
		else if (Local_u8PinState == 1 )
    1f50:	88 89       	ldd	r24, Y+16	; 0x10
    1f52:	81 30       	cpi	r24, 0x01	; 1
    1f54:	09 f4       	brne	.+2      	; 0x1f58 <PB_u8GetState+0x126>
		{
			Copy_Pu8Value = 0;
    1f56:	1f 86       	std	Y+15, r1	; 0x0f





		return Copy_Pu8Value;
    1f58:	8f 85       	ldd	r24, Y+15	; 0x0f

}
    1f5a:	62 96       	adiw	r28, 0x12	; 18
    1f5c:	0f b6       	in	r0, 0x3f	; 63
    1f5e:	f8 94       	cli
    1f60:	de bf       	out	0x3e, r29	; 62
    1f62:	0f be       	out	0x3f, r0	; 63
    1f64:	cd bf       	out	0x3d, r28	; 61
    1f66:	cf 91       	pop	r28
    1f68:	df 91       	pop	r29
    1f6a:	08 95       	ret

00001f6c <PORT_VoidInit>:
#include "PORT_interface.h"
#include "PORT_register.h"


void PORT_VoidInit(void)
{
    1f6c:	df 93       	push	r29
    1f6e:	cf 93       	push	r28
    1f70:	cd b7       	in	r28, 0x3d	; 61
    1f72:	de b7       	in	r29, 0x3e	; 62
	DDRA = PORTA_DIR;
    1f74:	ea e3       	ldi	r30, 0x3A	; 58
    1f76:	f0 e0       	ldi	r31, 0x00	; 0
    1f78:	8f ef       	ldi	r24, 0xFF	; 255
    1f7a:	80 83       	st	Z, r24
	DDRB = PORTB_DIR;
    1f7c:	e7 e3       	ldi	r30, 0x37	; 55
    1f7e:	f0 e0       	ldi	r31, 0x00	; 0
    1f80:	10 82       	st	Z, r1
	DDRC = PORTC_DIR;
    1f82:	e4 e3       	ldi	r30, 0x34	; 52
    1f84:	f0 e0       	ldi	r31, 0x00	; 0
    1f86:	87 e2       	ldi	r24, 0x27	; 39
    1f88:	80 83       	st	Z, r24
	DDRD = PORTD_DIR;
    1f8a:	e1 e3       	ldi	r30, 0x31	; 49
    1f8c:	f0 e0       	ldi	r31, 0x00	; 0
    1f8e:	10 82       	st	Z, r1
	
	PORTA = PORTA_INITIAL_VALUE;
    1f90:	eb e3       	ldi	r30, 0x3B	; 59
    1f92:	f0 e0       	ldi	r31, 0x00	; 0
    1f94:	10 82       	st	Z, r1
	PORTB = PORTB_INITIAL_VALUE;
    1f96:	e8 e3       	ldi	r30, 0x38	; 56
    1f98:	f0 e0       	ldi	r31, 0x00	; 0
    1f9a:	10 82       	st	Z, r1
	PORTC = PORTC_INITIAL_VALUE;
    1f9c:	e5 e3       	ldi	r30, 0x35	; 53
    1f9e:	f0 e0       	ldi	r31, 0x00	; 0
    1fa0:	10 82       	st	Z, r1
	PORTD = PORTD_INITIAL_VALUE;
    1fa2:	e2 e3       	ldi	r30, 0x32	; 50
    1fa4:	f0 e0       	ldi	r31, 0x00	; 0
    1fa6:	8c e3       	ldi	r24, 0x3C	; 60
    1fa8:	80 83       	st	Z, r24


}
    1faa:	cf 91       	pop	r28
    1fac:	df 91       	pop	r29
    1fae:	08 95       	ret

00001fb0 <main>:
#include "KPD_interface.h"
#include "PB_interface.h"


void main (void)
{
    1fb0:	0f 93       	push	r16
    1fb2:	1f 93       	push	r17
    1fb4:	df 93       	push	r29
    1fb6:	cf 93       	push	r28
    1fb8:	cd b7       	in	r28, 0x3d	; 61
    1fba:	de b7       	in	r29, 0x3e	; 62
    1fbc:	cd 5e       	subi	r28, 0xED	; 237
    1fbe:	d1 40       	sbci	r29, 0x01	; 1
    1fc0:	0f b6       	in	r0, 0x3f	; 63
    1fc2:	f8 94       	cli
    1fc4:	de bf       	out	0x3e, r29	; 62
    1fc6:	0f be       	out	0x3f, r0	; 63
    1fc8:	cd bf       	out	0x3d, r28	; 61
	u8 arrow[8] ={0b00000100,0b00001110,0b00010101,0b00000100,0b00000100,0b00000100,0b00000100,0b00000000};
    1fca:	ce 01       	movw	r24, r28
    1fcc:	89 53       	subi	r24, 0x39	; 57
    1fce:	9e 4f       	sbci	r25, 0xFE	; 254
    1fd0:	c1 52       	subi	r28, 0x21	; 33
    1fd2:	de 4f       	sbci	r29, 0xFE	; 254
    1fd4:	99 83       	std	Y+1, r25	; 0x01
    1fd6:	88 83       	st	Y, r24
    1fd8:	cf 5d       	subi	r28, 0xDF	; 223
    1fda:	d1 40       	sbci	r29, 0x01	; 1
    1fdc:	89 e9       	ldi	r24, 0x99	; 153
    1fde:	91 e0       	ldi	r25, 0x01	; 1
    1fe0:	cf 51       	subi	r28, 0x1F	; 31
    1fe2:	de 4f       	sbci	r29, 0xFE	; 254
    1fe4:	99 83       	std	Y+1, r25	; 0x01
    1fe6:	88 83       	st	Y, r24
    1fe8:	c1 5e       	subi	r28, 0xE1	; 225
    1fea:	d1 40       	sbci	r29, 0x01	; 1
    1fec:	98 e0       	ldi	r25, 0x08	; 8
    1fee:	cd 51       	subi	r28, 0x1D	; 29
    1ff0:	de 4f       	sbci	r29, 0xFE	; 254
    1ff2:	98 83       	st	Y, r25
    1ff4:	c3 5e       	subi	r28, 0xE3	; 227
    1ff6:	d1 40       	sbci	r29, 0x01	; 1
    1ff8:	cf 51       	subi	r28, 0x1F	; 31
    1ffa:	de 4f       	sbci	r29, 0xFE	; 254
    1ffc:	e8 81       	ld	r30, Y
    1ffe:	f9 81       	ldd	r31, Y+1	; 0x01
    2000:	c1 5e       	subi	r28, 0xE1	; 225
    2002:	d1 40       	sbci	r29, 0x01	; 1
    2004:	00 80       	ld	r0, Z
    2006:	cf 51       	subi	r28, 0x1F	; 31
    2008:	de 4f       	sbci	r29, 0xFE	; 254
    200a:	88 81       	ld	r24, Y
    200c:	99 81       	ldd	r25, Y+1	; 0x01
    200e:	c1 5e       	subi	r28, 0xE1	; 225
    2010:	d1 40       	sbci	r29, 0x01	; 1
    2012:	01 96       	adiw	r24, 0x01	; 1
    2014:	cf 51       	subi	r28, 0x1F	; 31
    2016:	de 4f       	sbci	r29, 0xFE	; 254
    2018:	99 83       	std	Y+1, r25	; 0x01
    201a:	88 83       	st	Y, r24
    201c:	c1 5e       	subi	r28, 0xE1	; 225
    201e:	d1 40       	sbci	r29, 0x01	; 1
    2020:	c1 52       	subi	r28, 0x21	; 33
    2022:	de 4f       	sbci	r29, 0xFE	; 254
    2024:	e8 81       	ld	r30, Y
    2026:	f9 81       	ldd	r31, Y+1	; 0x01
    2028:	cf 5d       	subi	r28, 0xDF	; 223
    202a:	d1 40       	sbci	r29, 0x01	; 1
    202c:	00 82       	st	Z, r0
    202e:	c1 52       	subi	r28, 0x21	; 33
    2030:	de 4f       	sbci	r29, 0xFE	; 254
    2032:	88 81       	ld	r24, Y
    2034:	99 81       	ldd	r25, Y+1	; 0x01
    2036:	cf 5d       	subi	r28, 0xDF	; 223
    2038:	d1 40       	sbci	r29, 0x01	; 1
    203a:	01 96       	adiw	r24, 0x01	; 1
    203c:	c1 52       	subi	r28, 0x21	; 33
    203e:	de 4f       	sbci	r29, 0xFE	; 254
    2040:	99 83       	std	Y+1, r25	; 0x01
    2042:	88 83       	st	Y, r24
    2044:	cf 5d       	subi	r28, 0xDF	; 223
    2046:	d1 40       	sbci	r29, 0x01	; 1
    2048:	cd 51       	subi	r28, 0x1D	; 29
    204a:	de 4f       	sbci	r29, 0xFE	; 254
    204c:	98 81       	ld	r25, Y
    204e:	c3 5e       	subi	r28, 0xE3	; 227
    2050:	d1 40       	sbci	r29, 0x01	; 1
    2052:	91 50       	subi	r25, 0x01	; 1
    2054:	cd 51       	subi	r28, 0x1D	; 29
    2056:	de 4f       	sbci	r29, 0xFE	; 254
    2058:	98 83       	st	Y, r25
    205a:	c3 5e       	subi	r28, 0xE3	; 227
    205c:	d1 40       	sbci	r29, 0x01	; 1
    205e:	cd 51       	subi	r28, 0x1D	; 29
    2060:	de 4f       	sbci	r29, 0xFE	; 254
    2062:	e8 81       	ld	r30, Y
    2064:	c3 5e       	subi	r28, 0xE3	; 227
    2066:	d1 40       	sbci	r29, 0x01	; 1
    2068:	ee 23       	and	r30, r30
    206a:	31 f6       	brne	.-116    	; 0x1ff8 <main+0x48>
	u8 shape1[8] ={0b00001110,0b00010001,0b00010001,0b00010001,0b00001110,0b00000100,0b00000100,0b00000100};
    206c:	ce 01       	movw	r24, r28
    206e:	81 53       	subi	r24, 0x31	; 49
    2070:	9e 4f       	sbci	r25, 0xFE	; 254
    2072:	cc 51       	subi	r28, 0x1C	; 28
    2074:	de 4f       	sbci	r29, 0xFE	; 254
    2076:	99 83       	std	Y+1, r25	; 0x01
    2078:	88 83       	st	Y, r24
    207a:	c4 5e       	subi	r28, 0xE4	; 228
    207c:	d1 40       	sbci	r29, 0x01	; 1
    207e:	81 e9       	ldi	r24, 0x91	; 145
    2080:	91 e0       	ldi	r25, 0x01	; 1
    2082:	ca 51       	subi	r28, 0x1A	; 26
    2084:	de 4f       	sbci	r29, 0xFE	; 254
    2086:	99 83       	std	Y+1, r25	; 0x01
    2088:	88 83       	st	Y, r24
    208a:	c6 5e       	subi	r28, 0xE6	; 230
    208c:	d1 40       	sbci	r29, 0x01	; 1
    208e:	98 e0       	ldi	r25, 0x08	; 8
    2090:	c8 51       	subi	r28, 0x18	; 24
    2092:	de 4f       	sbci	r29, 0xFE	; 254
    2094:	98 83       	st	Y, r25
    2096:	c8 5e       	subi	r28, 0xE8	; 232
    2098:	d1 40       	sbci	r29, 0x01	; 1
    209a:	ca 51       	subi	r28, 0x1A	; 26
    209c:	de 4f       	sbci	r29, 0xFE	; 254
    209e:	e8 81       	ld	r30, Y
    20a0:	f9 81       	ldd	r31, Y+1	; 0x01
    20a2:	c6 5e       	subi	r28, 0xE6	; 230
    20a4:	d1 40       	sbci	r29, 0x01	; 1
    20a6:	00 80       	ld	r0, Z
    20a8:	ca 51       	subi	r28, 0x1A	; 26
    20aa:	de 4f       	sbci	r29, 0xFE	; 254
    20ac:	88 81       	ld	r24, Y
    20ae:	99 81       	ldd	r25, Y+1	; 0x01
    20b0:	c6 5e       	subi	r28, 0xE6	; 230
    20b2:	d1 40       	sbci	r29, 0x01	; 1
    20b4:	01 96       	adiw	r24, 0x01	; 1
    20b6:	ca 51       	subi	r28, 0x1A	; 26
    20b8:	de 4f       	sbci	r29, 0xFE	; 254
    20ba:	99 83       	std	Y+1, r25	; 0x01
    20bc:	88 83       	st	Y, r24
    20be:	c6 5e       	subi	r28, 0xE6	; 230
    20c0:	d1 40       	sbci	r29, 0x01	; 1
    20c2:	cc 51       	subi	r28, 0x1C	; 28
    20c4:	de 4f       	sbci	r29, 0xFE	; 254
    20c6:	e8 81       	ld	r30, Y
    20c8:	f9 81       	ldd	r31, Y+1	; 0x01
    20ca:	c4 5e       	subi	r28, 0xE4	; 228
    20cc:	d1 40       	sbci	r29, 0x01	; 1
    20ce:	00 82       	st	Z, r0
    20d0:	cc 51       	subi	r28, 0x1C	; 28
    20d2:	de 4f       	sbci	r29, 0xFE	; 254
    20d4:	88 81       	ld	r24, Y
    20d6:	99 81       	ldd	r25, Y+1	; 0x01
    20d8:	c4 5e       	subi	r28, 0xE4	; 228
    20da:	d1 40       	sbci	r29, 0x01	; 1
    20dc:	01 96       	adiw	r24, 0x01	; 1
    20de:	cc 51       	subi	r28, 0x1C	; 28
    20e0:	de 4f       	sbci	r29, 0xFE	; 254
    20e2:	99 83       	std	Y+1, r25	; 0x01
    20e4:	88 83       	st	Y, r24
    20e6:	c4 5e       	subi	r28, 0xE4	; 228
    20e8:	d1 40       	sbci	r29, 0x01	; 1
    20ea:	c8 51       	subi	r28, 0x18	; 24
    20ec:	de 4f       	sbci	r29, 0xFE	; 254
    20ee:	98 81       	ld	r25, Y
    20f0:	c8 5e       	subi	r28, 0xE8	; 232
    20f2:	d1 40       	sbci	r29, 0x01	; 1
    20f4:	91 50       	subi	r25, 0x01	; 1
    20f6:	c8 51       	subi	r28, 0x18	; 24
    20f8:	de 4f       	sbci	r29, 0xFE	; 254
    20fa:	98 83       	st	Y, r25
    20fc:	c8 5e       	subi	r28, 0xE8	; 232
    20fe:	d1 40       	sbci	r29, 0x01	; 1
    2100:	c8 51       	subi	r28, 0x18	; 24
    2102:	de 4f       	sbci	r29, 0xFE	; 254
    2104:	e8 81       	ld	r30, Y
    2106:	c8 5e       	subi	r28, 0xE8	; 232
    2108:	d1 40       	sbci	r29, 0x01	; 1
    210a:	ee 23       	and	r30, r30
    210c:	31 f6       	brne	.-116    	; 0x209a <main+0xea>
	u8 shape2[8] ={0b00011111,0b00000100,0b00000100,0b00000100,0b00000100,0b00001010,0b00010001,0b00000000};
    210e:	ce 01       	movw	r24, r28
    2110:	89 52       	subi	r24, 0x29	; 41
    2112:	9e 4f       	sbci	r25, 0xFE	; 254
    2114:	c7 51       	subi	r28, 0x17	; 23
    2116:	de 4f       	sbci	r29, 0xFE	; 254
    2118:	99 83       	std	Y+1, r25	; 0x01
    211a:	88 83       	st	Y, r24
    211c:	c9 5e       	subi	r28, 0xE9	; 233
    211e:	d1 40       	sbci	r29, 0x01	; 1
    2120:	89 e8       	ldi	r24, 0x89	; 137
    2122:	91 e0       	ldi	r25, 0x01	; 1
    2124:	c5 51       	subi	r28, 0x15	; 21
    2126:	de 4f       	sbci	r29, 0xFE	; 254
    2128:	99 83       	std	Y+1, r25	; 0x01
    212a:	88 83       	st	Y, r24
    212c:	cb 5e       	subi	r28, 0xEB	; 235
    212e:	d1 40       	sbci	r29, 0x01	; 1
    2130:	98 e0       	ldi	r25, 0x08	; 8
    2132:	c3 51       	subi	r28, 0x13	; 19
    2134:	de 4f       	sbci	r29, 0xFE	; 254
    2136:	98 83       	st	Y, r25
    2138:	cd 5e       	subi	r28, 0xED	; 237
    213a:	d1 40       	sbci	r29, 0x01	; 1
    213c:	c5 51       	subi	r28, 0x15	; 21
    213e:	de 4f       	sbci	r29, 0xFE	; 254
    2140:	e8 81       	ld	r30, Y
    2142:	f9 81       	ldd	r31, Y+1	; 0x01
    2144:	cb 5e       	subi	r28, 0xEB	; 235
    2146:	d1 40       	sbci	r29, 0x01	; 1
    2148:	00 80       	ld	r0, Z
    214a:	c5 51       	subi	r28, 0x15	; 21
    214c:	de 4f       	sbci	r29, 0xFE	; 254
    214e:	88 81       	ld	r24, Y
    2150:	99 81       	ldd	r25, Y+1	; 0x01
    2152:	cb 5e       	subi	r28, 0xEB	; 235
    2154:	d1 40       	sbci	r29, 0x01	; 1
    2156:	01 96       	adiw	r24, 0x01	; 1
    2158:	c5 51       	subi	r28, 0x15	; 21
    215a:	de 4f       	sbci	r29, 0xFE	; 254
    215c:	99 83       	std	Y+1, r25	; 0x01
    215e:	88 83       	st	Y, r24
    2160:	cb 5e       	subi	r28, 0xEB	; 235
    2162:	d1 40       	sbci	r29, 0x01	; 1
    2164:	c7 51       	subi	r28, 0x17	; 23
    2166:	de 4f       	sbci	r29, 0xFE	; 254
    2168:	e8 81       	ld	r30, Y
    216a:	f9 81       	ldd	r31, Y+1	; 0x01
    216c:	c9 5e       	subi	r28, 0xE9	; 233
    216e:	d1 40       	sbci	r29, 0x01	; 1
    2170:	00 82       	st	Z, r0
    2172:	c7 51       	subi	r28, 0x17	; 23
    2174:	de 4f       	sbci	r29, 0xFE	; 254
    2176:	88 81       	ld	r24, Y
    2178:	99 81       	ldd	r25, Y+1	; 0x01
    217a:	c9 5e       	subi	r28, 0xE9	; 233
    217c:	d1 40       	sbci	r29, 0x01	; 1
    217e:	01 96       	adiw	r24, 0x01	; 1
    2180:	c7 51       	subi	r28, 0x17	; 23
    2182:	de 4f       	sbci	r29, 0xFE	; 254
    2184:	99 83       	std	Y+1, r25	; 0x01
    2186:	88 83       	st	Y, r24
    2188:	c9 5e       	subi	r28, 0xE9	; 233
    218a:	d1 40       	sbci	r29, 0x01	; 1
    218c:	c3 51       	subi	r28, 0x13	; 19
    218e:	de 4f       	sbci	r29, 0xFE	; 254
    2190:	98 81       	ld	r25, Y
    2192:	cd 5e       	subi	r28, 0xED	; 237
    2194:	d1 40       	sbci	r29, 0x01	; 1
    2196:	91 50       	subi	r25, 0x01	; 1
    2198:	c3 51       	subi	r28, 0x13	; 19
    219a:	de 4f       	sbci	r29, 0xFE	; 254
    219c:	98 83       	st	Y, r25
    219e:	cd 5e       	subi	r28, 0xED	; 237
    21a0:	d1 40       	sbci	r29, 0x01	; 1
    21a2:	c3 51       	subi	r28, 0x13	; 19
    21a4:	de 4f       	sbci	r29, 0xFE	; 254
    21a6:	e8 81       	ld	r30, Y
    21a8:	cd 5e       	subi	r28, 0xED	; 237
    21aa:	d1 40       	sbci	r29, 0x01	; 1
    21ac:	ee 23       	and	r30, r30
    21ae:	31 f6       	brne	.-116    	; 0x213c <main+0x18c>
	u8 Local_H_1=0;
    21b0:	fe 01       	movw	r30, r28
    21b2:	ea 53       	subi	r30, 0x3A	; 58
    21b4:	fe 4f       	sbci	r31, 0xFE	; 254
    21b6:	10 82       	st	Z, r1
	u8 Local_H_2=0;
    21b8:	fe 01       	movw	r30, r28
    21ba:	eb 53       	subi	r30, 0x3B	; 59
    21bc:	fe 4f       	sbci	r31, 0xFE	; 254
    21be:	10 82       	st	Z, r1
	u8 Local_M_1=0;
    21c0:	fe 01       	movw	r30, r28
    21c2:	ec 53       	subi	r30, 0x3C	; 60
    21c4:	fe 4f       	sbci	r31, 0xFE	; 254
    21c6:	10 82       	st	Z, r1
	u8 Local_M_2=0;
    21c8:	fe 01       	movw	r30, r28
    21ca:	ed 53       	subi	r30, 0x3D	; 61
    21cc:	fe 4f       	sbci	r31, 0xFE	; 254
    21ce:	10 82       	st	Z, r1
	u8 Local_S_1=0;
    21d0:	fe 01       	movw	r30, r28
    21d2:	ee 53       	subi	r30, 0x3E	; 62
    21d4:	fe 4f       	sbci	r31, 0xFE	; 254
    21d6:	10 82       	st	Z, r1
	u8 Local_S_2=0;
    21d8:	fe 01       	movw	r30, r28
    21da:	ef 53       	subi	r30, 0x3F	; 63
    21dc:	fe 4f       	sbci	r31, 0xFE	; 254
    21de:	10 82       	st	Z, r1




	PORT_VoidInit();
    21e0:	0e 94 b6 0f 	call	0x1f6c	; 0x1f6c <PORT_VoidInit>
	CLCD_voidInit();
    21e4:	0e 94 95 0a 	call	0x152a	; 0x152a <CLCD_voidInit>
	CLCD_VoidWriteNumber(Local_H_1);
    21e8:	fe 01       	movw	r30, r28
    21ea:	ea 53       	subi	r30, 0x3A	; 58
    21ec:	fe 4f       	sbci	r31, 0xFE	; 254
    21ee:	80 81       	ld	r24, Z
    21f0:	88 2f       	mov	r24, r24
    21f2:	90 e0       	ldi	r25, 0x00	; 0
    21f4:	a0 e0       	ldi	r26, 0x00	; 0
    21f6:	b0 e0       	ldi	r27, 0x00	; 0
    21f8:	bc 01       	movw	r22, r24
    21fa:	cd 01       	movw	r24, r26
    21fc:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2200:	dc 01       	movw	r26, r24
    2202:	cb 01       	movw	r24, r22
    2204:	bc 01       	movw	r22, r24
    2206:	cd 01       	movw	r24, r26
    2208:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
	CLCD_VoidWriteNumber(Local_H_1);
    220c:	fe 01       	movw	r30, r28
    220e:	ea 53       	subi	r30, 0x3A	; 58
    2210:	fe 4f       	sbci	r31, 0xFE	; 254
    2212:	80 81       	ld	r24, Z
    2214:	88 2f       	mov	r24, r24
    2216:	90 e0       	ldi	r25, 0x00	; 0
    2218:	a0 e0       	ldi	r26, 0x00	; 0
    221a:	b0 e0       	ldi	r27, 0x00	; 0
    221c:	bc 01       	movw	r22, r24
    221e:	cd 01       	movw	r24, r26
    2220:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2224:	dc 01       	movw	r26, r24
    2226:	cb 01       	movw	r24, r22
    2228:	bc 01       	movw	r22, r24
    222a:	cd 01       	movw	r24, r26
    222c:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
	CLCD_voidSendData(':');
    2230:	8a e3       	ldi	r24, 0x3A	; 58
    2232:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <CLCD_voidSendData>
	CLCD_VoidWriteNumber(Local_M_1);
    2236:	fe 01       	movw	r30, r28
    2238:	ec 53       	subi	r30, 0x3C	; 60
    223a:	fe 4f       	sbci	r31, 0xFE	; 254
    223c:	80 81       	ld	r24, Z
    223e:	88 2f       	mov	r24, r24
    2240:	90 e0       	ldi	r25, 0x00	; 0
    2242:	a0 e0       	ldi	r26, 0x00	; 0
    2244:	b0 e0       	ldi	r27, 0x00	; 0
    2246:	bc 01       	movw	r22, r24
    2248:	cd 01       	movw	r24, r26
    224a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    224e:	dc 01       	movw	r26, r24
    2250:	cb 01       	movw	r24, r22
    2252:	bc 01       	movw	r22, r24
    2254:	cd 01       	movw	r24, r26
    2256:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
	CLCD_VoidWriteNumber(Local_M_1);
    225a:	fe 01       	movw	r30, r28
    225c:	ec 53       	subi	r30, 0x3C	; 60
    225e:	fe 4f       	sbci	r31, 0xFE	; 254
    2260:	80 81       	ld	r24, Z
    2262:	88 2f       	mov	r24, r24
    2264:	90 e0       	ldi	r25, 0x00	; 0
    2266:	a0 e0       	ldi	r26, 0x00	; 0
    2268:	b0 e0       	ldi	r27, 0x00	; 0
    226a:	bc 01       	movw	r22, r24
    226c:	cd 01       	movw	r24, r26
    226e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2272:	dc 01       	movw	r26, r24
    2274:	cb 01       	movw	r24, r22
    2276:	bc 01       	movw	r22, r24
    2278:	cd 01       	movw	r24, r26
    227a:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
	CLCD_voidSendData(':');
    227e:	8a e3       	ldi	r24, 0x3A	; 58
    2280:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <CLCD_voidSendData>
	CLCD_VoidWriteNumber(Local_S_1);
    2284:	fe 01       	movw	r30, r28
    2286:	ee 53       	subi	r30, 0x3E	; 62
    2288:	fe 4f       	sbci	r31, 0xFE	; 254
    228a:	80 81       	ld	r24, Z
    228c:	88 2f       	mov	r24, r24
    228e:	90 e0       	ldi	r25, 0x00	; 0
    2290:	a0 e0       	ldi	r26, 0x00	; 0
    2292:	b0 e0       	ldi	r27, 0x00	; 0
    2294:	bc 01       	movw	r22, r24
    2296:	cd 01       	movw	r24, r26
    2298:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    229c:	dc 01       	movw	r26, r24
    229e:	cb 01       	movw	r24, r22
    22a0:	bc 01       	movw	r22, r24
    22a2:	cd 01       	movw	r24, r26
    22a4:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
	CLCD_VoidWriteNumber(Local_S_1);
    22a8:	fe 01       	movw	r30, r28
    22aa:	ee 53       	subi	r30, 0x3E	; 62
    22ac:	fe 4f       	sbci	r31, 0xFE	; 254
    22ae:	80 81       	ld	r24, Z
    22b0:	88 2f       	mov	r24, r24
    22b2:	90 e0       	ldi	r25, 0x00	; 0
    22b4:	a0 e0       	ldi	r26, 0x00	; 0
    22b6:	b0 e0       	ldi	r27, 0x00	; 0
    22b8:	bc 01       	movw	r22, r24
    22ba:	cd 01       	movw	r24, r26
    22bc:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    22c0:	dc 01       	movw	r26, r24
    22c2:	cb 01       	movw	r24, r22
    22c4:	bc 01       	movw	r22, r24
    22c6:	cd 01       	movw	r24, r26
    22c8:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
	CLCD_voidWriteSpecialCharacter(arrow,1,1,0);
    22cc:	ce 01       	movw	r24, r28
    22ce:	89 53       	subi	r24, 0x39	; 57
    22d0:	9e 4f       	sbci	r25, 0xFE	; 254
    22d2:	61 e0       	ldi	r22, 0x01	; 1
    22d4:	41 e0       	ldi	r20, 0x01	; 1
    22d6:	20 e0       	ldi	r18, 0x00	; 0
    22d8:	0e 94 77 0b 	call	0x16ee	; 0x16ee <CLCD_voidWriteSpecialCharacter>
	while (1)
	{

			do
			{
				if (PB_u8GetState(DIO_u8PORTD,DIO_u8PIN2)==1)
    22dc:	83 e0       	ldi	r24, 0x03	; 3
    22de:	62 e0       	ldi	r22, 0x02	; 2
    22e0:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    22e4:	81 30       	cpi	r24, 0x01	; 1
    22e6:	09 f0       	breq	.+2      	; 0x22ea <main+0x33a>
    22e8:	a8 c1       	rjmp	.+848    	; 0x263a <main+0x68a>
				{
					if (Local_H_1>=9)
    22ea:	fe 01       	movw	r30, r28
    22ec:	ea 53       	subi	r30, 0x3A	; 58
    22ee:	fe 4f       	sbci	r31, 0xFE	; 254
    22f0:	80 81       	ld	r24, Z
    22f2:	89 30       	cpi	r24, 0x09	; 9
    22f4:	08 f4       	brcc	.+2      	; 0x22f8 <main+0x348>
    22f6:	ce c0       	rjmp	.+412    	; 0x2494 <main+0x4e4>
    22f8:	fe 01       	movw	r30, r28
    22fa:	e3 54       	subi	r30, 0x43	; 67
    22fc:	fe 4f       	sbci	r31, 0xFE	; 254
    22fe:	80 e0       	ldi	r24, 0x00	; 0
    2300:	90 e0       	ldi	r25, 0x00	; 0
    2302:	a6 e1       	ldi	r26, 0x16	; 22
    2304:	b3 e4       	ldi	r27, 0x43	; 67
    2306:	80 83       	st	Z, r24
    2308:	91 83       	std	Z+1, r25	; 0x01
    230a:	a2 83       	std	Z+2, r26	; 0x02
    230c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    230e:	8e 01       	movw	r16, r28
    2310:	07 54       	subi	r16, 0x47	; 71
    2312:	1e 4f       	sbci	r17, 0xFE	; 254
    2314:	fe 01       	movw	r30, r28
    2316:	e3 54       	subi	r30, 0x43	; 67
    2318:	fe 4f       	sbci	r31, 0xFE	; 254
    231a:	60 81       	ld	r22, Z
    231c:	71 81       	ldd	r23, Z+1	; 0x01
    231e:	82 81       	ldd	r24, Z+2	; 0x02
    2320:	93 81       	ldd	r25, Z+3	; 0x03
    2322:	20 e0       	ldi	r18, 0x00	; 0
    2324:	30 e0       	ldi	r19, 0x00	; 0
    2326:	4a ef       	ldi	r20, 0xFA	; 250
    2328:	54 e4       	ldi	r21, 0x44	; 68
    232a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    232e:	dc 01       	movw	r26, r24
    2330:	cb 01       	movw	r24, r22
    2332:	f8 01       	movw	r30, r16
    2334:	80 83       	st	Z, r24
    2336:	91 83       	std	Z+1, r25	; 0x01
    2338:	a2 83       	std	Z+2, r26	; 0x02
    233a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    233c:	fe 01       	movw	r30, r28
    233e:	e7 54       	subi	r30, 0x47	; 71
    2340:	fe 4f       	sbci	r31, 0xFE	; 254
    2342:	60 81       	ld	r22, Z
    2344:	71 81       	ldd	r23, Z+1	; 0x01
    2346:	82 81       	ldd	r24, Z+2	; 0x02
    2348:	93 81       	ldd	r25, Z+3	; 0x03
    234a:	20 e0       	ldi	r18, 0x00	; 0
    234c:	30 e0       	ldi	r19, 0x00	; 0
    234e:	40 e8       	ldi	r20, 0x80	; 128
    2350:	5f e3       	ldi	r21, 0x3F	; 63
    2352:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2356:	88 23       	and	r24, r24
    2358:	44 f4       	brge	.+16     	; 0x236a <main+0x3ba>
		__ticks = 1;
    235a:	fe 01       	movw	r30, r28
    235c:	e9 54       	subi	r30, 0x49	; 73
    235e:	fe 4f       	sbci	r31, 0xFE	; 254
    2360:	81 e0       	ldi	r24, 0x01	; 1
    2362:	90 e0       	ldi	r25, 0x00	; 0
    2364:	91 83       	std	Z+1, r25	; 0x01
    2366:	80 83       	st	Z, r24
    2368:	64 c0       	rjmp	.+200    	; 0x2432 <main+0x482>
	else if (__tmp > 65535)
    236a:	fe 01       	movw	r30, r28
    236c:	e7 54       	subi	r30, 0x47	; 71
    236e:	fe 4f       	sbci	r31, 0xFE	; 254
    2370:	60 81       	ld	r22, Z
    2372:	71 81       	ldd	r23, Z+1	; 0x01
    2374:	82 81       	ldd	r24, Z+2	; 0x02
    2376:	93 81       	ldd	r25, Z+3	; 0x03
    2378:	20 e0       	ldi	r18, 0x00	; 0
    237a:	3f ef       	ldi	r19, 0xFF	; 255
    237c:	4f e7       	ldi	r20, 0x7F	; 127
    237e:	57 e4       	ldi	r21, 0x47	; 71
    2380:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2384:	18 16       	cp	r1, r24
    2386:	0c f0       	brlt	.+2      	; 0x238a <main+0x3da>
    2388:	43 c0       	rjmp	.+134    	; 0x2410 <main+0x460>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    238a:	fe 01       	movw	r30, r28
    238c:	e3 54       	subi	r30, 0x43	; 67
    238e:	fe 4f       	sbci	r31, 0xFE	; 254
    2390:	60 81       	ld	r22, Z
    2392:	71 81       	ldd	r23, Z+1	; 0x01
    2394:	82 81       	ldd	r24, Z+2	; 0x02
    2396:	93 81       	ldd	r25, Z+3	; 0x03
    2398:	20 e0       	ldi	r18, 0x00	; 0
    239a:	30 e0       	ldi	r19, 0x00	; 0
    239c:	40 e2       	ldi	r20, 0x20	; 32
    239e:	51 e4       	ldi	r21, 0x41	; 65
    23a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23a4:	dc 01       	movw	r26, r24
    23a6:	cb 01       	movw	r24, r22
    23a8:	8e 01       	movw	r16, r28
    23aa:	09 54       	subi	r16, 0x49	; 73
    23ac:	1e 4f       	sbci	r17, 0xFE	; 254
    23ae:	bc 01       	movw	r22, r24
    23b0:	cd 01       	movw	r24, r26
    23b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23b6:	dc 01       	movw	r26, r24
    23b8:	cb 01       	movw	r24, r22
    23ba:	f8 01       	movw	r30, r16
    23bc:	91 83       	std	Z+1, r25	; 0x01
    23be:	80 83       	st	Z, r24
    23c0:	1f c0       	rjmp	.+62     	; 0x2400 <main+0x450>
    23c2:	fe 01       	movw	r30, r28
    23c4:	eb 54       	subi	r30, 0x4B	; 75
    23c6:	fe 4f       	sbci	r31, 0xFE	; 254
    23c8:	88 ec       	ldi	r24, 0xC8	; 200
    23ca:	90 e0       	ldi	r25, 0x00	; 0
    23cc:	91 83       	std	Z+1, r25	; 0x01
    23ce:	80 83       	st	Z, r24
    23d0:	fe 01       	movw	r30, r28
    23d2:	eb 54       	subi	r30, 0x4B	; 75
    23d4:	fe 4f       	sbci	r31, 0xFE	; 254
    23d6:	80 81       	ld	r24, Z
    23d8:	91 81       	ldd	r25, Z+1	; 0x01
    23da:	01 97       	sbiw	r24, 0x01	; 1
    23dc:	f1 f7       	brne	.-4      	; 0x23da <main+0x42a>
    23de:	fe 01       	movw	r30, r28
    23e0:	eb 54       	subi	r30, 0x4B	; 75
    23e2:	fe 4f       	sbci	r31, 0xFE	; 254
    23e4:	91 83       	std	Z+1, r25	; 0x01
    23e6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23e8:	de 01       	movw	r26, r28
    23ea:	a9 54       	subi	r26, 0x49	; 73
    23ec:	be 4f       	sbci	r27, 0xFE	; 254
    23ee:	fe 01       	movw	r30, r28
    23f0:	e9 54       	subi	r30, 0x49	; 73
    23f2:	fe 4f       	sbci	r31, 0xFE	; 254
    23f4:	80 81       	ld	r24, Z
    23f6:	91 81       	ldd	r25, Z+1	; 0x01
    23f8:	01 97       	sbiw	r24, 0x01	; 1
    23fa:	11 96       	adiw	r26, 0x01	; 1
    23fc:	9c 93       	st	X, r25
    23fe:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2400:	fe 01       	movw	r30, r28
    2402:	e9 54       	subi	r30, 0x49	; 73
    2404:	fe 4f       	sbci	r31, 0xFE	; 254
    2406:	80 81       	ld	r24, Z
    2408:	91 81       	ldd	r25, Z+1	; 0x01
    240a:	00 97       	sbiw	r24, 0x00	; 0
    240c:	d1 f6       	brne	.-76     	; 0x23c2 <main+0x412>
    240e:	27 c0       	rjmp	.+78     	; 0x245e <main+0x4ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2410:	8e 01       	movw	r16, r28
    2412:	09 54       	subi	r16, 0x49	; 73
    2414:	1e 4f       	sbci	r17, 0xFE	; 254
    2416:	fe 01       	movw	r30, r28
    2418:	e7 54       	subi	r30, 0x47	; 71
    241a:	fe 4f       	sbci	r31, 0xFE	; 254
    241c:	60 81       	ld	r22, Z
    241e:	71 81       	ldd	r23, Z+1	; 0x01
    2420:	82 81       	ldd	r24, Z+2	; 0x02
    2422:	93 81       	ldd	r25, Z+3	; 0x03
    2424:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2428:	dc 01       	movw	r26, r24
    242a:	cb 01       	movw	r24, r22
    242c:	f8 01       	movw	r30, r16
    242e:	91 83       	std	Z+1, r25	; 0x01
    2430:	80 83       	st	Z, r24
    2432:	de 01       	movw	r26, r28
    2434:	ad 54       	subi	r26, 0x4D	; 77
    2436:	be 4f       	sbci	r27, 0xFE	; 254
    2438:	fe 01       	movw	r30, r28
    243a:	e9 54       	subi	r30, 0x49	; 73
    243c:	fe 4f       	sbci	r31, 0xFE	; 254
    243e:	80 81       	ld	r24, Z
    2440:	91 81       	ldd	r25, Z+1	; 0x01
    2442:	8d 93       	st	X+, r24
    2444:	9c 93       	st	X, r25
    2446:	fe 01       	movw	r30, r28
    2448:	ed 54       	subi	r30, 0x4D	; 77
    244a:	fe 4f       	sbci	r31, 0xFE	; 254
    244c:	80 81       	ld	r24, Z
    244e:	91 81       	ldd	r25, Z+1	; 0x01
    2450:	01 97       	sbiw	r24, 0x01	; 1
    2452:	f1 f7       	brne	.-4      	; 0x2450 <main+0x4a0>
    2454:	fe 01       	movw	r30, r28
    2456:	ed 54       	subi	r30, 0x4D	; 77
    2458:	fe 4f       	sbci	r31, 0xFE	; 254
    245a:	91 83       	std	Z+1, r25	; 0x01
    245c:	80 83       	st	Z, r24
					{
						_delay_ms(150);
						Local_H_1=0;
    245e:	fe 01       	movw	r30, r28
    2460:	ea 53       	subi	r30, 0x3A	; 58
    2462:	fe 4f       	sbci	r31, 0xFE	; 254
    2464:	10 82       	st	Z, r1
						CLCD_voidGoToXY(0,0);
    2466:	80 e0       	ldi	r24, 0x00	; 0
    2468:	60 e0       	ldi	r22, 0x00	; 0
    246a:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_H_1);
    246e:	fe 01       	movw	r30, r28
    2470:	ea 53       	subi	r30, 0x3A	; 58
    2472:	fe 4f       	sbci	r31, 0xFE	; 254
    2474:	80 81       	ld	r24, Z
    2476:	88 2f       	mov	r24, r24
    2478:	90 e0       	ldi	r25, 0x00	; 0
    247a:	a0 e0       	ldi	r26, 0x00	; 0
    247c:	b0 e0       	ldi	r27, 0x00	; 0
    247e:	bc 01       	movw	r22, r24
    2480:	cd 01       	movw	r24, r26
    2482:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2486:	dc 01       	movw	r26, r24
    2488:	cb 01       	movw	r24, r22
    248a:	bc 01       	movw	r22, r24
    248c:	cd 01       	movw	r24, r26
    248e:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    2492:	82 c2       	rjmp	.+1284   	; 0x2998 <main+0x9e8>
    2494:	fe 01       	movw	r30, r28
    2496:	e1 55       	subi	r30, 0x51	; 81
    2498:	fe 4f       	sbci	r31, 0xFE	; 254
    249a:	80 e0       	ldi	r24, 0x00	; 0
    249c:	90 e0       	ldi	r25, 0x00	; 0
    249e:	a6 e1       	ldi	r26, 0x16	; 22
    24a0:	b3 e4       	ldi	r27, 0x43	; 67
    24a2:	80 83       	st	Z, r24
    24a4:	91 83       	std	Z+1, r25	; 0x01
    24a6:	a2 83       	std	Z+2, r26	; 0x02
    24a8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24aa:	8e 01       	movw	r16, r28
    24ac:	05 55       	subi	r16, 0x55	; 85
    24ae:	1e 4f       	sbci	r17, 0xFE	; 254
    24b0:	fe 01       	movw	r30, r28
    24b2:	e1 55       	subi	r30, 0x51	; 81
    24b4:	fe 4f       	sbci	r31, 0xFE	; 254
    24b6:	60 81       	ld	r22, Z
    24b8:	71 81       	ldd	r23, Z+1	; 0x01
    24ba:	82 81       	ldd	r24, Z+2	; 0x02
    24bc:	93 81       	ldd	r25, Z+3	; 0x03
    24be:	20 e0       	ldi	r18, 0x00	; 0
    24c0:	30 e0       	ldi	r19, 0x00	; 0
    24c2:	4a ef       	ldi	r20, 0xFA	; 250
    24c4:	54 e4       	ldi	r21, 0x44	; 68
    24c6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24ca:	dc 01       	movw	r26, r24
    24cc:	cb 01       	movw	r24, r22
    24ce:	f8 01       	movw	r30, r16
    24d0:	80 83       	st	Z, r24
    24d2:	91 83       	std	Z+1, r25	; 0x01
    24d4:	a2 83       	std	Z+2, r26	; 0x02
    24d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    24d8:	fe 01       	movw	r30, r28
    24da:	e5 55       	subi	r30, 0x55	; 85
    24dc:	fe 4f       	sbci	r31, 0xFE	; 254
    24de:	60 81       	ld	r22, Z
    24e0:	71 81       	ldd	r23, Z+1	; 0x01
    24e2:	82 81       	ldd	r24, Z+2	; 0x02
    24e4:	93 81       	ldd	r25, Z+3	; 0x03
    24e6:	20 e0       	ldi	r18, 0x00	; 0
    24e8:	30 e0       	ldi	r19, 0x00	; 0
    24ea:	40 e8       	ldi	r20, 0x80	; 128
    24ec:	5f e3       	ldi	r21, 0x3F	; 63
    24ee:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    24f2:	88 23       	and	r24, r24
    24f4:	44 f4       	brge	.+16     	; 0x2506 <main+0x556>
		__ticks = 1;
    24f6:	fe 01       	movw	r30, r28
    24f8:	e7 55       	subi	r30, 0x57	; 87
    24fa:	fe 4f       	sbci	r31, 0xFE	; 254
    24fc:	81 e0       	ldi	r24, 0x01	; 1
    24fe:	90 e0       	ldi	r25, 0x00	; 0
    2500:	91 83       	std	Z+1, r25	; 0x01
    2502:	80 83       	st	Z, r24
    2504:	64 c0       	rjmp	.+200    	; 0x25ce <main+0x61e>
	else if (__tmp > 65535)
    2506:	fe 01       	movw	r30, r28
    2508:	e5 55       	subi	r30, 0x55	; 85
    250a:	fe 4f       	sbci	r31, 0xFE	; 254
    250c:	60 81       	ld	r22, Z
    250e:	71 81       	ldd	r23, Z+1	; 0x01
    2510:	82 81       	ldd	r24, Z+2	; 0x02
    2512:	93 81       	ldd	r25, Z+3	; 0x03
    2514:	20 e0       	ldi	r18, 0x00	; 0
    2516:	3f ef       	ldi	r19, 0xFF	; 255
    2518:	4f e7       	ldi	r20, 0x7F	; 127
    251a:	57 e4       	ldi	r21, 0x47	; 71
    251c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2520:	18 16       	cp	r1, r24
    2522:	0c f0       	brlt	.+2      	; 0x2526 <main+0x576>
    2524:	43 c0       	rjmp	.+134    	; 0x25ac <main+0x5fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2526:	fe 01       	movw	r30, r28
    2528:	e1 55       	subi	r30, 0x51	; 81
    252a:	fe 4f       	sbci	r31, 0xFE	; 254
    252c:	60 81       	ld	r22, Z
    252e:	71 81       	ldd	r23, Z+1	; 0x01
    2530:	82 81       	ldd	r24, Z+2	; 0x02
    2532:	93 81       	ldd	r25, Z+3	; 0x03
    2534:	20 e0       	ldi	r18, 0x00	; 0
    2536:	30 e0       	ldi	r19, 0x00	; 0
    2538:	40 e2       	ldi	r20, 0x20	; 32
    253a:	51 e4       	ldi	r21, 0x41	; 65
    253c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2540:	dc 01       	movw	r26, r24
    2542:	cb 01       	movw	r24, r22
    2544:	8e 01       	movw	r16, r28
    2546:	07 55       	subi	r16, 0x57	; 87
    2548:	1e 4f       	sbci	r17, 0xFE	; 254
    254a:	bc 01       	movw	r22, r24
    254c:	cd 01       	movw	r24, r26
    254e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2552:	dc 01       	movw	r26, r24
    2554:	cb 01       	movw	r24, r22
    2556:	f8 01       	movw	r30, r16
    2558:	91 83       	std	Z+1, r25	; 0x01
    255a:	80 83       	st	Z, r24
    255c:	1f c0       	rjmp	.+62     	; 0x259c <main+0x5ec>
    255e:	fe 01       	movw	r30, r28
    2560:	e9 55       	subi	r30, 0x59	; 89
    2562:	fe 4f       	sbci	r31, 0xFE	; 254
    2564:	88 ec       	ldi	r24, 0xC8	; 200
    2566:	90 e0       	ldi	r25, 0x00	; 0
    2568:	91 83       	std	Z+1, r25	; 0x01
    256a:	80 83       	st	Z, r24
    256c:	fe 01       	movw	r30, r28
    256e:	e9 55       	subi	r30, 0x59	; 89
    2570:	fe 4f       	sbci	r31, 0xFE	; 254
    2572:	80 81       	ld	r24, Z
    2574:	91 81       	ldd	r25, Z+1	; 0x01
    2576:	01 97       	sbiw	r24, 0x01	; 1
    2578:	f1 f7       	brne	.-4      	; 0x2576 <main+0x5c6>
    257a:	fe 01       	movw	r30, r28
    257c:	e9 55       	subi	r30, 0x59	; 89
    257e:	fe 4f       	sbci	r31, 0xFE	; 254
    2580:	91 83       	std	Z+1, r25	; 0x01
    2582:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2584:	de 01       	movw	r26, r28
    2586:	a7 55       	subi	r26, 0x57	; 87
    2588:	be 4f       	sbci	r27, 0xFE	; 254
    258a:	fe 01       	movw	r30, r28
    258c:	e7 55       	subi	r30, 0x57	; 87
    258e:	fe 4f       	sbci	r31, 0xFE	; 254
    2590:	80 81       	ld	r24, Z
    2592:	91 81       	ldd	r25, Z+1	; 0x01
    2594:	01 97       	sbiw	r24, 0x01	; 1
    2596:	11 96       	adiw	r26, 0x01	; 1
    2598:	9c 93       	st	X, r25
    259a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    259c:	fe 01       	movw	r30, r28
    259e:	e7 55       	subi	r30, 0x57	; 87
    25a0:	fe 4f       	sbci	r31, 0xFE	; 254
    25a2:	80 81       	ld	r24, Z
    25a4:	91 81       	ldd	r25, Z+1	; 0x01
    25a6:	00 97       	sbiw	r24, 0x00	; 0
    25a8:	d1 f6       	brne	.-76     	; 0x255e <main+0x5ae>
    25aa:	27 c0       	rjmp	.+78     	; 0x25fa <main+0x64a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25ac:	8e 01       	movw	r16, r28
    25ae:	07 55       	subi	r16, 0x57	; 87
    25b0:	1e 4f       	sbci	r17, 0xFE	; 254
    25b2:	fe 01       	movw	r30, r28
    25b4:	e5 55       	subi	r30, 0x55	; 85
    25b6:	fe 4f       	sbci	r31, 0xFE	; 254
    25b8:	60 81       	ld	r22, Z
    25ba:	71 81       	ldd	r23, Z+1	; 0x01
    25bc:	82 81       	ldd	r24, Z+2	; 0x02
    25be:	93 81       	ldd	r25, Z+3	; 0x03
    25c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25c4:	dc 01       	movw	r26, r24
    25c6:	cb 01       	movw	r24, r22
    25c8:	f8 01       	movw	r30, r16
    25ca:	91 83       	std	Z+1, r25	; 0x01
    25cc:	80 83       	st	Z, r24
    25ce:	de 01       	movw	r26, r28
    25d0:	ab 55       	subi	r26, 0x5B	; 91
    25d2:	be 4f       	sbci	r27, 0xFE	; 254
    25d4:	fe 01       	movw	r30, r28
    25d6:	e7 55       	subi	r30, 0x57	; 87
    25d8:	fe 4f       	sbci	r31, 0xFE	; 254
    25da:	80 81       	ld	r24, Z
    25dc:	91 81       	ldd	r25, Z+1	; 0x01
    25de:	8d 93       	st	X+, r24
    25e0:	9c 93       	st	X, r25
    25e2:	fe 01       	movw	r30, r28
    25e4:	eb 55       	subi	r30, 0x5B	; 91
    25e6:	fe 4f       	sbci	r31, 0xFE	; 254
    25e8:	80 81       	ld	r24, Z
    25ea:	91 81       	ldd	r25, Z+1	; 0x01
    25ec:	01 97       	sbiw	r24, 0x01	; 1
    25ee:	f1 f7       	brne	.-4      	; 0x25ec <main+0x63c>
    25f0:	fe 01       	movw	r30, r28
    25f2:	eb 55       	subi	r30, 0x5B	; 91
    25f4:	fe 4f       	sbci	r31, 0xFE	; 254
    25f6:	91 83       	std	Z+1, r25	; 0x01
    25f8:	80 83       	st	Z, r24
					}
					else
					{
						_delay_ms(150);
						Local_H_1++;
    25fa:	de 01       	movw	r26, r28
    25fc:	aa 53       	subi	r26, 0x3A	; 58
    25fe:	be 4f       	sbci	r27, 0xFE	; 254
    2600:	fe 01       	movw	r30, r28
    2602:	ea 53       	subi	r30, 0x3A	; 58
    2604:	fe 4f       	sbci	r31, 0xFE	; 254
    2606:	80 81       	ld	r24, Z
    2608:	8f 5f       	subi	r24, 0xFF	; 255
    260a:	8c 93       	st	X, r24

						CLCD_voidGoToXY(0,0);
    260c:	80 e0       	ldi	r24, 0x00	; 0
    260e:	60 e0       	ldi	r22, 0x00	; 0
    2610:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_H_1);
    2614:	fe 01       	movw	r30, r28
    2616:	ea 53       	subi	r30, 0x3A	; 58
    2618:	fe 4f       	sbci	r31, 0xFE	; 254
    261a:	80 81       	ld	r24, Z
    261c:	88 2f       	mov	r24, r24
    261e:	90 e0       	ldi	r25, 0x00	; 0
    2620:	a0 e0       	ldi	r26, 0x00	; 0
    2622:	b0 e0       	ldi	r27, 0x00	; 0
    2624:	bc 01       	movw	r22, r24
    2626:	cd 01       	movw	r24, r26
    2628:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    262c:	dc 01       	movw	r26, r24
    262e:	cb 01       	movw	r24, r22
    2630:	bc 01       	movw	r22, r24
    2632:	cd 01       	movw	r24, r26
    2634:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    2638:	af c1       	rjmp	.+862    	; 0x2998 <main+0x9e8>
					}


				}
				else if (PB_u8GetState(DIO_u8PORTD,DIO_u8PIN3)==1)
    263a:	83 e0       	ldi	r24, 0x03	; 3
    263c:	63 e0       	ldi	r22, 0x03	; 3
    263e:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    2642:	81 30       	cpi	r24, 0x01	; 1
    2644:	09 f0       	breq	.+2      	; 0x2648 <main+0x698>
    2646:	a8 c1       	rjmp	.+848    	; 0x2998 <main+0x9e8>
				{
					if (Local_H_1<=0)
    2648:	fe 01       	movw	r30, r28
    264a:	ea 53       	subi	r30, 0x3A	; 58
    264c:	fe 4f       	sbci	r31, 0xFE	; 254
    264e:	80 81       	ld	r24, Z
    2650:	88 23       	and	r24, r24
    2652:	09 f0       	breq	.+2      	; 0x2656 <main+0x6a6>
    2654:	cf c0       	rjmp	.+414    	; 0x27f4 <main+0x844>
    2656:	fe 01       	movw	r30, r28
    2658:	ef 55       	subi	r30, 0x5F	; 95
    265a:	fe 4f       	sbci	r31, 0xFE	; 254
    265c:	80 e0       	ldi	r24, 0x00	; 0
    265e:	90 e0       	ldi	r25, 0x00	; 0
    2660:	a6 e1       	ldi	r26, 0x16	; 22
    2662:	b3 e4       	ldi	r27, 0x43	; 67
    2664:	80 83       	st	Z, r24
    2666:	91 83       	std	Z+1, r25	; 0x01
    2668:	a2 83       	std	Z+2, r26	; 0x02
    266a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    266c:	8e 01       	movw	r16, r28
    266e:	03 56       	subi	r16, 0x63	; 99
    2670:	1e 4f       	sbci	r17, 0xFE	; 254
    2672:	fe 01       	movw	r30, r28
    2674:	ef 55       	subi	r30, 0x5F	; 95
    2676:	fe 4f       	sbci	r31, 0xFE	; 254
    2678:	60 81       	ld	r22, Z
    267a:	71 81       	ldd	r23, Z+1	; 0x01
    267c:	82 81       	ldd	r24, Z+2	; 0x02
    267e:	93 81       	ldd	r25, Z+3	; 0x03
    2680:	20 e0       	ldi	r18, 0x00	; 0
    2682:	30 e0       	ldi	r19, 0x00	; 0
    2684:	4a ef       	ldi	r20, 0xFA	; 250
    2686:	54 e4       	ldi	r21, 0x44	; 68
    2688:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    268c:	dc 01       	movw	r26, r24
    268e:	cb 01       	movw	r24, r22
    2690:	f8 01       	movw	r30, r16
    2692:	80 83       	st	Z, r24
    2694:	91 83       	std	Z+1, r25	; 0x01
    2696:	a2 83       	std	Z+2, r26	; 0x02
    2698:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    269a:	fe 01       	movw	r30, r28
    269c:	e3 56       	subi	r30, 0x63	; 99
    269e:	fe 4f       	sbci	r31, 0xFE	; 254
    26a0:	60 81       	ld	r22, Z
    26a2:	71 81       	ldd	r23, Z+1	; 0x01
    26a4:	82 81       	ldd	r24, Z+2	; 0x02
    26a6:	93 81       	ldd	r25, Z+3	; 0x03
    26a8:	20 e0       	ldi	r18, 0x00	; 0
    26aa:	30 e0       	ldi	r19, 0x00	; 0
    26ac:	40 e8       	ldi	r20, 0x80	; 128
    26ae:	5f e3       	ldi	r21, 0x3F	; 63
    26b0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    26b4:	88 23       	and	r24, r24
    26b6:	44 f4       	brge	.+16     	; 0x26c8 <main+0x718>
		__ticks = 1;
    26b8:	fe 01       	movw	r30, r28
    26ba:	e5 56       	subi	r30, 0x65	; 101
    26bc:	fe 4f       	sbci	r31, 0xFE	; 254
    26be:	81 e0       	ldi	r24, 0x01	; 1
    26c0:	90 e0       	ldi	r25, 0x00	; 0
    26c2:	91 83       	std	Z+1, r25	; 0x01
    26c4:	80 83       	st	Z, r24
    26c6:	64 c0       	rjmp	.+200    	; 0x2790 <main+0x7e0>
	else if (__tmp > 65535)
    26c8:	fe 01       	movw	r30, r28
    26ca:	e3 56       	subi	r30, 0x63	; 99
    26cc:	fe 4f       	sbci	r31, 0xFE	; 254
    26ce:	60 81       	ld	r22, Z
    26d0:	71 81       	ldd	r23, Z+1	; 0x01
    26d2:	82 81       	ldd	r24, Z+2	; 0x02
    26d4:	93 81       	ldd	r25, Z+3	; 0x03
    26d6:	20 e0       	ldi	r18, 0x00	; 0
    26d8:	3f ef       	ldi	r19, 0xFF	; 255
    26da:	4f e7       	ldi	r20, 0x7F	; 127
    26dc:	57 e4       	ldi	r21, 0x47	; 71
    26de:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    26e2:	18 16       	cp	r1, r24
    26e4:	0c f0       	brlt	.+2      	; 0x26e8 <main+0x738>
    26e6:	43 c0       	rjmp	.+134    	; 0x276e <main+0x7be>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26e8:	fe 01       	movw	r30, r28
    26ea:	ef 55       	subi	r30, 0x5F	; 95
    26ec:	fe 4f       	sbci	r31, 0xFE	; 254
    26ee:	60 81       	ld	r22, Z
    26f0:	71 81       	ldd	r23, Z+1	; 0x01
    26f2:	82 81       	ldd	r24, Z+2	; 0x02
    26f4:	93 81       	ldd	r25, Z+3	; 0x03
    26f6:	20 e0       	ldi	r18, 0x00	; 0
    26f8:	30 e0       	ldi	r19, 0x00	; 0
    26fa:	40 e2       	ldi	r20, 0x20	; 32
    26fc:	51 e4       	ldi	r21, 0x41	; 65
    26fe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2702:	dc 01       	movw	r26, r24
    2704:	cb 01       	movw	r24, r22
    2706:	8e 01       	movw	r16, r28
    2708:	05 56       	subi	r16, 0x65	; 101
    270a:	1e 4f       	sbci	r17, 0xFE	; 254
    270c:	bc 01       	movw	r22, r24
    270e:	cd 01       	movw	r24, r26
    2710:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2714:	dc 01       	movw	r26, r24
    2716:	cb 01       	movw	r24, r22
    2718:	f8 01       	movw	r30, r16
    271a:	91 83       	std	Z+1, r25	; 0x01
    271c:	80 83       	st	Z, r24
    271e:	1f c0       	rjmp	.+62     	; 0x275e <main+0x7ae>
    2720:	fe 01       	movw	r30, r28
    2722:	e7 56       	subi	r30, 0x67	; 103
    2724:	fe 4f       	sbci	r31, 0xFE	; 254
    2726:	88 ec       	ldi	r24, 0xC8	; 200
    2728:	90 e0       	ldi	r25, 0x00	; 0
    272a:	91 83       	std	Z+1, r25	; 0x01
    272c:	80 83       	st	Z, r24
    272e:	fe 01       	movw	r30, r28
    2730:	e7 56       	subi	r30, 0x67	; 103
    2732:	fe 4f       	sbci	r31, 0xFE	; 254
    2734:	80 81       	ld	r24, Z
    2736:	91 81       	ldd	r25, Z+1	; 0x01
    2738:	01 97       	sbiw	r24, 0x01	; 1
    273a:	f1 f7       	brne	.-4      	; 0x2738 <main+0x788>
    273c:	fe 01       	movw	r30, r28
    273e:	e7 56       	subi	r30, 0x67	; 103
    2740:	fe 4f       	sbci	r31, 0xFE	; 254
    2742:	91 83       	std	Z+1, r25	; 0x01
    2744:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2746:	de 01       	movw	r26, r28
    2748:	a5 56       	subi	r26, 0x65	; 101
    274a:	be 4f       	sbci	r27, 0xFE	; 254
    274c:	fe 01       	movw	r30, r28
    274e:	e5 56       	subi	r30, 0x65	; 101
    2750:	fe 4f       	sbci	r31, 0xFE	; 254
    2752:	80 81       	ld	r24, Z
    2754:	91 81       	ldd	r25, Z+1	; 0x01
    2756:	01 97       	sbiw	r24, 0x01	; 1
    2758:	11 96       	adiw	r26, 0x01	; 1
    275a:	9c 93       	st	X, r25
    275c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    275e:	fe 01       	movw	r30, r28
    2760:	e5 56       	subi	r30, 0x65	; 101
    2762:	fe 4f       	sbci	r31, 0xFE	; 254
    2764:	80 81       	ld	r24, Z
    2766:	91 81       	ldd	r25, Z+1	; 0x01
    2768:	00 97       	sbiw	r24, 0x00	; 0
    276a:	d1 f6       	brne	.-76     	; 0x2720 <main+0x770>
    276c:	27 c0       	rjmp	.+78     	; 0x27bc <main+0x80c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    276e:	8e 01       	movw	r16, r28
    2770:	05 56       	subi	r16, 0x65	; 101
    2772:	1e 4f       	sbci	r17, 0xFE	; 254
    2774:	fe 01       	movw	r30, r28
    2776:	e3 56       	subi	r30, 0x63	; 99
    2778:	fe 4f       	sbci	r31, 0xFE	; 254
    277a:	60 81       	ld	r22, Z
    277c:	71 81       	ldd	r23, Z+1	; 0x01
    277e:	82 81       	ldd	r24, Z+2	; 0x02
    2780:	93 81       	ldd	r25, Z+3	; 0x03
    2782:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2786:	dc 01       	movw	r26, r24
    2788:	cb 01       	movw	r24, r22
    278a:	f8 01       	movw	r30, r16
    278c:	91 83       	std	Z+1, r25	; 0x01
    278e:	80 83       	st	Z, r24
    2790:	de 01       	movw	r26, r28
    2792:	a9 56       	subi	r26, 0x69	; 105
    2794:	be 4f       	sbci	r27, 0xFE	; 254
    2796:	fe 01       	movw	r30, r28
    2798:	e5 56       	subi	r30, 0x65	; 101
    279a:	fe 4f       	sbci	r31, 0xFE	; 254
    279c:	80 81       	ld	r24, Z
    279e:	91 81       	ldd	r25, Z+1	; 0x01
    27a0:	8d 93       	st	X+, r24
    27a2:	9c 93       	st	X, r25
    27a4:	fe 01       	movw	r30, r28
    27a6:	e9 56       	subi	r30, 0x69	; 105
    27a8:	fe 4f       	sbci	r31, 0xFE	; 254
    27aa:	80 81       	ld	r24, Z
    27ac:	91 81       	ldd	r25, Z+1	; 0x01
    27ae:	01 97       	sbiw	r24, 0x01	; 1
    27b0:	f1 f7       	brne	.-4      	; 0x27ae <main+0x7fe>
    27b2:	fe 01       	movw	r30, r28
    27b4:	e9 56       	subi	r30, 0x69	; 105
    27b6:	fe 4f       	sbci	r31, 0xFE	; 254
    27b8:	91 83       	std	Z+1, r25	; 0x01
    27ba:	80 83       	st	Z, r24
					{
						_delay_ms(150);
						Local_H_1=9;
    27bc:	fe 01       	movw	r30, r28
    27be:	ea 53       	subi	r30, 0x3A	; 58
    27c0:	fe 4f       	sbci	r31, 0xFE	; 254
    27c2:	89 e0       	ldi	r24, 0x09	; 9
    27c4:	80 83       	st	Z, r24
						CLCD_voidGoToXY(0,0);
    27c6:	80 e0       	ldi	r24, 0x00	; 0
    27c8:	60 e0       	ldi	r22, 0x00	; 0
    27ca:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_H_1);
    27ce:	fe 01       	movw	r30, r28
    27d0:	ea 53       	subi	r30, 0x3A	; 58
    27d2:	fe 4f       	sbci	r31, 0xFE	; 254
    27d4:	80 81       	ld	r24, Z
    27d6:	88 2f       	mov	r24, r24
    27d8:	90 e0       	ldi	r25, 0x00	; 0
    27da:	a0 e0       	ldi	r26, 0x00	; 0
    27dc:	b0 e0       	ldi	r27, 0x00	; 0
    27de:	bc 01       	movw	r22, r24
    27e0:	cd 01       	movw	r24, r26
    27e2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    27e6:	dc 01       	movw	r26, r24
    27e8:	cb 01       	movw	r24, r22
    27ea:	bc 01       	movw	r22, r24
    27ec:	cd 01       	movw	r24, r26
    27ee:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    27f2:	d2 c0       	rjmp	.+420    	; 0x2998 <main+0x9e8>
    27f4:	fe 01       	movw	r30, r28
    27f6:	ed 56       	subi	r30, 0x6D	; 109
    27f8:	fe 4f       	sbci	r31, 0xFE	; 254
    27fa:	80 e0       	ldi	r24, 0x00	; 0
    27fc:	90 e0       	ldi	r25, 0x00	; 0
    27fe:	a8 e4       	ldi	r26, 0x48	; 72
    2800:	b3 e4       	ldi	r27, 0x43	; 67
    2802:	80 83       	st	Z, r24
    2804:	91 83       	std	Z+1, r25	; 0x01
    2806:	a2 83       	std	Z+2, r26	; 0x02
    2808:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    280a:	8e 01       	movw	r16, r28
    280c:	01 57       	subi	r16, 0x71	; 113
    280e:	1e 4f       	sbci	r17, 0xFE	; 254
    2810:	fe 01       	movw	r30, r28
    2812:	ed 56       	subi	r30, 0x6D	; 109
    2814:	fe 4f       	sbci	r31, 0xFE	; 254
    2816:	60 81       	ld	r22, Z
    2818:	71 81       	ldd	r23, Z+1	; 0x01
    281a:	82 81       	ldd	r24, Z+2	; 0x02
    281c:	93 81       	ldd	r25, Z+3	; 0x03
    281e:	20 e0       	ldi	r18, 0x00	; 0
    2820:	30 e0       	ldi	r19, 0x00	; 0
    2822:	4a ef       	ldi	r20, 0xFA	; 250
    2824:	54 e4       	ldi	r21, 0x44	; 68
    2826:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    282a:	dc 01       	movw	r26, r24
    282c:	cb 01       	movw	r24, r22
    282e:	f8 01       	movw	r30, r16
    2830:	80 83       	st	Z, r24
    2832:	91 83       	std	Z+1, r25	; 0x01
    2834:	a2 83       	std	Z+2, r26	; 0x02
    2836:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2838:	fe 01       	movw	r30, r28
    283a:	e1 57       	subi	r30, 0x71	; 113
    283c:	fe 4f       	sbci	r31, 0xFE	; 254
    283e:	60 81       	ld	r22, Z
    2840:	71 81       	ldd	r23, Z+1	; 0x01
    2842:	82 81       	ldd	r24, Z+2	; 0x02
    2844:	93 81       	ldd	r25, Z+3	; 0x03
    2846:	20 e0       	ldi	r18, 0x00	; 0
    2848:	30 e0       	ldi	r19, 0x00	; 0
    284a:	40 e8       	ldi	r20, 0x80	; 128
    284c:	5f e3       	ldi	r21, 0x3F	; 63
    284e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2852:	88 23       	and	r24, r24
    2854:	44 f4       	brge	.+16     	; 0x2866 <main+0x8b6>
		__ticks = 1;
    2856:	fe 01       	movw	r30, r28
    2858:	e3 57       	subi	r30, 0x73	; 115
    285a:	fe 4f       	sbci	r31, 0xFE	; 254
    285c:	81 e0       	ldi	r24, 0x01	; 1
    285e:	90 e0       	ldi	r25, 0x00	; 0
    2860:	91 83       	std	Z+1, r25	; 0x01
    2862:	80 83       	st	Z, r24
    2864:	64 c0       	rjmp	.+200    	; 0x292e <main+0x97e>
	else if (__tmp > 65535)
    2866:	fe 01       	movw	r30, r28
    2868:	e1 57       	subi	r30, 0x71	; 113
    286a:	fe 4f       	sbci	r31, 0xFE	; 254
    286c:	60 81       	ld	r22, Z
    286e:	71 81       	ldd	r23, Z+1	; 0x01
    2870:	82 81       	ldd	r24, Z+2	; 0x02
    2872:	93 81       	ldd	r25, Z+3	; 0x03
    2874:	20 e0       	ldi	r18, 0x00	; 0
    2876:	3f ef       	ldi	r19, 0xFF	; 255
    2878:	4f e7       	ldi	r20, 0x7F	; 127
    287a:	57 e4       	ldi	r21, 0x47	; 71
    287c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2880:	18 16       	cp	r1, r24
    2882:	0c f0       	brlt	.+2      	; 0x2886 <main+0x8d6>
    2884:	43 c0       	rjmp	.+134    	; 0x290c <main+0x95c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2886:	fe 01       	movw	r30, r28
    2888:	ed 56       	subi	r30, 0x6D	; 109
    288a:	fe 4f       	sbci	r31, 0xFE	; 254
    288c:	60 81       	ld	r22, Z
    288e:	71 81       	ldd	r23, Z+1	; 0x01
    2890:	82 81       	ldd	r24, Z+2	; 0x02
    2892:	93 81       	ldd	r25, Z+3	; 0x03
    2894:	20 e0       	ldi	r18, 0x00	; 0
    2896:	30 e0       	ldi	r19, 0x00	; 0
    2898:	40 e2       	ldi	r20, 0x20	; 32
    289a:	51 e4       	ldi	r21, 0x41	; 65
    289c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28a0:	dc 01       	movw	r26, r24
    28a2:	cb 01       	movw	r24, r22
    28a4:	8e 01       	movw	r16, r28
    28a6:	03 57       	subi	r16, 0x73	; 115
    28a8:	1e 4f       	sbci	r17, 0xFE	; 254
    28aa:	bc 01       	movw	r22, r24
    28ac:	cd 01       	movw	r24, r26
    28ae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28b2:	dc 01       	movw	r26, r24
    28b4:	cb 01       	movw	r24, r22
    28b6:	f8 01       	movw	r30, r16
    28b8:	91 83       	std	Z+1, r25	; 0x01
    28ba:	80 83       	st	Z, r24
    28bc:	1f c0       	rjmp	.+62     	; 0x28fc <main+0x94c>
    28be:	fe 01       	movw	r30, r28
    28c0:	e5 57       	subi	r30, 0x75	; 117
    28c2:	fe 4f       	sbci	r31, 0xFE	; 254
    28c4:	88 ec       	ldi	r24, 0xC8	; 200
    28c6:	90 e0       	ldi	r25, 0x00	; 0
    28c8:	91 83       	std	Z+1, r25	; 0x01
    28ca:	80 83       	st	Z, r24
    28cc:	fe 01       	movw	r30, r28
    28ce:	e5 57       	subi	r30, 0x75	; 117
    28d0:	fe 4f       	sbci	r31, 0xFE	; 254
    28d2:	80 81       	ld	r24, Z
    28d4:	91 81       	ldd	r25, Z+1	; 0x01
    28d6:	01 97       	sbiw	r24, 0x01	; 1
    28d8:	f1 f7       	brne	.-4      	; 0x28d6 <main+0x926>
    28da:	fe 01       	movw	r30, r28
    28dc:	e5 57       	subi	r30, 0x75	; 117
    28de:	fe 4f       	sbci	r31, 0xFE	; 254
    28e0:	91 83       	std	Z+1, r25	; 0x01
    28e2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28e4:	de 01       	movw	r26, r28
    28e6:	a3 57       	subi	r26, 0x73	; 115
    28e8:	be 4f       	sbci	r27, 0xFE	; 254
    28ea:	fe 01       	movw	r30, r28
    28ec:	e3 57       	subi	r30, 0x73	; 115
    28ee:	fe 4f       	sbci	r31, 0xFE	; 254
    28f0:	80 81       	ld	r24, Z
    28f2:	91 81       	ldd	r25, Z+1	; 0x01
    28f4:	01 97       	sbiw	r24, 0x01	; 1
    28f6:	11 96       	adiw	r26, 0x01	; 1
    28f8:	9c 93       	st	X, r25
    28fa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28fc:	fe 01       	movw	r30, r28
    28fe:	e3 57       	subi	r30, 0x73	; 115
    2900:	fe 4f       	sbci	r31, 0xFE	; 254
    2902:	80 81       	ld	r24, Z
    2904:	91 81       	ldd	r25, Z+1	; 0x01
    2906:	00 97       	sbiw	r24, 0x00	; 0
    2908:	d1 f6       	brne	.-76     	; 0x28be <main+0x90e>
    290a:	27 c0       	rjmp	.+78     	; 0x295a <main+0x9aa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    290c:	8e 01       	movw	r16, r28
    290e:	03 57       	subi	r16, 0x73	; 115
    2910:	1e 4f       	sbci	r17, 0xFE	; 254
    2912:	fe 01       	movw	r30, r28
    2914:	e1 57       	subi	r30, 0x71	; 113
    2916:	fe 4f       	sbci	r31, 0xFE	; 254
    2918:	60 81       	ld	r22, Z
    291a:	71 81       	ldd	r23, Z+1	; 0x01
    291c:	82 81       	ldd	r24, Z+2	; 0x02
    291e:	93 81       	ldd	r25, Z+3	; 0x03
    2920:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2924:	dc 01       	movw	r26, r24
    2926:	cb 01       	movw	r24, r22
    2928:	f8 01       	movw	r30, r16
    292a:	91 83       	std	Z+1, r25	; 0x01
    292c:	80 83       	st	Z, r24
    292e:	de 01       	movw	r26, r28
    2930:	a7 57       	subi	r26, 0x77	; 119
    2932:	be 4f       	sbci	r27, 0xFE	; 254
    2934:	fe 01       	movw	r30, r28
    2936:	e3 57       	subi	r30, 0x73	; 115
    2938:	fe 4f       	sbci	r31, 0xFE	; 254
    293a:	80 81       	ld	r24, Z
    293c:	91 81       	ldd	r25, Z+1	; 0x01
    293e:	8d 93       	st	X+, r24
    2940:	9c 93       	st	X, r25
    2942:	fe 01       	movw	r30, r28
    2944:	e7 57       	subi	r30, 0x77	; 119
    2946:	fe 4f       	sbci	r31, 0xFE	; 254
    2948:	80 81       	ld	r24, Z
    294a:	91 81       	ldd	r25, Z+1	; 0x01
    294c:	01 97       	sbiw	r24, 0x01	; 1
    294e:	f1 f7       	brne	.-4      	; 0x294c <main+0x99c>
    2950:	fe 01       	movw	r30, r28
    2952:	e7 57       	subi	r30, 0x77	; 119
    2954:	fe 4f       	sbci	r31, 0xFE	; 254
    2956:	91 83       	std	Z+1, r25	; 0x01
    2958:	80 83       	st	Z, r24
					}
					else
					{
						_delay_ms(200);

						Local_H_1--;
    295a:	de 01       	movw	r26, r28
    295c:	aa 53       	subi	r26, 0x3A	; 58
    295e:	be 4f       	sbci	r27, 0xFE	; 254
    2960:	fe 01       	movw	r30, r28
    2962:	ea 53       	subi	r30, 0x3A	; 58
    2964:	fe 4f       	sbci	r31, 0xFE	; 254
    2966:	80 81       	ld	r24, Z
    2968:	81 50       	subi	r24, 0x01	; 1
    296a:	8c 93       	st	X, r24
						CLCD_voidGoToXY(0,0);
    296c:	80 e0       	ldi	r24, 0x00	; 0
    296e:	60 e0       	ldi	r22, 0x00	; 0
    2970:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>

						CLCD_VoidWriteNumber(Local_H_1);
    2974:	fe 01       	movw	r30, r28
    2976:	ea 53       	subi	r30, 0x3A	; 58
    2978:	fe 4f       	sbci	r31, 0xFE	; 254
    297a:	80 81       	ld	r24, Z
    297c:	88 2f       	mov	r24, r24
    297e:	90 e0       	ldi	r25, 0x00	; 0
    2980:	a0 e0       	ldi	r26, 0x00	; 0
    2982:	b0 e0       	ldi	r27, 0x00	; 0
    2984:	bc 01       	movw	r22, r24
    2986:	cd 01       	movw	r24, r26
    2988:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    298c:	dc 01       	movw	r26, r24
    298e:	cb 01       	movw	r24, r22
    2990:	bc 01       	movw	r22, r24
    2992:	cd 01       	movw	r24, r26
    2994:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
					}

				}

			}
			while(PB_u8GetState(DIO_u8PORTD,DIO_u8PIN4)!=1);
    2998:	83 e0       	ldi	r24, 0x03	; 3
    299a:	64 e0       	ldi	r22, 0x04	; 4
    299c:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    29a0:	81 30       	cpi	r24, 0x01	; 1
    29a2:	09 f0       	breq	.+2      	; 0x29a6 <main+0x9f6>
    29a4:	9b cc       	rjmp	.-1738   	; 0x22dc <main+0x32c>


			CLCD_voidGoToXY(1,0);
    29a6:	81 e0       	ldi	r24, 0x01	; 1
    29a8:	60 e0       	ldi	r22, 0x00	; 0
    29aa:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
			CLCD_voidSendData(' ');
    29ae:	80 e2       	ldi	r24, 0x20	; 32
    29b0:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <CLCD_voidSendData>
			CLCD_voidWriteSpecialCharacter(arrow,1,1,1);
    29b4:	ce 01       	movw	r24, r28
    29b6:	89 53       	subi	r24, 0x39	; 57
    29b8:	9e 4f       	sbci	r25, 0xFE	; 254
    29ba:	61 e0       	ldi	r22, 0x01	; 1
    29bc:	41 e0       	ldi	r20, 0x01	; 1
    29be:	21 e0       	ldi	r18, 0x01	; 1
    29c0:	0e 94 77 0b 	call	0x16ee	; 0x16ee <CLCD_voidWriteSpecialCharacter>


			do
			{
				if (PB_u8GetState(DIO_u8PORTD,DIO_u8PIN2)==1)
    29c4:	83 e0       	ldi	r24, 0x03	; 3
    29c6:	62 e0       	ldi	r22, 0x02	; 2
    29c8:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    29cc:	81 30       	cpi	r24, 0x01	; 1
    29ce:	09 f0       	breq	.+2      	; 0x29d2 <main+0xa22>
    29d0:	a8 c1       	rjmp	.+848    	; 0x2d22 <main+0xd72>
				{
					if (Local_H_2>=9)
    29d2:	fe 01       	movw	r30, r28
    29d4:	eb 53       	subi	r30, 0x3B	; 59
    29d6:	fe 4f       	sbci	r31, 0xFE	; 254
    29d8:	80 81       	ld	r24, Z
    29da:	89 30       	cpi	r24, 0x09	; 9
    29dc:	08 f4       	brcc	.+2      	; 0x29e0 <main+0xa30>
    29de:	ce c0       	rjmp	.+412    	; 0x2b7c <main+0xbcc>
    29e0:	fe 01       	movw	r30, r28
    29e2:	eb 57       	subi	r30, 0x7B	; 123
    29e4:	fe 4f       	sbci	r31, 0xFE	; 254
    29e6:	80 e0       	ldi	r24, 0x00	; 0
    29e8:	90 e0       	ldi	r25, 0x00	; 0
    29ea:	a6 e1       	ldi	r26, 0x16	; 22
    29ec:	b3 e4       	ldi	r27, 0x43	; 67
    29ee:	80 83       	st	Z, r24
    29f0:	91 83       	std	Z+1, r25	; 0x01
    29f2:	a2 83       	std	Z+2, r26	; 0x02
    29f4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29f6:	8e 01       	movw	r16, r28
    29f8:	0f 57       	subi	r16, 0x7F	; 127
    29fa:	1e 4f       	sbci	r17, 0xFE	; 254
    29fc:	fe 01       	movw	r30, r28
    29fe:	eb 57       	subi	r30, 0x7B	; 123
    2a00:	fe 4f       	sbci	r31, 0xFE	; 254
    2a02:	60 81       	ld	r22, Z
    2a04:	71 81       	ldd	r23, Z+1	; 0x01
    2a06:	82 81       	ldd	r24, Z+2	; 0x02
    2a08:	93 81       	ldd	r25, Z+3	; 0x03
    2a0a:	20 e0       	ldi	r18, 0x00	; 0
    2a0c:	30 e0       	ldi	r19, 0x00	; 0
    2a0e:	4a ef       	ldi	r20, 0xFA	; 250
    2a10:	54 e4       	ldi	r21, 0x44	; 68
    2a12:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a16:	dc 01       	movw	r26, r24
    2a18:	cb 01       	movw	r24, r22
    2a1a:	f8 01       	movw	r30, r16
    2a1c:	80 83       	st	Z, r24
    2a1e:	91 83       	std	Z+1, r25	; 0x01
    2a20:	a2 83       	std	Z+2, r26	; 0x02
    2a22:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a24:	fe 01       	movw	r30, r28
    2a26:	ef 57       	subi	r30, 0x7F	; 127
    2a28:	fe 4f       	sbci	r31, 0xFE	; 254
    2a2a:	60 81       	ld	r22, Z
    2a2c:	71 81       	ldd	r23, Z+1	; 0x01
    2a2e:	82 81       	ldd	r24, Z+2	; 0x02
    2a30:	93 81       	ldd	r25, Z+3	; 0x03
    2a32:	20 e0       	ldi	r18, 0x00	; 0
    2a34:	30 e0       	ldi	r19, 0x00	; 0
    2a36:	40 e8       	ldi	r20, 0x80	; 128
    2a38:	5f e3       	ldi	r21, 0x3F	; 63
    2a3a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a3e:	88 23       	and	r24, r24
    2a40:	44 f4       	brge	.+16     	; 0x2a52 <main+0xaa2>
		__ticks = 1;
    2a42:	fe 01       	movw	r30, r28
    2a44:	e1 58       	subi	r30, 0x81	; 129
    2a46:	fe 4f       	sbci	r31, 0xFE	; 254
    2a48:	81 e0       	ldi	r24, 0x01	; 1
    2a4a:	90 e0       	ldi	r25, 0x00	; 0
    2a4c:	91 83       	std	Z+1, r25	; 0x01
    2a4e:	80 83       	st	Z, r24
    2a50:	64 c0       	rjmp	.+200    	; 0x2b1a <main+0xb6a>
	else if (__tmp > 65535)
    2a52:	fe 01       	movw	r30, r28
    2a54:	ef 57       	subi	r30, 0x7F	; 127
    2a56:	fe 4f       	sbci	r31, 0xFE	; 254
    2a58:	60 81       	ld	r22, Z
    2a5a:	71 81       	ldd	r23, Z+1	; 0x01
    2a5c:	82 81       	ldd	r24, Z+2	; 0x02
    2a5e:	93 81       	ldd	r25, Z+3	; 0x03
    2a60:	20 e0       	ldi	r18, 0x00	; 0
    2a62:	3f ef       	ldi	r19, 0xFF	; 255
    2a64:	4f e7       	ldi	r20, 0x7F	; 127
    2a66:	57 e4       	ldi	r21, 0x47	; 71
    2a68:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a6c:	18 16       	cp	r1, r24
    2a6e:	0c f0       	brlt	.+2      	; 0x2a72 <main+0xac2>
    2a70:	43 c0       	rjmp	.+134    	; 0x2af8 <main+0xb48>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a72:	fe 01       	movw	r30, r28
    2a74:	eb 57       	subi	r30, 0x7B	; 123
    2a76:	fe 4f       	sbci	r31, 0xFE	; 254
    2a78:	60 81       	ld	r22, Z
    2a7a:	71 81       	ldd	r23, Z+1	; 0x01
    2a7c:	82 81       	ldd	r24, Z+2	; 0x02
    2a7e:	93 81       	ldd	r25, Z+3	; 0x03
    2a80:	20 e0       	ldi	r18, 0x00	; 0
    2a82:	30 e0       	ldi	r19, 0x00	; 0
    2a84:	40 e2       	ldi	r20, 0x20	; 32
    2a86:	51 e4       	ldi	r21, 0x41	; 65
    2a88:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a8c:	dc 01       	movw	r26, r24
    2a8e:	cb 01       	movw	r24, r22
    2a90:	8e 01       	movw	r16, r28
    2a92:	01 58       	subi	r16, 0x81	; 129
    2a94:	1e 4f       	sbci	r17, 0xFE	; 254
    2a96:	bc 01       	movw	r22, r24
    2a98:	cd 01       	movw	r24, r26
    2a9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a9e:	dc 01       	movw	r26, r24
    2aa0:	cb 01       	movw	r24, r22
    2aa2:	f8 01       	movw	r30, r16
    2aa4:	91 83       	std	Z+1, r25	; 0x01
    2aa6:	80 83       	st	Z, r24
    2aa8:	1f c0       	rjmp	.+62     	; 0x2ae8 <main+0xb38>
    2aaa:	fe 01       	movw	r30, r28
    2aac:	e3 58       	subi	r30, 0x83	; 131
    2aae:	fe 4f       	sbci	r31, 0xFE	; 254
    2ab0:	88 ec       	ldi	r24, 0xC8	; 200
    2ab2:	90 e0       	ldi	r25, 0x00	; 0
    2ab4:	91 83       	std	Z+1, r25	; 0x01
    2ab6:	80 83       	st	Z, r24
    2ab8:	fe 01       	movw	r30, r28
    2aba:	e3 58       	subi	r30, 0x83	; 131
    2abc:	fe 4f       	sbci	r31, 0xFE	; 254
    2abe:	80 81       	ld	r24, Z
    2ac0:	91 81       	ldd	r25, Z+1	; 0x01
    2ac2:	01 97       	sbiw	r24, 0x01	; 1
    2ac4:	f1 f7       	brne	.-4      	; 0x2ac2 <main+0xb12>
    2ac6:	fe 01       	movw	r30, r28
    2ac8:	e3 58       	subi	r30, 0x83	; 131
    2aca:	fe 4f       	sbci	r31, 0xFE	; 254
    2acc:	91 83       	std	Z+1, r25	; 0x01
    2ace:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ad0:	de 01       	movw	r26, r28
    2ad2:	a1 58       	subi	r26, 0x81	; 129
    2ad4:	be 4f       	sbci	r27, 0xFE	; 254
    2ad6:	fe 01       	movw	r30, r28
    2ad8:	e1 58       	subi	r30, 0x81	; 129
    2ada:	fe 4f       	sbci	r31, 0xFE	; 254
    2adc:	80 81       	ld	r24, Z
    2ade:	91 81       	ldd	r25, Z+1	; 0x01
    2ae0:	01 97       	sbiw	r24, 0x01	; 1
    2ae2:	11 96       	adiw	r26, 0x01	; 1
    2ae4:	9c 93       	st	X, r25
    2ae6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ae8:	fe 01       	movw	r30, r28
    2aea:	e1 58       	subi	r30, 0x81	; 129
    2aec:	fe 4f       	sbci	r31, 0xFE	; 254
    2aee:	80 81       	ld	r24, Z
    2af0:	91 81       	ldd	r25, Z+1	; 0x01
    2af2:	00 97       	sbiw	r24, 0x00	; 0
    2af4:	d1 f6       	brne	.-76     	; 0x2aaa <main+0xafa>
    2af6:	27 c0       	rjmp	.+78     	; 0x2b46 <main+0xb96>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2af8:	8e 01       	movw	r16, r28
    2afa:	01 58       	subi	r16, 0x81	; 129
    2afc:	1e 4f       	sbci	r17, 0xFE	; 254
    2afe:	fe 01       	movw	r30, r28
    2b00:	ef 57       	subi	r30, 0x7F	; 127
    2b02:	fe 4f       	sbci	r31, 0xFE	; 254
    2b04:	60 81       	ld	r22, Z
    2b06:	71 81       	ldd	r23, Z+1	; 0x01
    2b08:	82 81       	ldd	r24, Z+2	; 0x02
    2b0a:	93 81       	ldd	r25, Z+3	; 0x03
    2b0c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b10:	dc 01       	movw	r26, r24
    2b12:	cb 01       	movw	r24, r22
    2b14:	f8 01       	movw	r30, r16
    2b16:	91 83       	std	Z+1, r25	; 0x01
    2b18:	80 83       	st	Z, r24
    2b1a:	de 01       	movw	r26, r28
    2b1c:	a5 58       	subi	r26, 0x85	; 133
    2b1e:	be 4f       	sbci	r27, 0xFE	; 254
    2b20:	fe 01       	movw	r30, r28
    2b22:	e1 58       	subi	r30, 0x81	; 129
    2b24:	fe 4f       	sbci	r31, 0xFE	; 254
    2b26:	80 81       	ld	r24, Z
    2b28:	91 81       	ldd	r25, Z+1	; 0x01
    2b2a:	8d 93       	st	X+, r24
    2b2c:	9c 93       	st	X, r25
    2b2e:	fe 01       	movw	r30, r28
    2b30:	e5 58       	subi	r30, 0x85	; 133
    2b32:	fe 4f       	sbci	r31, 0xFE	; 254
    2b34:	80 81       	ld	r24, Z
    2b36:	91 81       	ldd	r25, Z+1	; 0x01
    2b38:	01 97       	sbiw	r24, 0x01	; 1
    2b3a:	f1 f7       	brne	.-4      	; 0x2b38 <main+0xb88>
    2b3c:	fe 01       	movw	r30, r28
    2b3e:	e5 58       	subi	r30, 0x85	; 133
    2b40:	fe 4f       	sbci	r31, 0xFE	; 254
    2b42:	91 83       	std	Z+1, r25	; 0x01
    2b44:	80 83       	st	Z, r24
					{
						_delay_ms(150);
						Local_H_2=0;
    2b46:	fe 01       	movw	r30, r28
    2b48:	eb 53       	subi	r30, 0x3B	; 59
    2b4a:	fe 4f       	sbci	r31, 0xFE	; 254
    2b4c:	10 82       	st	Z, r1
						CLCD_voidGoToXY(0,1);
    2b4e:	80 e0       	ldi	r24, 0x00	; 0
    2b50:	61 e0       	ldi	r22, 0x01	; 1
    2b52:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_H_2);
    2b56:	fe 01       	movw	r30, r28
    2b58:	eb 53       	subi	r30, 0x3B	; 59
    2b5a:	fe 4f       	sbci	r31, 0xFE	; 254
    2b5c:	80 81       	ld	r24, Z
    2b5e:	88 2f       	mov	r24, r24
    2b60:	90 e0       	ldi	r25, 0x00	; 0
    2b62:	a0 e0       	ldi	r26, 0x00	; 0
    2b64:	b0 e0       	ldi	r27, 0x00	; 0
    2b66:	bc 01       	movw	r22, r24
    2b68:	cd 01       	movw	r24, r26
    2b6a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2b6e:	dc 01       	movw	r26, r24
    2b70:	cb 01       	movw	r24, r22
    2b72:	bc 01       	movw	r22, r24
    2b74:	cd 01       	movw	r24, r26
    2b76:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    2b7a:	82 c2       	rjmp	.+1284   	; 0x3080 <main+0x10d0>
    2b7c:	fe 01       	movw	r30, r28
    2b7e:	e9 58       	subi	r30, 0x89	; 137
    2b80:	fe 4f       	sbci	r31, 0xFE	; 254
    2b82:	80 e0       	ldi	r24, 0x00	; 0
    2b84:	90 e0       	ldi	r25, 0x00	; 0
    2b86:	a6 e1       	ldi	r26, 0x16	; 22
    2b88:	b3 e4       	ldi	r27, 0x43	; 67
    2b8a:	80 83       	st	Z, r24
    2b8c:	91 83       	std	Z+1, r25	; 0x01
    2b8e:	a2 83       	std	Z+2, r26	; 0x02
    2b90:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b92:	8e 01       	movw	r16, r28
    2b94:	0d 58       	subi	r16, 0x8D	; 141
    2b96:	1e 4f       	sbci	r17, 0xFE	; 254
    2b98:	fe 01       	movw	r30, r28
    2b9a:	e9 58       	subi	r30, 0x89	; 137
    2b9c:	fe 4f       	sbci	r31, 0xFE	; 254
    2b9e:	60 81       	ld	r22, Z
    2ba0:	71 81       	ldd	r23, Z+1	; 0x01
    2ba2:	82 81       	ldd	r24, Z+2	; 0x02
    2ba4:	93 81       	ldd	r25, Z+3	; 0x03
    2ba6:	20 e0       	ldi	r18, 0x00	; 0
    2ba8:	30 e0       	ldi	r19, 0x00	; 0
    2baa:	4a ef       	ldi	r20, 0xFA	; 250
    2bac:	54 e4       	ldi	r21, 0x44	; 68
    2bae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2bb2:	dc 01       	movw	r26, r24
    2bb4:	cb 01       	movw	r24, r22
    2bb6:	f8 01       	movw	r30, r16
    2bb8:	80 83       	st	Z, r24
    2bba:	91 83       	std	Z+1, r25	; 0x01
    2bbc:	a2 83       	std	Z+2, r26	; 0x02
    2bbe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2bc0:	fe 01       	movw	r30, r28
    2bc2:	ed 58       	subi	r30, 0x8D	; 141
    2bc4:	fe 4f       	sbci	r31, 0xFE	; 254
    2bc6:	60 81       	ld	r22, Z
    2bc8:	71 81       	ldd	r23, Z+1	; 0x01
    2bca:	82 81       	ldd	r24, Z+2	; 0x02
    2bcc:	93 81       	ldd	r25, Z+3	; 0x03
    2bce:	20 e0       	ldi	r18, 0x00	; 0
    2bd0:	30 e0       	ldi	r19, 0x00	; 0
    2bd2:	40 e8       	ldi	r20, 0x80	; 128
    2bd4:	5f e3       	ldi	r21, 0x3F	; 63
    2bd6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2bda:	88 23       	and	r24, r24
    2bdc:	44 f4       	brge	.+16     	; 0x2bee <main+0xc3e>
		__ticks = 1;
    2bde:	fe 01       	movw	r30, r28
    2be0:	ef 58       	subi	r30, 0x8F	; 143
    2be2:	fe 4f       	sbci	r31, 0xFE	; 254
    2be4:	81 e0       	ldi	r24, 0x01	; 1
    2be6:	90 e0       	ldi	r25, 0x00	; 0
    2be8:	91 83       	std	Z+1, r25	; 0x01
    2bea:	80 83       	st	Z, r24
    2bec:	64 c0       	rjmp	.+200    	; 0x2cb6 <main+0xd06>
	else if (__tmp > 65535)
    2bee:	fe 01       	movw	r30, r28
    2bf0:	ed 58       	subi	r30, 0x8D	; 141
    2bf2:	fe 4f       	sbci	r31, 0xFE	; 254
    2bf4:	60 81       	ld	r22, Z
    2bf6:	71 81       	ldd	r23, Z+1	; 0x01
    2bf8:	82 81       	ldd	r24, Z+2	; 0x02
    2bfa:	93 81       	ldd	r25, Z+3	; 0x03
    2bfc:	20 e0       	ldi	r18, 0x00	; 0
    2bfe:	3f ef       	ldi	r19, 0xFF	; 255
    2c00:	4f e7       	ldi	r20, 0x7F	; 127
    2c02:	57 e4       	ldi	r21, 0x47	; 71
    2c04:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2c08:	18 16       	cp	r1, r24
    2c0a:	0c f0       	brlt	.+2      	; 0x2c0e <main+0xc5e>
    2c0c:	43 c0       	rjmp	.+134    	; 0x2c94 <main+0xce4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c0e:	fe 01       	movw	r30, r28
    2c10:	e9 58       	subi	r30, 0x89	; 137
    2c12:	fe 4f       	sbci	r31, 0xFE	; 254
    2c14:	60 81       	ld	r22, Z
    2c16:	71 81       	ldd	r23, Z+1	; 0x01
    2c18:	82 81       	ldd	r24, Z+2	; 0x02
    2c1a:	93 81       	ldd	r25, Z+3	; 0x03
    2c1c:	20 e0       	ldi	r18, 0x00	; 0
    2c1e:	30 e0       	ldi	r19, 0x00	; 0
    2c20:	40 e2       	ldi	r20, 0x20	; 32
    2c22:	51 e4       	ldi	r21, 0x41	; 65
    2c24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c28:	dc 01       	movw	r26, r24
    2c2a:	cb 01       	movw	r24, r22
    2c2c:	8e 01       	movw	r16, r28
    2c2e:	0f 58       	subi	r16, 0x8F	; 143
    2c30:	1e 4f       	sbci	r17, 0xFE	; 254
    2c32:	bc 01       	movw	r22, r24
    2c34:	cd 01       	movw	r24, r26
    2c36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c3a:	dc 01       	movw	r26, r24
    2c3c:	cb 01       	movw	r24, r22
    2c3e:	f8 01       	movw	r30, r16
    2c40:	91 83       	std	Z+1, r25	; 0x01
    2c42:	80 83       	st	Z, r24
    2c44:	1f c0       	rjmp	.+62     	; 0x2c84 <main+0xcd4>
    2c46:	fe 01       	movw	r30, r28
    2c48:	e1 59       	subi	r30, 0x91	; 145
    2c4a:	fe 4f       	sbci	r31, 0xFE	; 254
    2c4c:	88 ec       	ldi	r24, 0xC8	; 200
    2c4e:	90 e0       	ldi	r25, 0x00	; 0
    2c50:	91 83       	std	Z+1, r25	; 0x01
    2c52:	80 83       	st	Z, r24
    2c54:	fe 01       	movw	r30, r28
    2c56:	e1 59       	subi	r30, 0x91	; 145
    2c58:	fe 4f       	sbci	r31, 0xFE	; 254
    2c5a:	80 81       	ld	r24, Z
    2c5c:	91 81       	ldd	r25, Z+1	; 0x01
    2c5e:	01 97       	sbiw	r24, 0x01	; 1
    2c60:	f1 f7       	brne	.-4      	; 0x2c5e <main+0xcae>
    2c62:	fe 01       	movw	r30, r28
    2c64:	e1 59       	subi	r30, 0x91	; 145
    2c66:	fe 4f       	sbci	r31, 0xFE	; 254
    2c68:	91 83       	std	Z+1, r25	; 0x01
    2c6a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c6c:	de 01       	movw	r26, r28
    2c6e:	af 58       	subi	r26, 0x8F	; 143
    2c70:	be 4f       	sbci	r27, 0xFE	; 254
    2c72:	fe 01       	movw	r30, r28
    2c74:	ef 58       	subi	r30, 0x8F	; 143
    2c76:	fe 4f       	sbci	r31, 0xFE	; 254
    2c78:	80 81       	ld	r24, Z
    2c7a:	91 81       	ldd	r25, Z+1	; 0x01
    2c7c:	01 97       	sbiw	r24, 0x01	; 1
    2c7e:	11 96       	adiw	r26, 0x01	; 1
    2c80:	9c 93       	st	X, r25
    2c82:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c84:	fe 01       	movw	r30, r28
    2c86:	ef 58       	subi	r30, 0x8F	; 143
    2c88:	fe 4f       	sbci	r31, 0xFE	; 254
    2c8a:	80 81       	ld	r24, Z
    2c8c:	91 81       	ldd	r25, Z+1	; 0x01
    2c8e:	00 97       	sbiw	r24, 0x00	; 0
    2c90:	d1 f6       	brne	.-76     	; 0x2c46 <main+0xc96>
    2c92:	27 c0       	rjmp	.+78     	; 0x2ce2 <main+0xd32>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c94:	8e 01       	movw	r16, r28
    2c96:	0f 58       	subi	r16, 0x8F	; 143
    2c98:	1e 4f       	sbci	r17, 0xFE	; 254
    2c9a:	fe 01       	movw	r30, r28
    2c9c:	ed 58       	subi	r30, 0x8D	; 141
    2c9e:	fe 4f       	sbci	r31, 0xFE	; 254
    2ca0:	60 81       	ld	r22, Z
    2ca2:	71 81       	ldd	r23, Z+1	; 0x01
    2ca4:	82 81       	ldd	r24, Z+2	; 0x02
    2ca6:	93 81       	ldd	r25, Z+3	; 0x03
    2ca8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2cac:	dc 01       	movw	r26, r24
    2cae:	cb 01       	movw	r24, r22
    2cb0:	f8 01       	movw	r30, r16
    2cb2:	91 83       	std	Z+1, r25	; 0x01
    2cb4:	80 83       	st	Z, r24
    2cb6:	de 01       	movw	r26, r28
    2cb8:	a3 59       	subi	r26, 0x93	; 147
    2cba:	be 4f       	sbci	r27, 0xFE	; 254
    2cbc:	fe 01       	movw	r30, r28
    2cbe:	ef 58       	subi	r30, 0x8F	; 143
    2cc0:	fe 4f       	sbci	r31, 0xFE	; 254
    2cc2:	80 81       	ld	r24, Z
    2cc4:	91 81       	ldd	r25, Z+1	; 0x01
    2cc6:	8d 93       	st	X+, r24
    2cc8:	9c 93       	st	X, r25
    2cca:	fe 01       	movw	r30, r28
    2ccc:	e3 59       	subi	r30, 0x93	; 147
    2cce:	fe 4f       	sbci	r31, 0xFE	; 254
    2cd0:	80 81       	ld	r24, Z
    2cd2:	91 81       	ldd	r25, Z+1	; 0x01
    2cd4:	01 97       	sbiw	r24, 0x01	; 1
    2cd6:	f1 f7       	brne	.-4      	; 0x2cd4 <main+0xd24>
    2cd8:	fe 01       	movw	r30, r28
    2cda:	e3 59       	subi	r30, 0x93	; 147
    2cdc:	fe 4f       	sbci	r31, 0xFE	; 254
    2cde:	91 83       	std	Z+1, r25	; 0x01
    2ce0:	80 83       	st	Z, r24
					}
					else
					{
						_delay_ms(150);
						Local_H_2++;
    2ce2:	de 01       	movw	r26, r28
    2ce4:	ab 53       	subi	r26, 0x3B	; 59
    2ce6:	be 4f       	sbci	r27, 0xFE	; 254
    2ce8:	fe 01       	movw	r30, r28
    2cea:	eb 53       	subi	r30, 0x3B	; 59
    2cec:	fe 4f       	sbci	r31, 0xFE	; 254
    2cee:	80 81       	ld	r24, Z
    2cf0:	8f 5f       	subi	r24, 0xFF	; 255
    2cf2:	8c 93       	st	X, r24

						CLCD_voidGoToXY(0,1);
    2cf4:	80 e0       	ldi	r24, 0x00	; 0
    2cf6:	61 e0       	ldi	r22, 0x01	; 1
    2cf8:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_H_2);
    2cfc:	fe 01       	movw	r30, r28
    2cfe:	eb 53       	subi	r30, 0x3B	; 59
    2d00:	fe 4f       	sbci	r31, 0xFE	; 254
    2d02:	80 81       	ld	r24, Z
    2d04:	88 2f       	mov	r24, r24
    2d06:	90 e0       	ldi	r25, 0x00	; 0
    2d08:	a0 e0       	ldi	r26, 0x00	; 0
    2d0a:	b0 e0       	ldi	r27, 0x00	; 0
    2d0c:	bc 01       	movw	r22, r24
    2d0e:	cd 01       	movw	r24, r26
    2d10:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2d14:	dc 01       	movw	r26, r24
    2d16:	cb 01       	movw	r24, r22
    2d18:	bc 01       	movw	r22, r24
    2d1a:	cd 01       	movw	r24, r26
    2d1c:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    2d20:	af c1       	rjmp	.+862    	; 0x3080 <main+0x10d0>
					}


				}
				else if (PB_u8GetState(DIO_u8PORTD,DIO_u8PIN3)==1)
    2d22:	83 e0       	ldi	r24, 0x03	; 3
    2d24:	63 e0       	ldi	r22, 0x03	; 3
    2d26:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    2d2a:	81 30       	cpi	r24, 0x01	; 1
    2d2c:	09 f0       	breq	.+2      	; 0x2d30 <main+0xd80>
    2d2e:	a8 c1       	rjmp	.+848    	; 0x3080 <main+0x10d0>
				{
					if (Local_H_2<=0)
    2d30:	fe 01       	movw	r30, r28
    2d32:	eb 53       	subi	r30, 0x3B	; 59
    2d34:	fe 4f       	sbci	r31, 0xFE	; 254
    2d36:	80 81       	ld	r24, Z
    2d38:	88 23       	and	r24, r24
    2d3a:	09 f0       	breq	.+2      	; 0x2d3e <main+0xd8e>
    2d3c:	cf c0       	rjmp	.+414    	; 0x2edc <main+0xf2c>
    2d3e:	fe 01       	movw	r30, r28
    2d40:	e7 59       	subi	r30, 0x97	; 151
    2d42:	fe 4f       	sbci	r31, 0xFE	; 254
    2d44:	80 e0       	ldi	r24, 0x00	; 0
    2d46:	90 e0       	ldi	r25, 0x00	; 0
    2d48:	a6 e1       	ldi	r26, 0x16	; 22
    2d4a:	b3 e4       	ldi	r27, 0x43	; 67
    2d4c:	80 83       	st	Z, r24
    2d4e:	91 83       	std	Z+1, r25	; 0x01
    2d50:	a2 83       	std	Z+2, r26	; 0x02
    2d52:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d54:	8e 01       	movw	r16, r28
    2d56:	0b 59       	subi	r16, 0x9B	; 155
    2d58:	1e 4f       	sbci	r17, 0xFE	; 254
    2d5a:	fe 01       	movw	r30, r28
    2d5c:	e7 59       	subi	r30, 0x97	; 151
    2d5e:	fe 4f       	sbci	r31, 0xFE	; 254
    2d60:	60 81       	ld	r22, Z
    2d62:	71 81       	ldd	r23, Z+1	; 0x01
    2d64:	82 81       	ldd	r24, Z+2	; 0x02
    2d66:	93 81       	ldd	r25, Z+3	; 0x03
    2d68:	20 e0       	ldi	r18, 0x00	; 0
    2d6a:	30 e0       	ldi	r19, 0x00	; 0
    2d6c:	4a ef       	ldi	r20, 0xFA	; 250
    2d6e:	54 e4       	ldi	r21, 0x44	; 68
    2d70:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d74:	dc 01       	movw	r26, r24
    2d76:	cb 01       	movw	r24, r22
    2d78:	f8 01       	movw	r30, r16
    2d7a:	80 83       	st	Z, r24
    2d7c:	91 83       	std	Z+1, r25	; 0x01
    2d7e:	a2 83       	std	Z+2, r26	; 0x02
    2d80:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d82:	fe 01       	movw	r30, r28
    2d84:	eb 59       	subi	r30, 0x9B	; 155
    2d86:	fe 4f       	sbci	r31, 0xFE	; 254
    2d88:	60 81       	ld	r22, Z
    2d8a:	71 81       	ldd	r23, Z+1	; 0x01
    2d8c:	82 81       	ldd	r24, Z+2	; 0x02
    2d8e:	93 81       	ldd	r25, Z+3	; 0x03
    2d90:	20 e0       	ldi	r18, 0x00	; 0
    2d92:	30 e0       	ldi	r19, 0x00	; 0
    2d94:	40 e8       	ldi	r20, 0x80	; 128
    2d96:	5f e3       	ldi	r21, 0x3F	; 63
    2d98:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2d9c:	88 23       	and	r24, r24
    2d9e:	44 f4       	brge	.+16     	; 0x2db0 <main+0xe00>
		__ticks = 1;
    2da0:	fe 01       	movw	r30, r28
    2da2:	ed 59       	subi	r30, 0x9D	; 157
    2da4:	fe 4f       	sbci	r31, 0xFE	; 254
    2da6:	81 e0       	ldi	r24, 0x01	; 1
    2da8:	90 e0       	ldi	r25, 0x00	; 0
    2daa:	91 83       	std	Z+1, r25	; 0x01
    2dac:	80 83       	st	Z, r24
    2dae:	64 c0       	rjmp	.+200    	; 0x2e78 <main+0xec8>
	else if (__tmp > 65535)
    2db0:	fe 01       	movw	r30, r28
    2db2:	eb 59       	subi	r30, 0x9B	; 155
    2db4:	fe 4f       	sbci	r31, 0xFE	; 254
    2db6:	60 81       	ld	r22, Z
    2db8:	71 81       	ldd	r23, Z+1	; 0x01
    2dba:	82 81       	ldd	r24, Z+2	; 0x02
    2dbc:	93 81       	ldd	r25, Z+3	; 0x03
    2dbe:	20 e0       	ldi	r18, 0x00	; 0
    2dc0:	3f ef       	ldi	r19, 0xFF	; 255
    2dc2:	4f e7       	ldi	r20, 0x7F	; 127
    2dc4:	57 e4       	ldi	r21, 0x47	; 71
    2dc6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2dca:	18 16       	cp	r1, r24
    2dcc:	0c f0       	brlt	.+2      	; 0x2dd0 <main+0xe20>
    2dce:	43 c0       	rjmp	.+134    	; 0x2e56 <main+0xea6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2dd0:	fe 01       	movw	r30, r28
    2dd2:	e7 59       	subi	r30, 0x97	; 151
    2dd4:	fe 4f       	sbci	r31, 0xFE	; 254
    2dd6:	60 81       	ld	r22, Z
    2dd8:	71 81       	ldd	r23, Z+1	; 0x01
    2dda:	82 81       	ldd	r24, Z+2	; 0x02
    2ddc:	93 81       	ldd	r25, Z+3	; 0x03
    2dde:	20 e0       	ldi	r18, 0x00	; 0
    2de0:	30 e0       	ldi	r19, 0x00	; 0
    2de2:	40 e2       	ldi	r20, 0x20	; 32
    2de4:	51 e4       	ldi	r21, 0x41	; 65
    2de6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2dea:	dc 01       	movw	r26, r24
    2dec:	cb 01       	movw	r24, r22
    2dee:	8e 01       	movw	r16, r28
    2df0:	0d 59       	subi	r16, 0x9D	; 157
    2df2:	1e 4f       	sbci	r17, 0xFE	; 254
    2df4:	bc 01       	movw	r22, r24
    2df6:	cd 01       	movw	r24, r26
    2df8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2dfc:	dc 01       	movw	r26, r24
    2dfe:	cb 01       	movw	r24, r22
    2e00:	f8 01       	movw	r30, r16
    2e02:	91 83       	std	Z+1, r25	; 0x01
    2e04:	80 83       	st	Z, r24
    2e06:	1f c0       	rjmp	.+62     	; 0x2e46 <main+0xe96>
    2e08:	fe 01       	movw	r30, r28
    2e0a:	ef 59       	subi	r30, 0x9F	; 159
    2e0c:	fe 4f       	sbci	r31, 0xFE	; 254
    2e0e:	88 ec       	ldi	r24, 0xC8	; 200
    2e10:	90 e0       	ldi	r25, 0x00	; 0
    2e12:	91 83       	std	Z+1, r25	; 0x01
    2e14:	80 83       	st	Z, r24
    2e16:	fe 01       	movw	r30, r28
    2e18:	ef 59       	subi	r30, 0x9F	; 159
    2e1a:	fe 4f       	sbci	r31, 0xFE	; 254
    2e1c:	80 81       	ld	r24, Z
    2e1e:	91 81       	ldd	r25, Z+1	; 0x01
    2e20:	01 97       	sbiw	r24, 0x01	; 1
    2e22:	f1 f7       	brne	.-4      	; 0x2e20 <main+0xe70>
    2e24:	fe 01       	movw	r30, r28
    2e26:	ef 59       	subi	r30, 0x9F	; 159
    2e28:	fe 4f       	sbci	r31, 0xFE	; 254
    2e2a:	91 83       	std	Z+1, r25	; 0x01
    2e2c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e2e:	de 01       	movw	r26, r28
    2e30:	ad 59       	subi	r26, 0x9D	; 157
    2e32:	be 4f       	sbci	r27, 0xFE	; 254
    2e34:	fe 01       	movw	r30, r28
    2e36:	ed 59       	subi	r30, 0x9D	; 157
    2e38:	fe 4f       	sbci	r31, 0xFE	; 254
    2e3a:	80 81       	ld	r24, Z
    2e3c:	91 81       	ldd	r25, Z+1	; 0x01
    2e3e:	01 97       	sbiw	r24, 0x01	; 1
    2e40:	11 96       	adiw	r26, 0x01	; 1
    2e42:	9c 93       	st	X, r25
    2e44:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e46:	fe 01       	movw	r30, r28
    2e48:	ed 59       	subi	r30, 0x9D	; 157
    2e4a:	fe 4f       	sbci	r31, 0xFE	; 254
    2e4c:	80 81       	ld	r24, Z
    2e4e:	91 81       	ldd	r25, Z+1	; 0x01
    2e50:	00 97       	sbiw	r24, 0x00	; 0
    2e52:	d1 f6       	brne	.-76     	; 0x2e08 <main+0xe58>
    2e54:	27 c0       	rjmp	.+78     	; 0x2ea4 <main+0xef4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e56:	8e 01       	movw	r16, r28
    2e58:	0d 59       	subi	r16, 0x9D	; 157
    2e5a:	1e 4f       	sbci	r17, 0xFE	; 254
    2e5c:	fe 01       	movw	r30, r28
    2e5e:	eb 59       	subi	r30, 0x9B	; 155
    2e60:	fe 4f       	sbci	r31, 0xFE	; 254
    2e62:	60 81       	ld	r22, Z
    2e64:	71 81       	ldd	r23, Z+1	; 0x01
    2e66:	82 81       	ldd	r24, Z+2	; 0x02
    2e68:	93 81       	ldd	r25, Z+3	; 0x03
    2e6a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e6e:	dc 01       	movw	r26, r24
    2e70:	cb 01       	movw	r24, r22
    2e72:	f8 01       	movw	r30, r16
    2e74:	91 83       	std	Z+1, r25	; 0x01
    2e76:	80 83       	st	Z, r24
    2e78:	de 01       	movw	r26, r28
    2e7a:	a1 5a       	subi	r26, 0xA1	; 161
    2e7c:	be 4f       	sbci	r27, 0xFE	; 254
    2e7e:	fe 01       	movw	r30, r28
    2e80:	ed 59       	subi	r30, 0x9D	; 157
    2e82:	fe 4f       	sbci	r31, 0xFE	; 254
    2e84:	80 81       	ld	r24, Z
    2e86:	91 81       	ldd	r25, Z+1	; 0x01
    2e88:	8d 93       	st	X+, r24
    2e8a:	9c 93       	st	X, r25
    2e8c:	fe 01       	movw	r30, r28
    2e8e:	e1 5a       	subi	r30, 0xA1	; 161
    2e90:	fe 4f       	sbci	r31, 0xFE	; 254
    2e92:	80 81       	ld	r24, Z
    2e94:	91 81       	ldd	r25, Z+1	; 0x01
    2e96:	01 97       	sbiw	r24, 0x01	; 1
    2e98:	f1 f7       	brne	.-4      	; 0x2e96 <main+0xee6>
    2e9a:	fe 01       	movw	r30, r28
    2e9c:	e1 5a       	subi	r30, 0xA1	; 161
    2e9e:	fe 4f       	sbci	r31, 0xFE	; 254
    2ea0:	91 83       	std	Z+1, r25	; 0x01
    2ea2:	80 83       	st	Z, r24
					{
						_delay_ms(150);
						Local_H_2=9;
    2ea4:	fe 01       	movw	r30, r28
    2ea6:	eb 53       	subi	r30, 0x3B	; 59
    2ea8:	fe 4f       	sbci	r31, 0xFE	; 254
    2eaa:	89 e0       	ldi	r24, 0x09	; 9
    2eac:	80 83       	st	Z, r24
						CLCD_voidGoToXY(0,1);
    2eae:	80 e0       	ldi	r24, 0x00	; 0
    2eb0:	61 e0       	ldi	r22, 0x01	; 1
    2eb2:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_H_2);
    2eb6:	fe 01       	movw	r30, r28
    2eb8:	eb 53       	subi	r30, 0x3B	; 59
    2eba:	fe 4f       	sbci	r31, 0xFE	; 254
    2ebc:	80 81       	ld	r24, Z
    2ebe:	88 2f       	mov	r24, r24
    2ec0:	90 e0       	ldi	r25, 0x00	; 0
    2ec2:	a0 e0       	ldi	r26, 0x00	; 0
    2ec4:	b0 e0       	ldi	r27, 0x00	; 0
    2ec6:	bc 01       	movw	r22, r24
    2ec8:	cd 01       	movw	r24, r26
    2eca:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2ece:	dc 01       	movw	r26, r24
    2ed0:	cb 01       	movw	r24, r22
    2ed2:	bc 01       	movw	r22, r24
    2ed4:	cd 01       	movw	r24, r26
    2ed6:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    2eda:	d2 c0       	rjmp	.+420    	; 0x3080 <main+0x10d0>
    2edc:	fe 01       	movw	r30, r28
    2ede:	e5 5a       	subi	r30, 0xA5	; 165
    2ee0:	fe 4f       	sbci	r31, 0xFE	; 254
    2ee2:	80 e0       	ldi	r24, 0x00	; 0
    2ee4:	90 e0       	ldi	r25, 0x00	; 0
    2ee6:	a8 e4       	ldi	r26, 0x48	; 72
    2ee8:	b3 e4       	ldi	r27, 0x43	; 67
    2eea:	80 83       	st	Z, r24
    2eec:	91 83       	std	Z+1, r25	; 0x01
    2eee:	a2 83       	std	Z+2, r26	; 0x02
    2ef0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ef2:	8e 01       	movw	r16, r28
    2ef4:	09 5a       	subi	r16, 0xA9	; 169
    2ef6:	1e 4f       	sbci	r17, 0xFE	; 254
    2ef8:	fe 01       	movw	r30, r28
    2efa:	e5 5a       	subi	r30, 0xA5	; 165
    2efc:	fe 4f       	sbci	r31, 0xFE	; 254
    2efe:	60 81       	ld	r22, Z
    2f00:	71 81       	ldd	r23, Z+1	; 0x01
    2f02:	82 81       	ldd	r24, Z+2	; 0x02
    2f04:	93 81       	ldd	r25, Z+3	; 0x03
    2f06:	20 e0       	ldi	r18, 0x00	; 0
    2f08:	30 e0       	ldi	r19, 0x00	; 0
    2f0a:	4a ef       	ldi	r20, 0xFA	; 250
    2f0c:	54 e4       	ldi	r21, 0x44	; 68
    2f0e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f12:	dc 01       	movw	r26, r24
    2f14:	cb 01       	movw	r24, r22
    2f16:	f8 01       	movw	r30, r16
    2f18:	80 83       	st	Z, r24
    2f1a:	91 83       	std	Z+1, r25	; 0x01
    2f1c:	a2 83       	std	Z+2, r26	; 0x02
    2f1e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f20:	fe 01       	movw	r30, r28
    2f22:	e9 5a       	subi	r30, 0xA9	; 169
    2f24:	fe 4f       	sbci	r31, 0xFE	; 254
    2f26:	60 81       	ld	r22, Z
    2f28:	71 81       	ldd	r23, Z+1	; 0x01
    2f2a:	82 81       	ldd	r24, Z+2	; 0x02
    2f2c:	93 81       	ldd	r25, Z+3	; 0x03
    2f2e:	20 e0       	ldi	r18, 0x00	; 0
    2f30:	30 e0       	ldi	r19, 0x00	; 0
    2f32:	40 e8       	ldi	r20, 0x80	; 128
    2f34:	5f e3       	ldi	r21, 0x3F	; 63
    2f36:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2f3a:	88 23       	and	r24, r24
    2f3c:	44 f4       	brge	.+16     	; 0x2f4e <main+0xf9e>
		__ticks = 1;
    2f3e:	fe 01       	movw	r30, r28
    2f40:	eb 5a       	subi	r30, 0xAB	; 171
    2f42:	fe 4f       	sbci	r31, 0xFE	; 254
    2f44:	81 e0       	ldi	r24, 0x01	; 1
    2f46:	90 e0       	ldi	r25, 0x00	; 0
    2f48:	91 83       	std	Z+1, r25	; 0x01
    2f4a:	80 83       	st	Z, r24
    2f4c:	64 c0       	rjmp	.+200    	; 0x3016 <main+0x1066>
	else if (__tmp > 65535)
    2f4e:	fe 01       	movw	r30, r28
    2f50:	e9 5a       	subi	r30, 0xA9	; 169
    2f52:	fe 4f       	sbci	r31, 0xFE	; 254
    2f54:	60 81       	ld	r22, Z
    2f56:	71 81       	ldd	r23, Z+1	; 0x01
    2f58:	82 81       	ldd	r24, Z+2	; 0x02
    2f5a:	93 81       	ldd	r25, Z+3	; 0x03
    2f5c:	20 e0       	ldi	r18, 0x00	; 0
    2f5e:	3f ef       	ldi	r19, 0xFF	; 255
    2f60:	4f e7       	ldi	r20, 0x7F	; 127
    2f62:	57 e4       	ldi	r21, 0x47	; 71
    2f64:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2f68:	18 16       	cp	r1, r24
    2f6a:	0c f0       	brlt	.+2      	; 0x2f6e <main+0xfbe>
    2f6c:	43 c0       	rjmp	.+134    	; 0x2ff4 <main+0x1044>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f6e:	fe 01       	movw	r30, r28
    2f70:	e5 5a       	subi	r30, 0xA5	; 165
    2f72:	fe 4f       	sbci	r31, 0xFE	; 254
    2f74:	60 81       	ld	r22, Z
    2f76:	71 81       	ldd	r23, Z+1	; 0x01
    2f78:	82 81       	ldd	r24, Z+2	; 0x02
    2f7a:	93 81       	ldd	r25, Z+3	; 0x03
    2f7c:	20 e0       	ldi	r18, 0x00	; 0
    2f7e:	30 e0       	ldi	r19, 0x00	; 0
    2f80:	40 e2       	ldi	r20, 0x20	; 32
    2f82:	51 e4       	ldi	r21, 0x41	; 65
    2f84:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f88:	dc 01       	movw	r26, r24
    2f8a:	cb 01       	movw	r24, r22
    2f8c:	8e 01       	movw	r16, r28
    2f8e:	0b 5a       	subi	r16, 0xAB	; 171
    2f90:	1e 4f       	sbci	r17, 0xFE	; 254
    2f92:	bc 01       	movw	r22, r24
    2f94:	cd 01       	movw	r24, r26
    2f96:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f9a:	dc 01       	movw	r26, r24
    2f9c:	cb 01       	movw	r24, r22
    2f9e:	f8 01       	movw	r30, r16
    2fa0:	91 83       	std	Z+1, r25	; 0x01
    2fa2:	80 83       	st	Z, r24
    2fa4:	1f c0       	rjmp	.+62     	; 0x2fe4 <main+0x1034>
    2fa6:	fe 01       	movw	r30, r28
    2fa8:	ed 5a       	subi	r30, 0xAD	; 173
    2faa:	fe 4f       	sbci	r31, 0xFE	; 254
    2fac:	88 ec       	ldi	r24, 0xC8	; 200
    2fae:	90 e0       	ldi	r25, 0x00	; 0
    2fb0:	91 83       	std	Z+1, r25	; 0x01
    2fb2:	80 83       	st	Z, r24
    2fb4:	fe 01       	movw	r30, r28
    2fb6:	ed 5a       	subi	r30, 0xAD	; 173
    2fb8:	fe 4f       	sbci	r31, 0xFE	; 254
    2fba:	80 81       	ld	r24, Z
    2fbc:	91 81       	ldd	r25, Z+1	; 0x01
    2fbe:	01 97       	sbiw	r24, 0x01	; 1
    2fc0:	f1 f7       	brne	.-4      	; 0x2fbe <main+0x100e>
    2fc2:	fe 01       	movw	r30, r28
    2fc4:	ed 5a       	subi	r30, 0xAD	; 173
    2fc6:	fe 4f       	sbci	r31, 0xFE	; 254
    2fc8:	91 83       	std	Z+1, r25	; 0x01
    2fca:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2fcc:	de 01       	movw	r26, r28
    2fce:	ab 5a       	subi	r26, 0xAB	; 171
    2fd0:	be 4f       	sbci	r27, 0xFE	; 254
    2fd2:	fe 01       	movw	r30, r28
    2fd4:	eb 5a       	subi	r30, 0xAB	; 171
    2fd6:	fe 4f       	sbci	r31, 0xFE	; 254
    2fd8:	80 81       	ld	r24, Z
    2fda:	91 81       	ldd	r25, Z+1	; 0x01
    2fdc:	01 97       	sbiw	r24, 0x01	; 1
    2fde:	11 96       	adiw	r26, 0x01	; 1
    2fe0:	9c 93       	st	X, r25
    2fe2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fe4:	fe 01       	movw	r30, r28
    2fe6:	eb 5a       	subi	r30, 0xAB	; 171
    2fe8:	fe 4f       	sbci	r31, 0xFE	; 254
    2fea:	80 81       	ld	r24, Z
    2fec:	91 81       	ldd	r25, Z+1	; 0x01
    2fee:	00 97       	sbiw	r24, 0x00	; 0
    2ff0:	d1 f6       	brne	.-76     	; 0x2fa6 <main+0xff6>
    2ff2:	27 c0       	rjmp	.+78     	; 0x3042 <main+0x1092>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ff4:	8e 01       	movw	r16, r28
    2ff6:	0b 5a       	subi	r16, 0xAB	; 171
    2ff8:	1e 4f       	sbci	r17, 0xFE	; 254
    2ffa:	fe 01       	movw	r30, r28
    2ffc:	e9 5a       	subi	r30, 0xA9	; 169
    2ffe:	fe 4f       	sbci	r31, 0xFE	; 254
    3000:	60 81       	ld	r22, Z
    3002:	71 81       	ldd	r23, Z+1	; 0x01
    3004:	82 81       	ldd	r24, Z+2	; 0x02
    3006:	93 81       	ldd	r25, Z+3	; 0x03
    3008:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    300c:	dc 01       	movw	r26, r24
    300e:	cb 01       	movw	r24, r22
    3010:	f8 01       	movw	r30, r16
    3012:	91 83       	std	Z+1, r25	; 0x01
    3014:	80 83       	st	Z, r24
    3016:	de 01       	movw	r26, r28
    3018:	af 5a       	subi	r26, 0xAF	; 175
    301a:	be 4f       	sbci	r27, 0xFE	; 254
    301c:	fe 01       	movw	r30, r28
    301e:	eb 5a       	subi	r30, 0xAB	; 171
    3020:	fe 4f       	sbci	r31, 0xFE	; 254
    3022:	80 81       	ld	r24, Z
    3024:	91 81       	ldd	r25, Z+1	; 0x01
    3026:	8d 93       	st	X+, r24
    3028:	9c 93       	st	X, r25
    302a:	fe 01       	movw	r30, r28
    302c:	ef 5a       	subi	r30, 0xAF	; 175
    302e:	fe 4f       	sbci	r31, 0xFE	; 254
    3030:	80 81       	ld	r24, Z
    3032:	91 81       	ldd	r25, Z+1	; 0x01
    3034:	01 97       	sbiw	r24, 0x01	; 1
    3036:	f1 f7       	brne	.-4      	; 0x3034 <main+0x1084>
    3038:	fe 01       	movw	r30, r28
    303a:	ef 5a       	subi	r30, 0xAF	; 175
    303c:	fe 4f       	sbci	r31, 0xFE	; 254
    303e:	91 83       	std	Z+1, r25	; 0x01
    3040:	80 83       	st	Z, r24
					}
					else
					{
						_delay_ms(200);

						Local_H_2--;
    3042:	de 01       	movw	r26, r28
    3044:	ab 53       	subi	r26, 0x3B	; 59
    3046:	be 4f       	sbci	r27, 0xFE	; 254
    3048:	fe 01       	movw	r30, r28
    304a:	eb 53       	subi	r30, 0x3B	; 59
    304c:	fe 4f       	sbci	r31, 0xFE	; 254
    304e:	80 81       	ld	r24, Z
    3050:	81 50       	subi	r24, 0x01	; 1
    3052:	8c 93       	st	X, r24
						CLCD_voidGoToXY(0,1);
    3054:	80 e0       	ldi	r24, 0x00	; 0
    3056:	61 e0       	ldi	r22, 0x01	; 1
    3058:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>

						CLCD_VoidWriteNumber(Local_H_2);
    305c:	fe 01       	movw	r30, r28
    305e:	eb 53       	subi	r30, 0x3B	; 59
    3060:	fe 4f       	sbci	r31, 0xFE	; 254
    3062:	80 81       	ld	r24, Z
    3064:	88 2f       	mov	r24, r24
    3066:	90 e0       	ldi	r25, 0x00	; 0
    3068:	a0 e0       	ldi	r26, 0x00	; 0
    306a:	b0 e0       	ldi	r27, 0x00	; 0
    306c:	bc 01       	movw	r22, r24
    306e:	cd 01       	movw	r24, r26
    3070:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    3074:	dc 01       	movw	r26, r24
    3076:	cb 01       	movw	r24, r22
    3078:	bc 01       	movw	r22, r24
    307a:	cd 01       	movw	r24, r26
    307c:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
					}

				}

			}
			while(PB_u8GetState(DIO_u8PORTD,DIO_u8PIN4)!=1);
    3080:	83 e0       	ldi	r24, 0x03	; 3
    3082:	64 e0       	ldi	r22, 0x04	; 4
    3084:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    3088:	81 30       	cpi	r24, 0x01	; 1
    308a:	09 f0       	breq	.+2      	; 0x308e <main+0x10de>
    308c:	9b cc       	rjmp	.-1738   	; 0x29c4 <main+0xa14>

			CLCD_voidGoToXY(1,1);
    308e:	81 e0       	ldi	r24, 0x01	; 1
    3090:	61 e0       	ldi	r22, 0x01	; 1
    3092:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
			CLCD_voidSendData(' ');
    3096:	80 e2       	ldi	r24, 0x20	; 32
    3098:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <CLCD_voidSendData>
			CLCD_voidWriteSpecialCharacter(arrow,1,1,3);
    309c:	ce 01       	movw	r24, r28
    309e:	89 53       	subi	r24, 0x39	; 57
    30a0:	9e 4f       	sbci	r25, 0xFE	; 254
    30a2:	61 e0       	ldi	r22, 0x01	; 1
    30a4:	41 e0       	ldi	r20, 0x01	; 1
    30a6:	23 e0       	ldi	r18, 0x03	; 3
    30a8:	0e 94 77 0b 	call	0x16ee	; 0x16ee <CLCD_voidWriteSpecialCharacter>

			/**************************** Minute ****************************/

			do
			{
				if (PB_u8GetState(DIO_u8PORTD,DIO_u8PIN2)==1)
    30ac:	83 e0       	ldi	r24, 0x03	; 3
    30ae:	62 e0       	ldi	r22, 0x02	; 2
    30b0:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    30b4:	81 30       	cpi	r24, 0x01	; 1
    30b6:	09 f0       	breq	.+2      	; 0x30ba <main+0x110a>
    30b8:	a8 c1       	rjmp	.+848    	; 0x340a <main+0x145a>
				{
					if (Local_M_1>=9)
    30ba:	fe 01       	movw	r30, r28
    30bc:	ec 53       	subi	r30, 0x3C	; 60
    30be:	fe 4f       	sbci	r31, 0xFE	; 254
    30c0:	80 81       	ld	r24, Z
    30c2:	89 30       	cpi	r24, 0x09	; 9
    30c4:	08 f4       	brcc	.+2      	; 0x30c8 <main+0x1118>
    30c6:	ce c0       	rjmp	.+412    	; 0x3264 <main+0x12b4>
    30c8:	fe 01       	movw	r30, r28
    30ca:	e3 5b       	subi	r30, 0xB3	; 179
    30cc:	fe 4f       	sbci	r31, 0xFE	; 254
    30ce:	80 e0       	ldi	r24, 0x00	; 0
    30d0:	90 e0       	ldi	r25, 0x00	; 0
    30d2:	a6 e1       	ldi	r26, 0x16	; 22
    30d4:	b3 e4       	ldi	r27, 0x43	; 67
    30d6:	80 83       	st	Z, r24
    30d8:	91 83       	std	Z+1, r25	; 0x01
    30da:	a2 83       	std	Z+2, r26	; 0x02
    30dc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30de:	8e 01       	movw	r16, r28
    30e0:	07 5b       	subi	r16, 0xB7	; 183
    30e2:	1e 4f       	sbci	r17, 0xFE	; 254
    30e4:	fe 01       	movw	r30, r28
    30e6:	e3 5b       	subi	r30, 0xB3	; 179
    30e8:	fe 4f       	sbci	r31, 0xFE	; 254
    30ea:	60 81       	ld	r22, Z
    30ec:	71 81       	ldd	r23, Z+1	; 0x01
    30ee:	82 81       	ldd	r24, Z+2	; 0x02
    30f0:	93 81       	ldd	r25, Z+3	; 0x03
    30f2:	20 e0       	ldi	r18, 0x00	; 0
    30f4:	30 e0       	ldi	r19, 0x00	; 0
    30f6:	4a ef       	ldi	r20, 0xFA	; 250
    30f8:	54 e4       	ldi	r21, 0x44	; 68
    30fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30fe:	dc 01       	movw	r26, r24
    3100:	cb 01       	movw	r24, r22
    3102:	f8 01       	movw	r30, r16
    3104:	80 83       	st	Z, r24
    3106:	91 83       	std	Z+1, r25	; 0x01
    3108:	a2 83       	std	Z+2, r26	; 0x02
    310a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    310c:	fe 01       	movw	r30, r28
    310e:	e7 5b       	subi	r30, 0xB7	; 183
    3110:	fe 4f       	sbci	r31, 0xFE	; 254
    3112:	60 81       	ld	r22, Z
    3114:	71 81       	ldd	r23, Z+1	; 0x01
    3116:	82 81       	ldd	r24, Z+2	; 0x02
    3118:	93 81       	ldd	r25, Z+3	; 0x03
    311a:	20 e0       	ldi	r18, 0x00	; 0
    311c:	30 e0       	ldi	r19, 0x00	; 0
    311e:	40 e8       	ldi	r20, 0x80	; 128
    3120:	5f e3       	ldi	r21, 0x3F	; 63
    3122:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3126:	88 23       	and	r24, r24
    3128:	44 f4       	brge	.+16     	; 0x313a <main+0x118a>
		__ticks = 1;
    312a:	fe 01       	movw	r30, r28
    312c:	e9 5b       	subi	r30, 0xB9	; 185
    312e:	fe 4f       	sbci	r31, 0xFE	; 254
    3130:	81 e0       	ldi	r24, 0x01	; 1
    3132:	90 e0       	ldi	r25, 0x00	; 0
    3134:	91 83       	std	Z+1, r25	; 0x01
    3136:	80 83       	st	Z, r24
    3138:	64 c0       	rjmp	.+200    	; 0x3202 <main+0x1252>
	else if (__tmp > 65535)
    313a:	fe 01       	movw	r30, r28
    313c:	e7 5b       	subi	r30, 0xB7	; 183
    313e:	fe 4f       	sbci	r31, 0xFE	; 254
    3140:	60 81       	ld	r22, Z
    3142:	71 81       	ldd	r23, Z+1	; 0x01
    3144:	82 81       	ldd	r24, Z+2	; 0x02
    3146:	93 81       	ldd	r25, Z+3	; 0x03
    3148:	20 e0       	ldi	r18, 0x00	; 0
    314a:	3f ef       	ldi	r19, 0xFF	; 255
    314c:	4f e7       	ldi	r20, 0x7F	; 127
    314e:	57 e4       	ldi	r21, 0x47	; 71
    3150:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3154:	18 16       	cp	r1, r24
    3156:	0c f0       	brlt	.+2      	; 0x315a <main+0x11aa>
    3158:	43 c0       	rjmp	.+134    	; 0x31e0 <main+0x1230>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    315a:	fe 01       	movw	r30, r28
    315c:	e3 5b       	subi	r30, 0xB3	; 179
    315e:	fe 4f       	sbci	r31, 0xFE	; 254
    3160:	60 81       	ld	r22, Z
    3162:	71 81       	ldd	r23, Z+1	; 0x01
    3164:	82 81       	ldd	r24, Z+2	; 0x02
    3166:	93 81       	ldd	r25, Z+3	; 0x03
    3168:	20 e0       	ldi	r18, 0x00	; 0
    316a:	30 e0       	ldi	r19, 0x00	; 0
    316c:	40 e2       	ldi	r20, 0x20	; 32
    316e:	51 e4       	ldi	r21, 0x41	; 65
    3170:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3174:	dc 01       	movw	r26, r24
    3176:	cb 01       	movw	r24, r22
    3178:	8e 01       	movw	r16, r28
    317a:	09 5b       	subi	r16, 0xB9	; 185
    317c:	1e 4f       	sbci	r17, 0xFE	; 254
    317e:	bc 01       	movw	r22, r24
    3180:	cd 01       	movw	r24, r26
    3182:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3186:	dc 01       	movw	r26, r24
    3188:	cb 01       	movw	r24, r22
    318a:	f8 01       	movw	r30, r16
    318c:	91 83       	std	Z+1, r25	; 0x01
    318e:	80 83       	st	Z, r24
    3190:	1f c0       	rjmp	.+62     	; 0x31d0 <main+0x1220>
    3192:	fe 01       	movw	r30, r28
    3194:	eb 5b       	subi	r30, 0xBB	; 187
    3196:	fe 4f       	sbci	r31, 0xFE	; 254
    3198:	88 ec       	ldi	r24, 0xC8	; 200
    319a:	90 e0       	ldi	r25, 0x00	; 0
    319c:	91 83       	std	Z+1, r25	; 0x01
    319e:	80 83       	st	Z, r24
    31a0:	fe 01       	movw	r30, r28
    31a2:	eb 5b       	subi	r30, 0xBB	; 187
    31a4:	fe 4f       	sbci	r31, 0xFE	; 254
    31a6:	80 81       	ld	r24, Z
    31a8:	91 81       	ldd	r25, Z+1	; 0x01
    31aa:	01 97       	sbiw	r24, 0x01	; 1
    31ac:	f1 f7       	brne	.-4      	; 0x31aa <main+0x11fa>
    31ae:	fe 01       	movw	r30, r28
    31b0:	eb 5b       	subi	r30, 0xBB	; 187
    31b2:	fe 4f       	sbci	r31, 0xFE	; 254
    31b4:	91 83       	std	Z+1, r25	; 0x01
    31b6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31b8:	de 01       	movw	r26, r28
    31ba:	a9 5b       	subi	r26, 0xB9	; 185
    31bc:	be 4f       	sbci	r27, 0xFE	; 254
    31be:	fe 01       	movw	r30, r28
    31c0:	e9 5b       	subi	r30, 0xB9	; 185
    31c2:	fe 4f       	sbci	r31, 0xFE	; 254
    31c4:	80 81       	ld	r24, Z
    31c6:	91 81       	ldd	r25, Z+1	; 0x01
    31c8:	01 97       	sbiw	r24, 0x01	; 1
    31ca:	11 96       	adiw	r26, 0x01	; 1
    31cc:	9c 93       	st	X, r25
    31ce:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31d0:	fe 01       	movw	r30, r28
    31d2:	e9 5b       	subi	r30, 0xB9	; 185
    31d4:	fe 4f       	sbci	r31, 0xFE	; 254
    31d6:	80 81       	ld	r24, Z
    31d8:	91 81       	ldd	r25, Z+1	; 0x01
    31da:	00 97       	sbiw	r24, 0x00	; 0
    31dc:	d1 f6       	brne	.-76     	; 0x3192 <main+0x11e2>
    31de:	27 c0       	rjmp	.+78     	; 0x322e <main+0x127e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31e0:	8e 01       	movw	r16, r28
    31e2:	09 5b       	subi	r16, 0xB9	; 185
    31e4:	1e 4f       	sbci	r17, 0xFE	; 254
    31e6:	fe 01       	movw	r30, r28
    31e8:	e7 5b       	subi	r30, 0xB7	; 183
    31ea:	fe 4f       	sbci	r31, 0xFE	; 254
    31ec:	60 81       	ld	r22, Z
    31ee:	71 81       	ldd	r23, Z+1	; 0x01
    31f0:	82 81       	ldd	r24, Z+2	; 0x02
    31f2:	93 81       	ldd	r25, Z+3	; 0x03
    31f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31f8:	dc 01       	movw	r26, r24
    31fa:	cb 01       	movw	r24, r22
    31fc:	f8 01       	movw	r30, r16
    31fe:	91 83       	std	Z+1, r25	; 0x01
    3200:	80 83       	st	Z, r24
    3202:	de 01       	movw	r26, r28
    3204:	ad 5b       	subi	r26, 0xBD	; 189
    3206:	be 4f       	sbci	r27, 0xFE	; 254
    3208:	fe 01       	movw	r30, r28
    320a:	e9 5b       	subi	r30, 0xB9	; 185
    320c:	fe 4f       	sbci	r31, 0xFE	; 254
    320e:	80 81       	ld	r24, Z
    3210:	91 81       	ldd	r25, Z+1	; 0x01
    3212:	8d 93       	st	X+, r24
    3214:	9c 93       	st	X, r25
    3216:	fe 01       	movw	r30, r28
    3218:	ed 5b       	subi	r30, 0xBD	; 189
    321a:	fe 4f       	sbci	r31, 0xFE	; 254
    321c:	80 81       	ld	r24, Z
    321e:	91 81       	ldd	r25, Z+1	; 0x01
    3220:	01 97       	sbiw	r24, 0x01	; 1
    3222:	f1 f7       	brne	.-4      	; 0x3220 <main+0x1270>
    3224:	fe 01       	movw	r30, r28
    3226:	ed 5b       	subi	r30, 0xBD	; 189
    3228:	fe 4f       	sbci	r31, 0xFE	; 254
    322a:	91 83       	std	Z+1, r25	; 0x01
    322c:	80 83       	st	Z, r24
					{
						_delay_ms(150);
						Local_M_1=0;
    322e:	fe 01       	movw	r30, r28
    3230:	ec 53       	subi	r30, 0x3C	; 60
    3232:	fe 4f       	sbci	r31, 0xFE	; 254
    3234:	10 82       	st	Z, r1
						CLCD_voidGoToXY(0,3);
    3236:	80 e0       	ldi	r24, 0x00	; 0
    3238:	63 e0       	ldi	r22, 0x03	; 3
    323a:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_M_1);
    323e:	fe 01       	movw	r30, r28
    3240:	ec 53       	subi	r30, 0x3C	; 60
    3242:	fe 4f       	sbci	r31, 0xFE	; 254
    3244:	80 81       	ld	r24, Z
    3246:	88 2f       	mov	r24, r24
    3248:	90 e0       	ldi	r25, 0x00	; 0
    324a:	a0 e0       	ldi	r26, 0x00	; 0
    324c:	b0 e0       	ldi	r27, 0x00	; 0
    324e:	bc 01       	movw	r22, r24
    3250:	cd 01       	movw	r24, r26
    3252:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    3256:	dc 01       	movw	r26, r24
    3258:	cb 01       	movw	r24, r22
    325a:	bc 01       	movw	r22, r24
    325c:	cd 01       	movw	r24, r26
    325e:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    3262:	82 c2       	rjmp	.+1284   	; 0x3768 <main+0x17b8>
    3264:	fe 01       	movw	r30, r28
    3266:	e1 5c       	subi	r30, 0xC1	; 193
    3268:	fe 4f       	sbci	r31, 0xFE	; 254
    326a:	80 e0       	ldi	r24, 0x00	; 0
    326c:	90 e0       	ldi	r25, 0x00	; 0
    326e:	a6 e1       	ldi	r26, 0x16	; 22
    3270:	b3 e4       	ldi	r27, 0x43	; 67
    3272:	80 83       	st	Z, r24
    3274:	91 83       	std	Z+1, r25	; 0x01
    3276:	a2 83       	std	Z+2, r26	; 0x02
    3278:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    327a:	8e 01       	movw	r16, r28
    327c:	05 5c       	subi	r16, 0xC5	; 197
    327e:	1e 4f       	sbci	r17, 0xFE	; 254
    3280:	fe 01       	movw	r30, r28
    3282:	e1 5c       	subi	r30, 0xC1	; 193
    3284:	fe 4f       	sbci	r31, 0xFE	; 254
    3286:	60 81       	ld	r22, Z
    3288:	71 81       	ldd	r23, Z+1	; 0x01
    328a:	82 81       	ldd	r24, Z+2	; 0x02
    328c:	93 81       	ldd	r25, Z+3	; 0x03
    328e:	20 e0       	ldi	r18, 0x00	; 0
    3290:	30 e0       	ldi	r19, 0x00	; 0
    3292:	4a ef       	ldi	r20, 0xFA	; 250
    3294:	54 e4       	ldi	r21, 0x44	; 68
    3296:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    329a:	dc 01       	movw	r26, r24
    329c:	cb 01       	movw	r24, r22
    329e:	f8 01       	movw	r30, r16
    32a0:	80 83       	st	Z, r24
    32a2:	91 83       	std	Z+1, r25	; 0x01
    32a4:	a2 83       	std	Z+2, r26	; 0x02
    32a6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    32a8:	fe 01       	movw	r30, r28
    32aa:	e5 5c       	subi	r30, 0xC5	; 197
    32ac:	fe 4f       	sbci	r31, 0xFE	; 254
    32ae:	60 81       	ld	r22, Z
    32b0:	71 81       	ldd	r23, Z+1	; 0x01
    32b2:	82 81       	ldd	r24, Z+2	; 0x02
    32b4:	93 81       	ldd	r25, Z+3	; 0x03
    32b6:	20 e0       	ldi	r18, 0x00	; 0
    32b8:	30 e0       	ldi	r19, 0x00	; 0
    32ba:	40 e8       	ldi	r20, 0x80	; 128
    32bc:	5f e3       	ldi	r21, 0x3F	; 63
    32be:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    32c2:	88 23       	and	r24, r24
    32c4:	44 f4       	brge	.+16     	; 0x32d6 <main+0x1326>
		__ticks = 1;
    32c6:	fe 01       	movw	r30, r28
    32c8:	e7 5c       	subi	r30, 0xC7	; 199
    32ca:	fe 4f       	sbci	r31, 0xFE	; 254
    32cc:	81 e0       	ldi	r24, 0x01	; 1
    32ce:	90 e0       	ldi	r25, 0x00	; 0
    32d0:	91 83       	std	Z+1, r25	; 0x01
    32d2:	80 83       	st	Z, r24
    32d4:	64 c0       	rjmp	.+200    	; 0x339e <main+0x13ee>
	else if (__tmp > 65535)
    32d6:	fe 01       	movw	r30, r28
    32d8:	e5 5c       	subi	r30, 0xC5	; 197
    32da:	fe 4f       	sbci	r31, 0xFE	; 254
    32dc:	60 81       	ld	r22, Z
    32de:	71 81       	ldd	r23, Z+1	; 0x01
    32e0:	82 81       	ldd	r24, Z+2	; 0x02
    32e2:	93 81       	ldd	r25, Z+3	; 0x03
    32e4:	20 e0       	ldi	r18, 0x00	; 0
    32e6:	3f ef       	ldi	r19, 0xFF	; 255
    32e8:	4f e7       	ldi	r20, 0x7F	; 127
    32ea:	57 e4       	ldi	r21, 0x47	; 71
    32ec:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    32f0:	18 16       	cp	r1, r24
    32f2:	0c f0       	brlt	.+2      	; 0x32f6 <main+0x1346>
    32f4:	43 c0       	rjmp	.+134    	; 0x337c <main+0x13cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32f6:	fe 01       	movw	r30, r28
    32f8:	e1 5c       	subi	r30, 0xC1	; 193
    32fa:	fe 4f       	sbci	r31, 0xFE	; 254
    32fc:	60 81       	ld	r22, Z
    32fe:	71 81       	ldd	r23, Z+1	; 0x01
    3300:	82 81       	ldd	r24, Z+2	; 0x02
    3302:	93 81       	ldd	r25, Z+3	; 0x03
    3304:	20 e0       	ldi	r18, 0x00	; 0
    3306:	30 e0       	ldi	r19, 0x00	; 0
    3308:	40 e2       	ldi	r20, 0x20	; 32
    330a:	51 e4       	ldi	r21, 0x41	; 65
    330c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3310:	dc 01       	movw	r26, r24
    3312:	cb 01       	movw	r24, r22
    3314:	8e 01       	movw	r16, r28
    3316:	07 5c       	subi	r16, 0xC7	; 199
    3318:	1e 4f       	sbci	r17, 0xFE	; 254
    331a:	bc 01       	movw	r22, r24
    331c:	cd 01       	movw	r24, r26
    331e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3322:	dc 01       	movw	r26, r24
    3324:	cb 01       	movw	r24, r22
    3326:	f8 01       	movw	r30, r16
    3328:	91 83       	std	Z+1, r25	; 0x01
    332a:	80 83       	st	Z, r24
    332c:	1f c0       	rjmp	.+62     	; 0x336c <main+0x13bc>
    332e:	fe 01       	movw	r30, r28
    3330:	e9 5c       	subi	r30, 0xC9	; 201
    3332:	fe 4f       	sbci	r31, 0xFE	; 254
    3334:	88 ec       	ldi	r24, 0xC8	; 200
    3336:	90 e0       	ldi	r25, 0x00	; 0
    3338:	91 83       	std	Z+1, r25	; 0x01
    333a:	80 83       	st	Z, r24
    333c:	fe 01       	movw	r30, r28
    333e:	e9 5c       	subi	r30, 0xC9	; 201
    3340:	fe 4f       	sbci	r31, 0xFE	; 254
    3342:	80 81       	ld	r24, Z
    3344:	91 81       	ldd	r25, Z+1	; 0x01
    3346:	01 97       	sbiw	r24, 0x01	; 1
    3348:	f1 f7       	brne	.-4      	; 0x3346 <main+0x1396>
    334a:	fe 01       	movw	r30, r28
    334c:	e9 5c       	subi	r30, 0xC9	; 201
    334e:	fe 4f       	sbci	r31, 0xFE	; 254
    3350:	91 83       	std	Z+1, r25	; 0x01
    3352:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3354:	de 01       	movw	r26, r28
    3356:	a7 5c       	subi	r26, 0xC7	; 199
    3358:	be 4f       	sbci	r27, 0xFE	; 254
    335a:	fe 01       	movw	r30, r28
    335c:	e7 5c       	subi	r30, 0xC7	; 199
    335e:	fe 4f       	sbci	r31, 0xFE	; 254
    3360:	80 81       	ld	r24, Z
    3362:	91 81       	ldd	r25, Z+1	; 0x01
    3364:	01 97       	sbiw	r24, 0x01	; 1
    3366:	11 96       	adiw	r26, 0x01	; 1
    3368:	9c 93       	st	X, r25
    336a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    336c:	fe 01       	movw	r30, r28
    336e:	e7 5c       	subi	r30, 0xC7	; 199
    3370:	fe 4f       	sbci	r31, 0xFE	; 254
    3372:	80 81       	ld	r24, Z
    3374:	91 81       	ldd	r25, Z+1	; 0x01
    3376:	00 97       	sbiw	r24, 0x00	; 0
    3378:	d1 f6       	brne	.-76     	; 0x332e <main+0x137e>
    337a:	27 c0       	rjmp	.+78     	; 0x33ca <main+0x141a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    337c:	8e 01       	movw	r16, r28
    337e:	07 5c       	subi	r16, 0xC7	; 199
    3380:	1e 4f       	sbci	r17, 0xFE	; 254
    3382:	fe 01       	movw	r30, r28
    3384:	e5 5c       	subi	r30, 0xC5	; 197
    3386:	fe 4f       	sbci	r31, 0xFE	; 254
    3388:	60 81       	ld	r22, Z
    338a:	71 81       	ldd	r23, Z+1	; 0x01
    338c:	82 81       	ldd	r24, Z+2	; 0x02
    338e:	93 81       	ldd	r25, Z+3	; 0x03
    3390:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3394:	dc 01       	movw	r26, r24
    3396:	cb 01       	movw	r24, r22
    3398:	f8 01       	movw	r30, r16
    339a:	91 83       	std	Z+1, r25	; 0x01
    339c:	80 83       	st	Z, r24
    339e:	de 01       	movw	r26, r28
    33a0:	ab 5c       	subi	r26, 0xCB	; 203
    33a2:	be 4f       	sbci	r27, 0xFE	; 254
    33a4:	fe 01       	movw	r30, r28
    33a6:	e7 5c       	subi	r30, 0xC7	; 199
    33a8:	fe 4f       	sbci	r31, 0xFE	; 254
    33aa:	80 81       	ld	r24, Z
    33ac:	91 81       	ldd	r25, Z+1	; 0x01
    33ae:	8d 93       	st	X+, r24
    33b0:	9c 93       	st	X, r25
    33b2:	fe 01       	movw	r30, r28
    33b4:	eb 5c       	subi	r30, 0xCB	; 203
    33b6:	fe 4f       	sbci	r31, 0xFE	; 254
    33b8:	80 81       	ld	r24, Z
    33ba:	91 81       	ldd	r25, Z+1	; 0x01
    33bc:	01 97       	sbiw	r24, 0x01	; 1
    33be:	f1 f7       	brne	.-4      	; 0x33bc <main+0x140c>
    33c0:	fe 01       	movw	r30, r28
    33c2:	eb 5c       	subi	r30, 0xCB	; 203
    33c4:	fe 4f       	sbci	r31, 0xFE	; 254
    33c6:	91 83       	std	Z+1, r25	; 0x01
    33c8:	80 83       	st	Z, r24
					}
					else
					{
						_delay_ms(150);
						Local_M_1++;
    33ca:	de 01       	movw	r26, r28
    33cc:	ac 53       	subi	r26, 0x3C	; 60
    33ce:	be 4f       	sbci	r27, 0xFE	; 254
    33d0:	fe 01       	movw	r30, r28
    33d2:	ec 53       	subi	r30, 0x3C	; 60
    33d4:	fe 4f       	sbci	r31, 0xFE	; 254
    33d6:	80 81       	ld	r24, Z
    33d8:	8f 5f       	subi	r24, 0xFF	; 255
    33da:	8c 93       	st	X, r24

						CLCD_voidGoToXY(0,3);
    33dc:	80 e0       	ldi	r24, 0x00	; 0
    33de:	63 e0       	ldi	r22, 0x03	; 3
    33e0:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_M_1);
    33e4:	fe 01       	movw	r30, r28
    33e6:	ec 53       	subi	r30, 0x3C	; 60
    33e8:	fe 4f       	sbci	r31, 0xFE	; 254
    33ea:	80 81       	ld	r24, Z
    33ec:	88 2f       	mov	r24, r24
    33ee:	90 e0       	ldi	r25, 0x00	; 0
    33f0:	a0 e0       	ldi	r26, 0x00	; 0
    33f2:	b0 e0       	ldi	r27, 0x00	; 0
    33f4:	bc 01       	movw	r22, r24
    33f6:	cd 01       	movw	r24, r26
    33f8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    33fc:	dc 01       	movw	r26, r24
    33fe:	cb 01       	movw	r24, r22
    3400:	bc 01       	movw	r22, r24
    3402:	cd 01       	movw	r24, r26
    3404:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    3408:	af c1       	rjmp	.+862    	; 0x3768 <main+0x17b8>
					}


				}
				else if (PB_u8GetState(DIO_u8PORTD,DIO_u8PIN3)==1)
    340a:	83 e0       	ldi	r24, 0x03	; 3
    340c:	63 e0       	ldi	r22, 0x03	; 3
    340e:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    3412:	81 30       	cpi	r24, 0x01	; 1
    3414:	09 f0       	breq	.+2      	; 0x3418 <main+0x1468>
    3416:	a8 c1       	rjmp	.+848    	; 0x3768 <main+0x17b8>
				{
					if (Local_M_1<=0)
    3418:	fe 01       	movw	r30, r28
    341a:	ec 53       	subi	r30, 0x3C	; 60
    341c:	fe 4f       	sbci	r31, 0xFE	; 254
    341e:	80 81       	ld	r24, Z
    3420:	88 23       	and	r24, r24
    3422:	09 f0       	breq	.+2      	; 0x3426 <main+0x1476>
    3424:	cf c0       	rjmp	.+414    	; 0x35c4 <main+0x1614>
    3426:	fe 01       	movw	r30, r28
    3428:	ef 5c       	subi	r30, 0xCF	; 207
    342a:	fe 4f       	sbci	r31, 0xFE	; 254
    342c:	80 e0       	ldi	r24, 0x00	; 0
    342e:	90 e0       	ldi	r25, 0x00	; 0
    3430:	a6 e1       	ldi	r26, 0x16	; 22
    3432:	b3 e4       	ldi	r27, 0x43	; 67
    3434:	80 83       	st	Z, r24
    3436:	91 83       	std	Z+1, r25	; 0x01
    3438:	a2 83       	std	Z+2, r26	; 0x02
    343a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    343c:	8e 01       	movw	r16, r28
    343e:	03 5d       	subi	r16, 0xD3	; 211
    3440:	1e 4f       	sbci	r17, 0xFE	; 254
    3442:	fe 01       	movw	r30, r28
    3444:	ef 5c       	subi	r30, 0xCF	; 207
    3446:	fe 4f       	sbci	r31, 0xFE	; 254
    3448:	60 81       	ld	r22, Z
    344a:	71 81       	ldd	r23, Z+1	; 0x01
    344c:	82 81       	ldd	r24, Z+2	; 0x02
    344e:	93 81       	ldd	r25, Z+3	; 0x03
    3450:	20 e0       	ldi	r18, 0x00	; 0
    3452:	30 e0       	ldi	r19, 0x00	; 0
    3454:	4a ef       	ldi	r20, 0xFA	; 250
    3456:	54 e4       	ldi	r21, 0x44	; 68
    3458:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    345c:	dc 01       	movw	r26, r24
    345e:	cb 01       	movw	r24, r22
    3460:	f8 01       	movw	r30, r16
    3462:	80 83       	st	Z, r24
    3464:	91 83       	std	Z+1, r25	; 0x01
    3466:	a2 83       	std	Z+2, r26	; 0x02
    3468:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    346a:	fe 01       	movw	r30, r28
    346c:	e3 5d       	subi	r30, 0xD3	; 211
    346e:	fe 4f       	sbci	r31, 0xFE	; 254
    3470:	60 81       	ld	r22, Z
    3472:	71 81       	ldd	r23, Z+1	; 0x01
    3474:	82 81       	ldd	r24, Z+2	; 0x02
    3476:	93 81       	ldd	r25, Z+3	; 0x03
    3478:	20 e0       	ldi	r18, 0x00	; 0
    347a:	30 e0       	ldi	r19, 0x00	; 0
    347c:	40 e8       	ldi	r20, 0x80	; 128
    347e:	5f e3       	ldi	r21, 0x3F	; 63
    3480:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3484:	88 23       	and	r24, r24
    3486:	44 f4       	brge	.+16     	; 0x3498 <main+0x14e8>
		__ticks = 1;
    3488:	fe 01       	movw	r30, r28
    348a:	e5 5d       	subi	r30, 0xD5	; 213
    348c:	fe 4f       	sbci	r31, 0xFE	; 254
    348e:	81 e0       	ldi	r24, 0x01	; 1
    3490:	90 e0       	ldi	r25, 0x00	; 0
    3492:	91 83       	std	Z+1, r25	; 0x01
    3494:	80 83       	st	Z, r24
    3496:	64 c0       	rjmp	.+200    	; 0x3560 <main+0x15b0>
	else if (__tmp > 65535)
    3498:	fe 01       	movw	r30, r28
    349a:	e3 5d       	subi	r30, 0xD3	; 211
    349c:	fe 4f       	sbci	r31, 0xFE	; 254
    349e:	60 81       	ld	r22, Z
    34a0:	71 81       	ldd	r23, Z+1	; 0x01
    34a2:	82 81       	ldd	r24, Z+2	; 0x02
    34a4:	93 81       	ldd	r25, Z+3	; 0x03
    34a6:	20 e0       	ldi	r18, 0x00	; 0
    34a8:	3f ef       	ldi	r19, 0xFF	; 255
    34aa:	4f e7       	ldi	r20, 0x7F	; 127
    34ac:	57 e4       	ldi	r21, 0x47	; 71
    34ae:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    34b2:	18 16       	cp	r1, r24
    34b4:	0c f0       	brlt	.+2      	; 0x34b8 <main+0x1508>
    34b6:	43 c0       	rjmp	.+134    	; 0x353e <main+0x158e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34b8:	fe 01       	movw	r30, r28
    34ba:	ef 5c       	subi	r30, 0xCF	; 207
    34bc:	fe 4f       	sbci	r31, 0xFE	; 254
    34be:	60 81       	ld	r22, Z
    34c0:	71 81       	ldd	r23, Z+1	; 0x01
    34c2:	82 81       	ldd	r24, Z+2	; 0x02
    34c4:	93 81       	ldd	r25, Z+3	; 0x03
    34c6:	20 e0       	ldi	r18, 0x00	; 0
    34c8:	30 e0       	ldi	r19, 0x00	; 0
    34ca:	40 e2       	ldi	r20, 0x20	; 32
    34cc:	51 e4       	ldi	r21, 0x41	; 65
    34ce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34d2:	dc 01       	movw	r26, r24
    34d4:	cb 01       	movw	r24, r22
    34d6:	8e 01       	movw	r16, r28
    34d8:	05 5d       	subi	r16, 0xD5	; 213
    34da:	1e 4f       	sbci	r17, 0xFE	; 254
    34dc:	bc 01       	movw	r22, r24
    34de:	cd 01       	movw	r24, r26
    34e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34e4:	dc 01       	movw	r26, r24
    34e6:	cb 01       	movw	r24, r22
    34e8:	f8 01       	movw	r30, r16
    34ea:	91 83       	std	Z+1, r25	; 0x01
    34ec:	80 83       	st	Z, r24
    34ee:	1f c0       	rjmp	.+62     	; 0x352e <main+0x157e>
    34f0:	fe 01       	movw	r30, r28
    34f2:	e7 5d       	subi	r30, 0xD7	; 215
    34f4:	fe 4f       	sbci	r31, 0xFE	; 254
    34f6:	88 ec       	ldi	r24, 0xC8	; 200
    34f8:	90 e0       	ldi	r25, 0x00	; 0
    34fa:	91 83       	std	Z+1, r25	; 0x01
    34fc:	80 83       	st	Z, r24
    34fe:	fe 01       	movw	r30, r28
    3500:	e7 5d       	subi	r30, 0xD7	; 215
    3502:	fe 4f       	sbci	r31, 0xFE	; 254
    3504:	80 81       	ld	r24, Z
    3506:	91 81       	ldd	r25, Z+1	; 0x01
    3508:	01 97       	sbiw	r24, 0x01	; 1
    350a:	f1 f7       	brne	.-4      	; 0x3508 <main+0x1558>
    350c:	fe 01       	movw	r30, r28
    350e:	e7 5d       	subi	r30, 0xD7	; 215
    3510:	fe 4f       	sbci	r31, 0xFE	; 254
    3512:	91 83       	std	Z+1, r25	; 0x01
    3514:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3516:	de 01       	movw	r26, r28
    3518:	a5 5d       	subi	r26, 0xD5	; 213
    351a:	be 4f       	sbci	r27, 0xFE	; 254
    351c:	fe 01       	movw	r30, r28
    351e:	e5 5d       	subi	r30, 0xD5	; 213
    3520:	fe 4f       	sbci	r31, 0xFE	; 254
    3522:	80 81       	ld	r24, Z
    3524:	91 81       	ldd	r25, Z+1	; 0x01
    3526:	01 97       	sbiw	r24, 0x01	; 1
    3528:	11 96       	adiw	r26, 0x01	; 1
    352a:	9c 93       	st	X, r25
    352c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    352e:	fe 01       	movw	r30, r28
    3530:	e5 5d       	subi	r30, 0xD5	; 213
    3532:	fe 4f       	sbci	r31, 0xFE	; 254
    3534:	80 81       	ld	r24, Z
    3536:	91 81       	ldd	r25, Z+1	; 0x01
    3538:	00 97       	sbiw	r24, 0x00	; 0
    353a:	d1 f6       	brne	.-76     	; 0x34f0 <main+0x1540>
    353c:	27 c0       	rjmp	.+78     	; 0x358c <main+0x15dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    353e:	8e 01       	movw	r16, r28
    3540:	05 5d       	subi	r16, 0xD5	; 213
    3542:	1e 4f       	sbci	r17, 0xFE	; 254
    3544:	fe 01       	movw	r30, r28
    3546:	e3 5d       	subi	r30, 0xD3	; 211
    3548:	fe 4f       	sbci	r31, 0xFE	; 254
    354a:	60 81       	ld	r22, Z
    354c:	71 81       	ldd	r23, Z+1	; 0x01
    354e:	82 81       	ldd	r24, Z+2	; 0x02
    3550:	93 81       	ldd	r25, Z+3	; 0x03
    3552:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3556:	dc 01       	movw	r26, r24
    3558:	cb 01       	movw	r24, r22
    355a:	f8 01       	movw	r30, r16
    355c:	91 83       	std	Z+1, r25	; 0x01
    355e:	80 83       	st	Z, r24
    3560:	de 01       	movw	r26, r28
    3562:	a9 5d       	subi	r26, 0xD9	; 217
    3564:	be 4f       	sbci	r27, 0xFE	; 254
    3566:	fe 01       	movw	r30, r28
    3568:	e5 5d       	subi	r30, 0xD5	; 213
    356a:	fe 4f       	sbci	r31, 0xFE	; 254
    356c:	80 81       	ld	r24, Z
    356e:	91 81       	ldd	r25, Z+1	; 0x01
    3570:	8d 93       	st	X+, r24
    3572:	9c 93       	st	X, r25
    3574:	fe 01       	movw	r30, r28
    3576:	e9 5d       	subi	r30, 0xD9	; 217
    3578:	fe 4f       	sbci	r31, 0xFE	; 254
    357a:	80 81       	ld	r24, Z
    357c:	91 81       	ldd	r25, Z+1	; 0x01
    357e:	01 97       	sbiw	r24, 0x01	; 1
    3580:	f1 f7       	brne	.-4      	; 0x357e <main+0x15ce>
    3582:	fe 01       	movw	r30, r28
    3584:	e9 5d       	subi	r30, 0xD9	; 217
    3586:	fe 4f       	sbci	r31, 0xFE	; 254
    3588:	91 83       	std	Z+1, r25	; 0x01
    358a:	80 83       	st	Z, r24
					{
						_delay_ms(150);
						Local_M_1=9;
    358c:	fe 01       	movw	r30, r28
    358e:	ec 53       	subi	r30, 0x3C	; 60
    3590:	fe 4f       	sbci	r31, 0xFE	; 254
    3592:	89 e0       	ldi	r24, 0x09	; 9
    3594:	80 83       	st	Z, r24
						CLCD_voidGoToXY(0,3);
    3596:	80 e0       	ldi	r24, 0x00	; 0
    3598:	63 e0       	ldi	r22, 0x03	; 3
    359a:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_M_1);
    359e:	fe 01       	movw	r30, r28
    35a0:	ec 53       	subi	r30, 0x3C	; 60
    35a2:	fe 4f       	sbci	r31, 0xFE	; 254
    35a4:	80 81       	ld	r24, Z
    35a6:	88 2f       	mov	r24, r24
    35a8:	90 e0       	ldi	r25, 0x00	; 0
    35aa:	a0 e0       	ldi	r26, 0x00	; 0
    35ac:	b0 e0       	ldi	r27, 0x00	; 0
    35ae:	bc 01       	movw	r22, r24
    35b0:	cd 01       	movw	r24, r26
    35b2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    35b6:	dc 01       	movw	r26, r24
    35b8:	cb 01       	movw	r24, r22
    35ba:	bc 01       	movw	r22, r24
    35bc:	cd 01       	movw	r24, r26
    35be:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    35c2:	d2 c0       	rjmp	.+420    	; 0x3768 <main+0x17b8>
    35c4:	fe 01       	movw	r30, r28
    35c6:	ed 5d       	subi	r30, 0xDD	; 221
    35c8:	fe 4f       	sbci	r31, 0xFE	; 254
    35ca:	80 e0       	ldi	r24, 0x00	; 0
    35cc:	90 e0       	ldi	r25, 0x00	; 0
    35ce:	a8 e4       	ldi	r26, 0x48	; 72
    35d0:	b3 e4       	ldi	r27, 0x43	; 67
    35d2:	80 83       	st	Z, r24
    35d4:	91 83       	std	Z+1, r25	; 0x01
    35d6:	a2 83       	std	Z+2, r26	; 0x02
    35d8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    35da:	8e 01       	movw	r16, r28
    35dc:	01 5e       	subi	r16, 0xE1	; 225
    35de:	1e 4f       	sbci	r17, 0xFE	; 254
    35e0:	fe 01       	movw	r30, r28
    35e2:	ed 5d       	subi	r30, 0xDD	; 221
    35e4:	fe 4f       	sbci	r31, 0xFE	; 254
    35e6:	60 81       	ld	r22, Z
    35e8:	71 81       	ldd	r23, Z+1	; 0x01
    35ea:	82 81       	ldd	r24, Z+2	; 0x02
    35ec:	93 81       	ldd	r25, Z+3	; 0x03
    35ee:	20 e0       	ldi	r18, 0x00	; 0
    35f0:	30 e0       	ldi	r19, 0x00	; 0
    35f2:	4a ef       	ldi	r20, 0xFA	; 250
    35f4:	54 e4       	ldi	r21, 0x44	; 68
    35f6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35fa:	dc 01       	movw	r26, r24
    35fc:	cb 01       	movw	r24, r22
    35fe:	f8 01       	movw	r30, r16
    3600:	80 83       	st	Z, r24
    3602:	91 83       	std	Z+1, r25	; 0x01
    3604:	a2 83       	std	Z+2, r26	; 0x02
    3606:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3608:	fe 01       	movw	r30, r28
    360a:	e1 5e       	subi	r30, 0xE1	; 225
    360c:	fe 4f       	sbci	r31, 0xFE	; 254
    360e:	60 81       	ld	r22, Z
    3610:	71 81       	ldd	r23, Z+1	; 0x01
    3612:	82 81       	ldd	r24, Z+2	; 0x02
    3614:	93 81       	ldd	r25, Z+3	; 0x03
    3616:	20 e0       	ldi	r18, 0x00	; 0
    3618:	30 e0       	ldi	r19, 0x00	; 0
    361a:	40 e8       	ldi	r20, 0x80	; 128
    361c:	5f e3       	ldi	r21, 0x3F	; 63
    361e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3622:	88 23       	and	r24, r24
    3624:	44 f4       	brge	.+16     	; 0x3636 <main+0x1686>
		__ticks = 1;
    3626:	fe 01       	movw	r30, r28
    3628:	e3 5e       	subi	r30, 0xE3	; 227
    362a:	fe 4f       	sbci	r31, 0xFE	; 254
    362c:	81 e0       	ldi	r24, 0x01	; 1
    362e:	90 e0       	ldi	r25, 0x00	; 0
    3630:	91 83       	std	Z+1, r25	; 0x01
    3632:	80 83       	st	Z, r24
    3634:	64 c0       	rjmp	.+200    	; 0x36fe <main+0x174e>
	else if (__tmp > 65535)
    3636:	fe 01       	movw	r30, r28
    3638:	e1 5e       	subi	r30, 0xE1	; 225
    363a:	fe 4f       	sbci	r31, 0xFE	; 254
    363c:	60 81       	ld	r22, Z
    363e:	71 81       	ldd	r23, Z+1	; 0x01
    3640:	82 81       	ldd	r24, Z+2	; 0x02
    3642:	93 81       	ldd	r25, Z+3	; 0x03
    3644:	20 e0       	ldi	r18, 0x00	; 0
    3646:	3f ef       	ldi	r19, 0xFF	; 255
    3648:	4f e7       	ldi	r20, 0x7F	; 127
    364a:	57 e4       	ldi	r21, 0x47	; 71
    364c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3650:	18 16       	cp	r1, r24
    3652:	0c f0       	brlt	.+2      	; 0x3656 <main+0x16a6>
    3654:	43 c0       	rjmp	.+134    	; 0x36dc <main+0x172c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3656:	fe 01       	movw	r30, r28
    3658:	ed 5d       	subi	r30, 0xDD	; 221
    365a:	fe 4f       	sbci	r31, 0xFE	; 254
    365c:	60 81       	ld	r22, Z
    365e:	71 81       	ldd	r23, Z+1	; 0x01
    3660:	82 81       	ldd	r24, Z+2	; 0x02
    3662:	93 81       	ldd	r25, Z+3	; 0x03
    3664:	20 e0       	ldi	r18, 0x00	; 0
    3666:	30 e0       	ldi	r19, 0x00	; 0
    3668:	40 e2       	ldi	r20, 0x20	; 32
    366a:	51 e4       	ldi	r21, 0x41	; 65
    366c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3670:	dc 01       	movw	r26, r24
    3672:	cb 01       	movw	r24, r22
    3674:	8e 01       	movw	r16, r28
    3676:	03 5e       	subi	r16, 0xE3	; 227
    3678:	1e 4f       	sbci	r17, 0xFE	; 254
    367a:	bc 01       	movw	r22, r24
    367c:	cd 01       	movw	r24, r26
    367e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3682:	dc 01       	movw	r26, r24
    3684:	cb 01       	movw	r24, r22
    3686:	f8 01       	movw	r30, r16
    3688:	91 83       	std	Z+1, r25	; 0x01
    368a:	80 83       	st	Z, r24
    368c:	1f c0       	rjmp	.+62     	; 0x36cc <main+0x171c>
    368e:	fe 01       	movw	r30, r28
    3690:	e5 5e       	subi	r30, 0xE5	; 229
    3692:	fe 4f       	sbci	r31, 0xFE	; 254
    3694:	88 ec       	ldi	r24, 0xC8	; 200
    3696:	90 e0       	ldi	r25, 0x00	; 0
    3698:	91 83       	std	Z+1, r25	; 0x01
    369a:	80 83       	st	Z, r24
    369c:	fe 01       	movw	r30, r28
    369e:	e5 5e       	subi	r30, 0xE5	; 229
    36a0:	fe 4f       	sbci	r31, 0xFE	; 254
    36a2:	80 81       	ld	r24, Z
    36a4:	91 81       	ldd	r25, Z+1	; 0x01
    36a6:	01 97       	sbiw	r24, 0x01	; 1
    36a8:	f1 f7       	brne	.-4      	; 0x36a6 <main+0x16f6>
    36aa:	fe 01       	movw	r30, r28
    36ac:	e5 5e       	subi	r30, 0xE5	; 229
    36ae:	fe 4f       	sbci	r31, 0xFE	; 254
    36b0:	91 83       	std	Z+1, r25	; 0x01
    36b2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36b4:	de 01       	movw	r26, r28
    36b6:	a3 5e       	subi	r26, 0xE3	; 227
    36b8:	be 4f       	sbci	r27, 0xFE	; 254
    36ba:	fe 01       	movw	r30, r28
    36bc:	e3 5e       	subi	r30, 0xE3	; 227
    36be:	fe 4f       	sbci	r31, 0xFE	; 254
    36c0:	80 81       	ld	r24, Z
    36c2:	91 81       	ldd	r25, Z+1	; 0x01
    36c4:	01 97       	sbiw	r24, 0x01	; 1
    36c6:	11 96       	adiw	r26, 0x01	; 1
    36c8:	9c 93       	st	X, r25
    36ca:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36cc:	fe 01       	movw	r30, r28
    36ce:	e3 5e       	subi	r30, 0xE3	; 227
    36d0:	fe 4f       	sbci	r31, 0xFE	; 254
    36d2:	80 81       	ld	r24, Z
    36d4:	91 81       	ldd	r25, Z+1	; 0x01
    36d6:	00 97       	sbiw	r24, 0x00	; 0
    36d8:	d1 f6       	brne	.-76     	; 0x368e <main+0x16de>
    36da:	27 c0       	rjmp	.+78     	; 0x372a <main+0x177a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36dc:	8e 01       	movw	r16, r28
    36de:	03 5e       	subi	r16, 0xE3	; 227
    36e0:	1e 4f       	sbci	r17, 0xFE	; 254
    36e2:	fe 01       	movw	r30, r28
    36e4:	e1 5e       	subi	r30, 0xE1	; 225
    36e6:	fe 4f       	sbci	r31, 0xFE	; 254
    36e8:	60 81       	ld	r22, Z
    36ea:	71 81       	ldd	r23, Z+1	; 0x01
    36ec:	82 81       	ldd	r24, Z+2	; 0x02
    36ee:	93 81       	ldd	r25, Z+3	; 0x03
    36f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36f4:	dc 01       	movw	r26, r24
    36f6:	cb 01       	movw	r24, r22
    36f8:	f8 01       	movw	r30, r16
    36fa:	91 83       	std	Z+1, r25	; 0x01
    36fc:	80 83       	st	Z, r24
    36fe:	de 01       	movw	r26, r28
    3700:	a7 5e       	subi	r26, 0xE7	; 231
    3702:	be 4f       	sbci	r27, 0xFE	; 254
    3704:	fe 01       	movw	r30, r28
    3706:	e3 5e       	subi	r30, 0xE3	; 227
    3708:	fe 4f       	sbci	r31, 0xFE	; 254
    370a:	80 81       	ld	r24, Z
    370c:	91 81       	ldd	r25, Z+1	; 0x01
    370e:	8d 93       	st	X+, r24
    3710:	9c 93       	st	X, r25
    3712:	fe 01       	movw	r30, r28
    3714:	e7 5e       	subi	r30, 0xE7	; 231
    3716:	fe 4f       	sbci	r31, 0xFE	; 254
    3718:	80 81       	ld	r24, Z
    371a:	91 81       	ldd	r25, Z+1	; 0x01
    371c:	01 97       	sbiw	r24, 0x01	; 1
    371e:	f1 f7       	brne	.-4      	; 0x371c <main+0x176c>
    3720:	fe 01       	movw	r30, r28
    3722:	e7 5e       	subi	r30, 0xE7	; 231
    3724:	fe 4f       	sbci	r31, 0xFE	; 254
    3726:	91 83       	std	Z+1, r25	; 0x01
    3728:	80 83       	st	Z, r24
					}
					else
					{
						_delay_ms(200);

						Local_M_1--;
    372a:	de 01       	movw	r26, r28
    372c:	ac 53       	subi	r26, 0x3C	; 60
    372e:	be 4f       	sbci	r27, 0xFE	; 254
    3730:	fe 01       	movw	r30, r28
    3732:	ec 53       	subi	r30, 0x3C	; 60
    3734:	fe 4f       	sbci	r31, 0xFE	; 254
    3736:	80 81       	ld	r24, Z
    3738:	81 50       	subi	r24, 0x01	; 1
    373a:	8c 93       	st	X, r24
						CLCD_voidGoToXY(0,3);
    373c:	80 e0       	ldi	r24, 0x00	; 0
    373e:	63 e0       	ldi	r22, 0x03	; 3
    3740:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>

						CLCD_VoidWriteNumber(Local_M_1);
    3744:	fe 01       	movw	r30, r28
    3746:	ec 53       	subi	r30, 0x3C	; 60
    3748:	fe 4f       	sbci	r31, 0xFE	; 254
    374a:	80 81       	ld	r24, Z
    374c:	88 2f       	mov	r24, r24
    374e:	90 e0       	ldi	r25, 0x00	; 0
    3750:	a0 e0       	ldi	r26, 0x00	; 0
    3752:	b0 e0       	ldi	r27, 0x00	; 0
    3754:	bc 01       	movw	r22, r24
    3756:	cd 01       	movw	r24, r26
    3758:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    375c:	dc 01       	movw	r26, r24
    375e:	cb 01       	movw	r24, r22
    3760:	bc 01       	movw	r22, r24
    3762:	cd 01       	movw	r24, r26
    3764:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
					}

				}

			}
			while(PB_u8GetState(DIO_u8PORTD,DIO_u8PIN4)!=1);
    3768:	83 e0       	ldi	r24, 0x03	; 3
    376a:	64 e0       	ldi	r22, 0x04	; 4
    376c:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    3770:	81 30       	cpi	r24, 0x01	; 1
    3772:	09 f0       	breq	.+2      	; 0x3776 <main+0x17c6>
    3774:	9b cc       	rjmp	.-1738   	; 0x30ac <main+0x10fc>


			CLCD_voidGoToXY(1,3);
    3776:	81 e0       	ldi	r24, 0x01	; 1
    3778:	63 e0       	ldi	r22, 0x03	; 3
    377a:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
			CLCD_voidSendData(' ');
    377e:	80 e2       	ldi	r24, 0x20	; 32
    3780:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <CLCD_voidSendData>
			CLCD_voidWriteSpecialCharacter(arrow,1,1,4);
    3784:	ce 01       	movw	r24, r28
    3786:	89 53       	subi	r24, 0x39	; 57
    3788:	9e 4f       	sbci	r25, 0xFE	; 254
    378a:	61 e0       	ldi	r22, 0x01	; 1
    378c:	41 e0       	ldi	r20, 0x01	; 1
    378e:	24 e0       	ldi	r18, 0x04	; 4
    3790:	0e 94 77 0b 	call	0x16ee	; 0x16ee <CLCD_voidWriteSpecialCharacter>

			do
			{
				if (PB_u8GetState(DIO_u8PORTD,DIO_u8PIN2)==1)
    3794:	83 e0       	ldi	r24, 0x03	; 3
    3796:	62 e0       	ldi	r22, 0x02	; 2
    3798:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    379c:	81 30       	cpi	r24, 0x01	; 1
    379e:	09 f0       	breq	.+2      	; 0x37a2 <main+0x17f2>
    37a0:	a8 c1       	rjmp	.+848    	; 0x3af2 <main+0x1b42>
				{
					if (Local_M_2>=9)
    37a2:	fe 01       	movw	r30, r28
    37a4:	ed 53       	subi	r30, 0x3D	; 61
    37a6:	fe 4f       	sbci	r31, 0xFE	; 254
    37a8:	80 81       	ld	r24, Z
    37aa:	89 30       	cpi	r24, 0x09	; 9
    37ac:	08 f4       	brcc	.+2      	; 0x37b0 <main+0x1800>
    37ae:	ce c0       	rjmp	.+412    	; 0x394c <main+0x199c>
    37b0:	fe 01       	movw	r30, r28
    37b2:	eb 5e       	subi	r30, 0xEB	; 235
    37b4:	fe 4f       	sbci	r31, 0xFE	; 254
    37b6:	80 e0       	ldi	r24, 0x00	; 0
    37b8:	90 e0       	ldi	r25, 0x00	; 0
    37ba:	a6 e1       	ldi	r26, 0x16	; 22
    37bc:	b3 e4       	ldi	r27, 0x43	; 67
    37be:	80 83       	st	Z, r24
    37c0:	91 83       	std	Z+1, r25	; 0x01
    37c2:	a2 83       	std	Z+2, r26	; 0x02
    37c4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    37c6:	8e 01       	movw	r16, r28
    37c8:	0f 5e       	subi	r16, 0xEF	; 239
    37ca:	1e 4f       	sbci	r17, 0xFE	; 254
    37cc:	fe 01       	movw	r30, r28
    37ce:	eb 5e       	subi	r30, 0xEB	; 235
    37d0:	fe 4f       	sbci	r31, 0xFE	; 254
    37d2:	60 81       	ld	r22, Z
    37d4:	71 81       	ldd	r23, Z+1	; 0x01
    37d6:	82 81       	ldd	r24, Z+2	; 0x02
    37d8:	93 81       	ldd	r25, Z+3	; 0x03
    37da:	20 e0       	ldi	r18, 0x00	; 0
    37dc:	30 e0       	ldi	r19, 0x00	; 0
    37de:	4a ef       	ldi	r20, 0xFA	; 250
    37e0:	54 e4       	ldi	r21, 0x44	; 68
    37e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    37e6:	dc 01       	movw	r26, r24
    37e8:	cb 01       	movw	r24, r22
    37ea:	f8 01       	movw	r30, r16
    37ec:	80 83       	st	Z, r24
    37ee:	91 83       	std	Z+1, r25	; 0x01
    37f0:	a2 83       	std	Z+2, r26	; 0x02
    37f2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    37f4:	fe 01       	movw	r30, r28
    37f6:	ef 5e       	subi	r30, 0xEF	; 239
    37f8:	fe 4f       	sbci	r31, 0xFE	; 254
    37fa:	60 81       	ld	r22, Z
    37fc:	71 81       	ldd	r23, Z+1	; 0x01
    37fe:	82 81       	ldd	r24, Z+2	; 0x02
    3800:	93 81       	ldd	r25, Z+3	; 0x03
    3802:	20 e0       	ldi	r18, 0x00	; 0
    3804:	30 e0       	ldi	r19, 0x00	; 0
    3806:	40 e8       	ldi	r20, 0x80	; 128
    3808:	5f e3       	ldi	r21, 0x3F	; 63
    380a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    380e:	88 23       	and	r24, r24
    3810:	44 f4       	brge	.+16     	; 0x3822 <main+0x1872>
		__ticks = 1;
    3812:	fe 01       	movw	r30, r28
    3814:	e1 5f       	subi	r30, 0xF1	; 241
    3816:	fe 4f       	sbci	r31, 0xFE	; 254
    3818:	81 e0       	ldi	r24, 0x01	; 1
    381a:	90 e0       	ldi	r25, 0x00	; 0
    381c:	91 83       	std	Z+1, r25	; 0x01
    381e:	80 83       	st	Z, r24
    3820:	64 c0       	rjmp	.+200    	; 0x38ea <main+0x193a>
	else if (__tmp > 65535)
    3822:	fe 01       	movw	r30, r28
    3824:	ef 5e       	subi	r30, 0xEF	; 239
    3826:	fe 4f       	sbci	r31, 0xFE	; 254
    3828:	60 81       	ld	r22, Z
    382a:	71 81       	ldd	r23, Z+1	; 0x01
    382c:	82 81       	ldd	r24, Z+2	; 0x02
    382e:	93 81       	ldd	r25, Z+3	; 0x03
    3830:	20 e0       	ldi	r18, 0x00	; 0
    3832:	3f ef       	ldi	r19, 0xFF	; 255
    3834:	4f e7       	ldi	r20, 0x7F	; 127
    3836:	57 e4       	ldi	r21, 0x47	; 71
    3838:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    383c:	18 16       	cp	r1, r24
    383e:	0c f0       	brlt	.+2      	; 0x3842 <main+0x1892>
    3840:	43 c0       	rjmp	.+134    	; 0x38c8 <main+0x1918>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3842:	fe 01       	movw	r30, r28
    3844:	eb 5e       	subi	r30, 0xEB	; 235
    3846:	fe 4f       	sbci	r31, 0xFE	; 254
    3848:	60 81       	ld	r22, Z
    384a:	71 81       	ldd	r23, Z+1	; 0x01
    384c:	82 81       	ldd	r24, Z+2	; 0x02
    384e:	93 81       	ldd	r25, Z+3	; 0x03
    3850:	20 e0       	ldi	r18, 0x00	; 0
    3852:	30 e0       	ldi	r19, 0x00	; 0
    3854:	40 e2       	ldi	r20, 0x20	; 32
    3856:	51 e4       	ldi	r21, 0x41	; 65
    3858:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    385c:	dc 01       	movw	r26, r24
    385e:	cb 01       	movw	r24, r22
    3860:	8e 01       	movw	r16, r28
    3862:	01 5f       	subi	r16, 0xF1	; 241
    3864:	1e 4f       	sbci	r17, 0xFE	; 254
    3866:	bc 01       	movw	r22, r24
    3868:	cd 01       	movw	r24, r26
    386a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    386e:	dc 01       	movw	r26, r24
    3870:	cb 01       	movw	r24, r22
    3872:	f8 01       	movw	r30, r16
    3874:	91 83       	std	Z+1, r25	; 0x01
    3876:	80 83       	st	Z, r24
    3878:	1f c0       	rjmp	.+62     	; 0x38b8 <main+0x1908>
    387a:	fe 01       	movw	r30, r28
    387c:	e3 5f       	subi	r30, 0xF3	; 243
    387e:	fe 4f       	sbci	r31, 0xFE	; 254
    3880:	88 ec       	ldi	r24, 0xC8	; 200
    3882:	90 e0       	ldi	r25, 0x00	; 0
    3884:	91 83       	std	Z+1, r25	; 0x01
    3886:	80 83       	st	Z, r24
    3888:	fe 01       	movw	r30, r28
    388a:	e3 5f       	subi	r30, 0xF3	; 243
    388c:	fe 4f       	sbci	r31, 0xFE	; 254
    388e:	80 81       	ld	r24, Z
    3890:	91 81       	ldd	r25, Z+1	; 0x01
    3892:	01 97       	sbiw	r24, 0x01	; 1
    3894:	f1 f7       	brne	.-4      	; 0x3892 <main+0x18e2>
    3896:	fe 01       	movw	r30, r28
    3898:	e3 5f       	subi	r30, 0xF3	; 243
    389a:	fe 4f       	sbci	r31, 0xFE	; 254
    389c:	91 83       	std	Z+1, r25	; 0x01
    389e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38a0:	de 01       	movw	r26, r28
    38a2:	a1 5f       	subi	r26, 0xF1	; 241
    38a4:	be 4f       	sbci	r27, 0xFE	; 254
    38a6:	fe 01       	movw	r30, r28
    38a8:	e1 5f       	subi	r30, 0xF1	; 241
    38aa:	fe 4f       	sbci	r31, 0xFE	; 254
    38ac:	80 81       	ld	r24, Z
    38ae:	91 81       	ldd	r25, Z+1	; 0x01
    38b0:	01 97       	sbiw	r24, 0x01	; 1
    38b2:	11 96       	adiw	r26, 0x01	; 1
    38b4:	9c 93       	st	X, r25
    38b6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38b8:	fe 01       	movw	r30, r28
    38ba:	e1 5f       	subi	r30, 0xF1	; 241
    38bc:	fe 4f       	sbci	r31, 0xFE	; 254
    38be:	80 81       	ld	r24, Z
    38c0:	91 81       	ldd	r25, Z+1	; 0x01
    38c2:	00 97       	sbiw	r24, 0x00	; 0
    38c4:	d1 f6       	brne	.-76     	; 0x387a <main+0x18ca>
    38c6:	27 c0       	rjmp	.+78     	; 0x3916 <main+0x1966>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38c8:	8e 01       	movw	r16, r28
    38ca:	01 5f       	subi	r16, 0xF1	; 241
    38cc:	1e 4f       	sbci	r17, 0xFE	; 254
    38ce:	fe 01       	movw	r30, r28
    38d0:	ef 5e       	subi	r30, 0xEF	; 239
    38d2:	fe 4f       	sbci	r31, 0xFE	; 254
    38d4:	60 81       	ld	r22, Z
    38d6:	71 81       	ldd	r23, Z+1	; 0x01
    38d8:	82 81       	ldd	r24, Z+2	; 0x02
    38da:	93 81       	ldd	r25, Z+3	; 0x03
    38dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38e0:	dc 01       	movw	r26, r24
    38e2:	cb 01       	movw	r24, r22
    38e4:	f8 01       	movw	r30, r16
    38e6:	91 83       	std	Z+1, r25	; 0x01
    38e8:	80 83       	st	Z, r24
    38ea:	de 01       	movw	r26, r28
    38ec:	a5 5f       	subi	r26, 0xF5	; 245
    38ee:	be 4f       	sbci	r27, 0xFE	; 254
    38f0:	fe 01       	movw	r30, r28
    38f2:	e1 5f       	subi	r30, 0xF1	; 241
    38f4:	fe 4f       	sbci	r31, 0xFE	; 254
    38f6:	80 81       	ld	r24, Z
    38f8:	91 81       	ldd	r25, Z+1	; 0x01
    38fa:	8d 93       	st	X+, r24
    38fc:	9c 93       	st	X, r25
    38fe:	fe 01       	movw	r30, r28
    3900:	e5 5f       	subi	r30, 0xF5	; 245
    3902:	fe 4f       	sbci	r31, 0xFE	; 254
    3904:	80 81       	ld	r24, Z
    3906:	91 81       	ldd	r25, Z+1	; 0x01
    3908:	01 97       	sbiw	r24, 0x01	; 1
    390a:	f1 f7       	brne	.-4      	; 0x3908 <main+0x1958>
    390c:	fe 01       	movw	r30, r28
    390e:	e5 5f       	subi	r30, 0xF5	; 245
    3910:	fe 4f       	sbci	r31, 0xFE	; 254
    3912:	91 83       	std	Z+1, r25	; 0x01
    3914:	80 83       	st	Z, r24
					{
						_delay_ms(150);
						Local_M_2=0;
    3916:	fe 01       	movw	r30, r28
    3918:	ed 53       	subi	r30, 0x3D	; 61
    391a:	fe 4f       	sbci	r31, 0xFE	; 254
    391c:	10 82       	st	Z, r1
						CLCD_voidGoToXY(0,4);
    391e:	80 e0       	ldi	r24, 0x00	; 0
    3920:	64 e0       	ldi	r22, 0x04	; 4
    3922:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_M_2);
    3926:	fe 01       	movw	r30, r28
    3928:	ed 53       	subi	r30, 0x3D	; 61
    392a:	fe 4f       	sbci	r31, 0xFE	; 254
    392c:	80 81       	ld	r24, Z
    392e:	88 2f       	mov	r24, r24
    3930:	90 e0       	ldi	r25, 0x00	; 0
    3932:	a0 e0       	ldi	r26, 0x00	; 0
    3934:	b0 e0       	ldi	r27, 0x00	; 0
    3936:	bc 01       	movw	r22, r24
    3938:	cd 01       	movw	r24, r26
    393a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    393e:	dc 01       	movw	r26, r24
    3940:	cb 01       	movw	r24, r22
    3942:	bc 01       	movw	r22, r24
    3944:	cd 01       	movw	r24, r26
    3946:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    394a:	82 c2       	rjmp	.+1284   	; 0x3e50 <main+0x1ea0>
    394c:	fe 01       	movw	r30, r28
    394e:	e9 5f       	subi	r30, 0xF9	; 249
    3950:	fe 4f       	sbci	r31, 0xFE	; 254
    3952:	80 e0       	ldi	r24, 0x00	; 0
    3954:	90 e0       	ldi	r25, 0x00	; 0
    3956:	a6 e1       	ldi	r26, 0x16	; 22
    3958:	b3 e4       	ldi	r27, 0x43	; 67
    395a:	80 83       	st	Z, r24
    395c:	91 83       	std	Z+1, r25	; 0x01
    395e:	a2 83       	std	Z+2, r26	; 0x02
    3960:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3962:	8e 01       	movw	r16, r28
    3964:	0d 5f       	subi	r16, 0xFD	; 253
    3966:	1e 4f       	sbci	r17, 0xFE	; 254
    3968:	fe 01       	movw	r30, r28
    396a:	e9 5f       	subi	r30, 0xF9	; 249
    396c:	fe 4f       	sbci	r31, 0xFE	; 254
    396e:	60 81       	ld	r22, Z
    3970:	71 81       	ldd	r23, Z+1	; 0x01
    3972:	82 81       	ldd	r24, Z+2	; 0x02
    3974:	93 81       	ldd	r25, Z+3	; 0x03
    3976:	20 e0       	ldi	r18, 0x00	; 0
    3978:	30 e0       	ldi	r19, 0x00	; 0
    397a:	4a ef       	ldi	r20, 0xFA	; 250
    397c:	54 e4       	ldi	r21, 0x44	; 68
    397e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3982:	dc 01       	movw	r26, r24
    3984:	cb 01       	movw	r24, r22
    3986:	f8 01       	movw	r30, r16
    3988:	80 83       	st	Z, r24
    398a:	91 83       	std	Z+1, r25	; 0x01
    398c:	a2 83       	std	Z+2, r26	; 0x02
    398e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3990:	fe 01       	movw	r30, r28
    3992:	ed 5f       	subi	r30, 0xFD	; 253
    3994:	fe 4f       	sbci	r31, 0xFE	; 254
    3996:	60 81       	ld	r22, Z
    3998:	71 81       	ldd	r23, Z+1	; 0x01
    399a:	82 81       	ldd	r24, Z+2	; 0x02
    399c:	93 81       	ldd	r25, Z+3	; 0x03
    399e:	20 e0       	ldi	r18, 0x00	; 0
    39a0:	30 e0       	ldi	r19, 0x00	; 0
    39a2:	40 e8       	ldi	r20, 0x80	; 128
    39a4:	5f e3       	ldi	r21, 0x3F	; 63
    39a6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    39aa:	88 23       	and	r24, r24
    39ac:	44 f4       	brge	.+16     	; 0x39be <main+0x1a0e>
		__ticks = 1;
    39ae:	fe 01       	movw	r30, r28
    39b0:	ef 5f       	subi	r30, 0xFF	; 255
    39b2:	fe 4f       	sbci	r31, 0xFE	; 254
    39b4:	81 e0       	ldi	r24, 0x01	; 1
    39b6:	90 e0       	ldi	r25, 0x00	; 0
    39b8:	91 83       	std	Z+1, r25	; 0x01
    39ba:	80 83       	st	Z, r24
    39bc:	64 c0       	rjmp	.+200    	; 0x3a86 <main+0x1ad6>
	else if (__tmp > 65535)
    39be:	fe 01       	movw	r30, r28
    39c0:	ed 5f       	subi	r30, 0xFD	; 253
    39c2:	fe 4f       	sbci	r31, 0xFE	; 254
    39c4:	60 81       	ld	r22, Z
    39c6:	71 81       	ldd	r23, Z+1	; 0x01
    39c8:	82 81       	ldd	r24, Z+2	; 0x02
    39ca:	93 81       	ldd	r25, Z+3	; 0x03
    39cc:	20 e0       	ldi	r18, 0x00	; 0
    39ce:	3f ef       	ldi	r19, 0xFF	; 255
    39d0:	4f e7       	ldi	r20, 0x7F	; 127
    39d2:	57 e4       	ldi	r21, 0x47	; 71
    39d4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    39d8:	18 16       	cp	r1, r24
    39da:	0c f0       	brlt	.+2      	; 0x39de <main+0x1a2e>
    39dc:	43 c0       	rjmp	.+134    	; 0x3a64 <main+0x1ab4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    39de:	fe 01       	movw	r30, r28
    39e0:	e9 5f       	subi	r30, 0xF9	; 249
    39e2:	fe 4f       	sbci	r31, 0xFE	; 254
    39e4:	60 81       	ld	r22, Z
    39e6:	71 81       	ldd	r23, Z+1	; 0x01
    39e8:	82 81       	ldd	r24, Z+2	; 0x02
    39ea:	93 81       	ldd	r25, Z+3	; 0x03
    39ec:	20 e0       	ldi	r18, 0x00	; 0
    39ee:	30 e0       	ldi	r19, 0x00	; 0
    39f0:	40 e2       	ldi	r20, 0x20	; 32
    39f2:	51 e4       	ldi	r21, 0x41	; 65
    39f4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    39f8:	dc 01       	movw	r26, r24
    39fa:	cb 01       	movw	r24, r22
    39fc:	8e 01       	movw	r16, r28
    39fe:	0f 5f       	subi	r16, 0xFF	; 255
    3a00:	1e 4f       	sbci	r17, 0xFE	; 254
    3a02:	bc 01       	movw	r22, r24
    3a04:	cd 01       	movw	r24, r26
    3a06:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a0a:	dc 01       	movw	r26, r24
    3a0c:	cb 01       	movw	r24, r22
    3a0e:	f8 01       	movw	r30, r16
    3a10:	91 83       	std	Z+1, r25	; 0x01
    3a12:	80 83       	st	Z, r24
    3a14:	1f c0       	rjmp	.+62     	; 0x3a54 <main+0x1aa4>
    3a16:	fe 01       	movw	r30, r28
    3a18:	e1 50       	subi	r30, 0x01	; 1
    3a1a:	ff 4f       	sbci	r31, 0xFF	; 255
    3a1c:	88 ec       	ldi	r24, 0xC8	; 200
    3a1e:	90 e0       	ldi	r25, 0x00	; 0
    3a20:	91 83       	std	Z+1, r25	; 0x01
    3a22:	80 83       	st	Z, r24
    3a24:	fe 01       	movw	r30, r28
    3a26:	e1 50       	subi	r30, 0x01	; 1
    3a28:	ff 4f       	sbci	r31, 0xFF	; 255
    3a2a:	80 81       	ld	r24, Z
    3a2c:	91 81       	ldd	r25, Z+1	; 0x01
    3a2e:	01 97       	sbiw	r24, 0x01	; 1
    3a30:	f1 f7       	brne	.-4      	; 0x3a2e <main+0x1a7e>
    3a32:	fe 01       	movw	r30, r28
    3a34:	e1 50       	subi	r30, 0x01	; 1
    3a36:	ff 4f       	sbci	r31, 0xFF	; 255
    3a38:	91 83       	std	Z+1, r25	; 0x01
    3a3a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a3c:	de 01       	movw	r26, r28
    3a3e:	af 5f       	subi	r26, 0xFF	; 255
    3a40:	be 4f       	sbci	r27, 0xFE	; 254
    3a42:	fe 01       	movw	r30, r28
    3a44:	ef 5f       	subi	r30, 0xFF	; 255
    3a46:	fe 4f       	sbci	r31, 0xFE	; 254
    3a48:	80 81       	ld	r24, Z
    3a4a:	91 81       	ldd	r25, Z+1	; 0x01
    3a4c:	01 97       	sbiw	r24, 0x01	; 1
    3a4e:	11 96       	adiw	r26, 0x01	; 1
    3a50:	9c 93       	st	X, r25
    3a52:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a54:	fe 01       	movw	r30, r28
    3a56:	ef 5f       	subi	r30, 0xFF	; 255
    3a58:	fe 4f       	sbci	r31, 0xFE	; 254
    3a5a:	80 81       	ld	r24, Z
    3a5c:	91 81       	ldd	r25, Z+1	; 0x01
    3a5e:	00 97       	sbiw	r24, 0x00	; 0
    3a60:	d1 f6       	brne	.-76     	; 0x3a16 <main+0x1a66>
    3a62:	27 c0       	rjmp	.+78     	; 0x3ab2 <main+0x1b02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a64:	8e 01       	movw	r16, r28
    3a66:	0f 5f       	subi	r16, 0xFF	; 255
    3a68:	1e 4f       	sbci	r17, 0xFE	; 254
    3a6a:	fe 01       	movw	r30, r28
    3a6c:	ed 5f       	subi	r30, 0xFD	; 253
    3a6e:	fe 4f       	sbci	r31, 0xFE	; 254
    3a70:	60 81       	ld	r22, Z
    3a72:	71 81       	ldd	r23, Z+1	; 0x01
    3a74:	82 81       	ldd	r24, Z+2	; 0x02
    3a76:	93 81       	ldd	r25, Z+3	; 0x03
    3a78:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a7c:	dc 01       	movw	r26, r24
    3a7e:	cb 01       	movw	r24, r22
    3a80:	f8 01       	movw	r30, r16
    3a82:	91 83       	std	Z+1, r25	; 0x01
    3a84:	80 83       	st	Z, r24
    3a86:	de 01       	movw	r26, r28
    3a88:	a3 50       	subi	r26, 0x03	; 3
    3a8a:	bf 4f       	sbci	r27, 0xFF	; 255
    3a8c:	fe 01       	movw	r30, r28
    3a8e:	ef 5f       	subi	r30, 0xFF	; 255
    3a90:	fe 4f       	sbci	r31, 0xFE	; 254
    3a92:	80 81       	ld	r24, Z
    3a94:	91 81       	ldd	r25, Z+1	; 0x01
    3a96:	8d 93       	st	X+, r24
    3a98:	9c 93       	st	X, r25
    3a9a:	fe 01       	movw	r30, r28
    3a9c:	e3 50       	subi	r30, 0x03	; 3
    3a9e:	ff 4f       	sbci	r31, 0xFF	; 255
    3aa0:	80 81       	ld	r24, Z
    3aa2:	91 81       	ldd	r25, Z+1	; 0x01
    3aa4:	01 97       	sbiw	r24, 0x01	; 1
    3aa6:	f1 f7       	brne	.-4      	; 0x3aa4 <main+0x1af4>
    3aa8:	fe 01       	movw	r30, r28
    3aaa:	e3 50       	subi	r30, 0x03	; 3
    3aac:	ff 4f       	sbci	r31, 0xFF	; 255
    3aae:	91 83       	std	Z+1, r25	; 0x01
    3ab0:	80 83       	st	Z, r24
					}
					else
					{
						_delay_ms(150);
						Local_M_2++;
    3ab2:	de 01       	movw	r26, r28
    3ab4:	ad 53       	subi	r26, 0x3D	; 61
    3ab6:	be 4f       	sbci	r27, 0xFE	; 254
    3ab8:	fe 01       	movw	r30, r28
    3aba:	ed 53       	subi	r30, 0x3D	; 61
    3abc:	fe 4f       	sbci	r31, 0xFE	; 254
    3abe:	80 81       	ld	r24, Z
    3ac0:	8f 5f       	subi	r24, 0xFF	; 255
    3ac2:	8c 93       	st	X, r24

						CLCD_voidGoToXY(0,4);
    3ac4:	80 e0       	ldi	r24, 0x00	; 0
    3ac6:	64 e0       	ldi	r22, 0x04	; 4
    3ac8:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_M_2);
    3acc:	fe 01       	movw	r30, r28
    3ace:	ed 53       	subi	r30, 0x3D	; 61
    3ad0:	fe 4f       	sbci	r31, 0xFE	; 254
    3ad2:	80 81       	ld	r24, Z
    3ad4:	88 2f       	mov	r24, r24
    3ad6:	90 e0       	ldi	r25, 0x00	; 0
    3ad8:	a0 e0       	ldi	r26, 0x00	; 0
    3ada:	b0 e0       	ldi	r27, 0x00	; 0
    3adc:	bc 01       	movw	r22, r24
    3ade:	cd 01       	movw	r24, r26
    3ae0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    3ae4:	dc 01       	movw	r26, r24
    3ae6:	cb 01       	movw	r24, r22
    3ae8:	bc 01       	movw	r22, r24
    3aea:	cd 01       	movw	r24, r26
    3aec:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    3af0:	af c1       	rjmp	.+862    	; 0x3e50 <main+0x1ea0>
					}


				}
				else if (PB_u8GetState(DIO_u8PORTD,DIO_u8PIN3)==1)
    3af2:	83 e0       	ldi	r24, 0x03	; 3
    3af4:	63 e0       	ldi	r22, 0x03	; 3
    3af6:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    3afa:	81 30       	cpi	r24, 0x01	; 1
    3afc:	09 f0       	breq	.+2      	; 0x3b00 <main+0x1b50>
    3afe:	a8 c1       	rjmp	.+848    	; 0x3e50 <main+0x1ea0>
				{
					if (Local_M_2<=0)
    3b00:	fe 01       	movw	r30, r28
    3b02:	ed 53       	subi	r30, 0x3D	; 61
    3b04:	fe 4f       	sbci	r31, 0xFE	; 254
    3b06:	80 81       	ld	r24, Z
    3b08:	88 23       	and	r24, r24
    3b0a:	09 f0       	breq	.+2      	; 0x3b0e <main+0x1b5e>
    3b0c:	cf c0       	rjmp	.+414    	; 0x3cac <main+0x1cfc>
    3b0e:	fe 01       	movw	r30, r28
    3b10:	e7 50       	subi	r30, 0x07	; 7
    3b12:	ff 4f       	sbci	r31, 0xFF	; 255
    3b14:	80 e0       	ldi	r24, 0x00	; 0
    3b16:	90 e0       	ldi	r25, 0x00	; 0
    3b18:	a6 e1       	ldi	r26, 0x16	; 22
    3b1a:	b3 e4       	ldi	r27, 0x43	; 67
    3b1c:	80 83       	st	Z, r24
    3b1e:	91 83       	std	Z+1, r25	; 0x01
    3b20:	a2 83       	std	Z+2, r26	; 0x02
    3b22:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b24:	8e 01       	movw	r16, r28
    3b26:	0b 50       	subi	r16, 0x0B	; 11
    3b28:	1f 4f       	sbci	r17, 0xFF	; 255
    3b2a:	fe 01       	movw	r30, r28
    3b2c:	e7 50       	subi	r30, 0x07	; 7
    3b2e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b30:	60 81       	ld	r22, Z
    3b32:	71 81       	ldd	r23, Z+1	; 0x01
    3b34:	82 81       	ldd	r24, Z+2	; 0x02
    3b36:	93 81       	ldd	r25, Z+3	; 0x03
    3b38:	20 e0       	ldi	r18, 0x00	; 0
    3b3a:	30 e0       	ldi	r19, 0x00	; 0
    3b3c:	4a ef       	ldi	r20, 0xFA	; 250
    3b3e:	54 e4       	ldi	r21, 0x44	; 68
    3b40:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3b44:	dc 01       	movw	r26, r24
    3b46:	cb 01       	movw	r24, r22
    3b48:	f8 01       	movw	r30, r16
    3b4a:	80 83       	st	Z, r24
    3b4c:	91 83       	std	Z+1, r25	; 0x01
    3b4e:	a2 83       	std	Z+2, r26	; 0x02
    3b50:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3b52:	fe 01       	movw	r30, r28
    3b54:	eb 50       	subi	r30, 0x0B	; 11
    3b56:	ff 4f       	sbci	r31, 0xFF	; 255
    3b58:	60 81       	ld	r22, Z
    3b5a:	71 81       	ldd	r23, Z+1	; 0x01
    3b5c:	82 81       	ldd	r24, Z+2	; 0x02
    3b5e:	93 81       	ldd	r25, Z+3	; 0x03
    3b60:	20 e0       	ldi	r18, 0x00	; 0
    3b62:	30 e0       	ldi	r19, 0x00	; 0
    3b64:	40 e8       	ldi	r20, 0x80	; 128
    3b66:	5f e3       	ldi	r21, 0x3F	; 63
    3b68:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3b6c:	88 23       	and	r24, r24
    3b6e:	44 f4       	brge	.+16     	; 0x3b80 <main+0x1bd0>
		__ticks = 1;
    3b70:	fe 01       	movw	r30, r28
    3b72:	ed 50       	subi	r30, 0x0D	; 13
    3b74:	ff 4f       	sbci	r31, 0xFF	; 255
    3b76:	81 e0       	ldi	r24, 0x01	; 1
    3b78:	90 e0       	ldi	r25, 0x00	; 0
    3b7a:	91 83       	std	Z+1, r25	; 0x01
    3b7c:	80 83       	st	Z, r24
    3b7e:	64 c0       	rjmp	.+200    	; 0x3c48 <main+0x1c98>
	else if (__tmp > 65535)
    3b80:	fe 01       	movw	r30, r28
    3b82:	eb 50       	subi	r30, 0x0B	; 11
    3b84:	ff 4f       	sbci	r31, 0xFF	; 255
    3b86:	60 81       	ld	r22, Z
    3b88:	71 81       	ldd	r23, Z+1	; 0x01
    3b8a:	82 81       	ldd	r24, Z+2	; 0x02
    3b8c:	93 81       	ldd	r25, Z+3	; 0x03
    3b8e:	20 e0       	ldi	r18, 0x00	; 0
    3b90:	3f ef       	ldi	r19, 0xFF	; 255
    3b92:	4f e7       	ldi	r20, 0x7F	; 127
    3b94:	57 e4       	ldi	r21, 0x47	; 71
    3b96:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3b9a:	18 16       	cp	r1, r24
    3b9c:	0c f0       	brlt	.+2      	; 0x3ba0 <main+0x1bf0>
    3b9e:	43 c0       	rjmp	.+134    	; 0x3c26 <main+0x1c76>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3ba0:	fe 01       	movw	r30, r28
    3ba2:	e7 50       	subi	r30, 0x07	; 7
    3ba4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ba6:	60 81       	ld	r22, Z
    3ba8:	71 81       	ldd	r23, Z+1	; 0x01
    3baa:	82 81       	ldd	r24, Z+2	; 0x02
    3bac:	93 81       	ldd	r25, Z+3	; 0x03
    3bae:	20 e0       	ldi	r18, 0x00	; 0
    3bb0:	30 e0       	ldi	r19, 0x00	; 0
    3bb2:	40 e2       	ldi	r20, 0x20	; 32
    3bb4:	51 e4       	ldi	r21, 0x41	; 65
    3bb6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3bba:	dc 01       	movw	r26, r24
    3bbc:	cb 01       	movw	r24, r22
    3bbe:	8e 01       	movw	r16, r28
    3bc0:	0d 50       	subi	r16, 0x0D	; 13
    3bc2:	1f 4f       	sbci	r17, 0xFF	; 255
    3bc4:	bc 01       	movw	r22, r24
    3bc6:	cd 01       	movw	r24, r26
    3bc8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3bcc:	dc 01       	movw	r26, r24
    3bce:	cb 01       	movw	r24, r22
    3bd0:	f8 01       	movw	r30, r16
    3bd2:	91 83       	std	Z+1, r25	; 0x01
    3bd4:	80 83       	st	Z, r24
    3bd6:	1f c0       	rjmp	.+62     	; 0x3c16 <main+0x1c66>
    3bd8:	fe 01       	movw	r30, r28
    3bda:	ef 50       	subi	r30, 0x0F	; 15
    3bdc:	ff 4f       	sbci	r31, 0xFF	; 255
    3bde:	88 ec       	ldi	r24, 0xC8	; 200
    3be0:	90 e0       	ldi	r25, 0x00	; 0
    3be2:	91 83       	std	Z+1, r25	; 0x01
    3be4:	80 83       	st	Z, r24
    3be6:	fe 01       	movw	r30, r28
    3be8:	ef 50       	subi	r30, 0x0F	; 15
    3bea:	ff 4f       	sbci	r31, 0xFF	; 255
    3bec:	80 81       	ld	r24, Z
    3bee:	91 81       	ldd	r25, Z+1	; 0x01
    3bf0:	01 97       	sbiw	r24, 0x01	; 1
    3bf2:	f1 f7       	brne	.-4      	; 0x3bf0 <main+0x1c40>
    3bf4:	fe 01       	movw	r30, r28
    3bf6:	ef 50       	subi	r30, 0x0F	; 15
    3bf8:	ff 4f       	sbci	r31, 0xFF	; 255
    3bfa:	91 83       	std	Z+1, r25	; 0x01
    3bfc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3bfe:	de 01       	movw	r26, r28
    3c00:	ad 50       	subi	r26, 0x0D	; 13
    3c02:	bf 4f       	sbci	r27, 0xFF	; 255
    3c04:	fe 01       	movw	r30, r28
    3c06:	ed 50       	subi	r30, 0x0D	; 13
    3c08:	ff 4f       	sbci	r31, 0xFF	; 255
    3c0a:	80 81       	ld	r24, Z
    3c0c:	91 81       	ldd	r25, Z+1	; 0x01
    3c0e:	01 97       	sbiw	r24, 0x01	; 1
    3c10:	11 96       	adiw	r26, 0x01	; 1
    3c12:	9c 93       	st	X, r25
    3c14:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c16:	fe 01       	movw	r30, r28
    3c18:	ed 50       	subi	r30, 0x0D	; 13
    3c1a:	ff 4f       	sbci	r31, 0xFF	; 255
    3c1c:	80 81       	ld	r24, Z
    3c1e:	91 81       	ldd	r25, Z+1	; 0x01
    3c20:	00 97       	sbiw	r24, 0x00	; 0
    3c22:	d1 f6       	brne	.-76     	; 0x3bd8 <main+0x1c28>
    3c24:	27 c0       	rjmp	.+78     	; 0x3c74 <main+0x1cc4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c26:	8e 01       	movw	r16, r28
    3c28:	0d 50       	subi	r16, 0x0D	; 13
    3c2a:	1f 4f       	sbci	r17, 0xFF	; 255
    3c2c:	fe 01       	movw	r30, r28
    3c2e:	eb 50       	subi	r30, 0x0B	; 11
    3c30:	ff 4f       	sbci	r31, 0xFF	; 255
    3c32:	60 81       	ld	r22, Z
    3c34:	71 81       	ldd	r23, Z+1	; 0x01
    3c36:	82 81       	ldd	r24, Z+2	; 0x02
    3c38:	93 81       	ldd	r25, Z+3	; 0x03
    3c3a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3c3e:	dc 01       	movw	r26, r24
    3c40:	cb 01       	movw	r24, r22
    3c42:	f8 01       	movw	r30, r16
    3c44:	91 83       	std	Z+1, r25	; 0x01
    3c46:	80 83       	st	Z, r24
    3c48:	de 01       	movw	r26, r28
    3c4a:	a1 51       	subi	r26, 0x11	; 17
    3c4c:	bf 4f       	sbci	r27, 0xFF	; 255
    3c4e:	fe 01       	movw	r30, r28
    3c50:	ed 50       	subi	r30, 0x0D	; 13
    3c52:	ff 4f       	sbci	r31, 0xFF	; 255
    3c54:	80 81       	ld	r24, Z
    3c56:	91 81       	ldd	r25, Z+1	; 0x01
    3c58:	8d 93       	st	X+, r24
    3c5a:	9c 93       	st	X, r25
    3c5c:	fe 01       	movw	r30, r28
    3c5e:	e1 51       	subi	r30, 0x11	; 17
    3c60:	ff 4f       	sbci	r31, 0xFF	; 255
    3c62:	80 81       	ld	r24, Z
    3c64:	91 81       	ldd	r25, Z+1	; 0x01
    3c66:	01 97       	sbiw	r24, 0x01	; 1
    3c68:	f1 f7       	brne	.-4      	; 0x3c66 <main+0x1cb6>
    3c6a:	fe 01       	movw	r30, r28
    3c6c:	e1 51       	subi	r30, 0x11	; 17
    3c6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c70:	91 83       	std	Z+1, r25	; 0x01
    3c72:	80 83       	st	Z, r24
					{
						_delay_ms(150);
						Local_M_2=9;
    3c74:	fe 01       	movw	r30, r28
    3c76:	ed 53       	subi	r30, 0x3D	; 61
    3c78:	fe 4f       	sbci	r31, 0xFE	; 254
    3c7a:	89 e0       	ldi	r24, 0x09	; 9
    3c7c:	80 83       	st	Z, r24
						CLCD_voidGoToXY(0,4);
    3c7e:	80 e0       	ldi	r24, 0x00	; 0
    3c80:	64 e0       	ldi	r22, 0x04	; 4
    3c82:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_M_2);
    3c86:	fe 01       	movw	r30, r28
    3c88:	ed 53       	subi	r30, 0x3D	; 61
    3c8a:	fe 4f       	sbci	r31, 0xFE	; 254
    3c8c:	80 81       	ld	r24, Z
    3c8e:	88 2f       	mov	r24, r24
    3c90:	90 e0       	ldi	r25, 0x00	; 0
    3c92:	a0 e0       	ldi	r26, 0x00	; 0
    3c94:	b0 e0       	ldi	r27, 0x00	; 0
    3c96:	bc 01       	movw	r22, r24
    3c98:	cd 01       	movw	r24, r26
    3c9a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    3c9e:	dc 01       	movw	r26, r24
    3ca0:	cb 01       	movw	r24, r22
    3ca2:	bc 01       	movw	r22, r24
    3ca4:	cd 01       	movw	r24, r26
    3ca6:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    3caa:	d2 c0       	rjmp	.+420    	; 0x3e50 <main+0x1ea0>
    3cac:	fe 01       	movw	r30, r28
    3cae:	e5 51       	subi	r30, 0x15	; 21
    3cb0:	ff 4f       	sbci	r31, 0xFF	; 255
    3cb2:	80 e0       	ldi	r24, 0x00	; 0
    3cb4:	90 e0       	ldi	r25, 0x00	; 0
    3cb6:	a8 e4       	ldi	r26, 0x48	; 72
    3cb8:	b3 e4       	ldi	r27, 0x43	; 67
    3cba:	80 83       	st	Z, r24
    3cbc:	91 83       	std	Z+1, r25	; 0x01
    3cbe:	a2 83       	std	Z+2, r26	; 0x02
    3cc0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3cc2:	8e 01       	movw	r16, r28
    3cc4:	09 51       	subi	r16, 0x19	; 25
    3cc6:	1f 4f       	sbci	r17, 0xFF	; 255
    3cc8:	fe 01       	movw	r30, r28
    3cca:	e5 51       	subi	r30, 0x15	; 21
    3ccc:	ff 4f       	sbci	r31, 0xFF	; 255
    3cce:	60 81       	ld	r22, Z
    3cd0:	71 81       	ldd	r23, Z+1	; 0x01
    3cd2:	82 81       	ldd	r24, Z+2	; 0x02
    3cd4:	93 81       	ldd	r25, Z+3	; 0x03
    3cd6:	20 e0       	ldi	r18, 0x00	; 0
    3cd8:	30 e0       	ldi	r19, 0x00	; 0
    3cda:	4a ef       	ldi	r20, 0xFA	; 250
    3cdc:	54 e4       	ldi	r21, 0x44	; 68
    3cde:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3ce2:	dc 01       	movw	r26, r24
    3ce4:	cb 01       	movw	r24, r22
    3ce6:	f8 01       	movw	r30, r16
    3ce8:	80 83       	st	Z, r24
    3cea:	91 83       	std	Z+1, r25	; 0x01
    3cec:	a2 83       	std	Z+2, r26	; 0x02
    3cee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3cf0:	fe 01       	movw	r30, r28
    3cf2:	e9 51       	subi	r30, 0x19	; 25
    3cf4:	ff 4f       	sbci	r31, 0xFF	; 255
    3cf6:	60 81       	ld	r22, Z
    3cf8:	71 81       	ldd	r23, Z+1	; 0x01
    3cfa:	82 81       	ldd	r24, Z+2	; 0x02
    3cfc:	93 81       	ldd	r25, Z+3	; 0x03
    3cfe:	20 e0       	ldi	r18, 0x00	; 0
    3d00:	30 e0       	ldi	r19, 0x00	; 0
    3d02:	40 e8       	ldi	r20, 0x80	; 128
    3d04:	5f e3       	ldi	r21, 0x3F	; 63
    3d06:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3d0a:	88 23       	and	r24, r24
    3d0c:	44 f4       	brge	.+16     	; 0x3d1e <main+0x1d6e>
		__ticks = 1;
    3d0e:	fe 01       	movw	r30, r28
    3d10:	eb 51       	subi	r30, 0x1B	; 27
    3d12:	ff 4f       	sbci	r31, 0xFF	; 255
    3d14:	81 e0       	ldi	r24, 0x01	; 1
    3d16:	90 e0       	ldi	r25, 0x00	; 0
    3d18:	91 83       	std	Z+1, r25	; 0x01
    3d1a:	80 83       	st	Z, r24
    3d1c:	64 c0       	rjmp	.+200    	; 0x3de6 <main+0x1e36>
	else if (__tmp > 65535)
    3d1e:	fe 01       	movw	r30, r28
    3d20:	e9 51       	subi	r30, 0x19	; 25
    3d22:	ff 4f       	sbci	r31, 0xFF	; 255
    3d24:	60 81       	ld	r22, Z
    3d26:	71 81       	ldd	r23, Z+1	; 0x01
    3d28:	82 81       	ldd	r24, Z+2	; 0x02
    3d2a:	93 81       	ldd	r25, Z+3	; 0x03
    3d2c:	20 e0       	ldi	r18, 0x00	; 0
    3d2e:	3f ef       	ldi	r19, 0xFF	; 255
    3d30:	4f e7       	ldi	r20, 0x7F	; 127
    3d32:	57 e4       	ldi	r21, 0x47	; 71
    3d34:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3d38:	18 16       	cp	r1, r24
    3d3a:	0c f0       	brlt	.+2      	; 0x3d3e <main+0x1d8e>
    3d3c:	43 c0       	rjmp	.+134    	; 0x3dc4 <main+0x1e14>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d3e:	fe 01       	movw	r30, r28
    3d40:	e5 51       	subi	r30, 0x15	; 21
    3d42:	ff 4f       	sbci	r31, 0xFF	; 255
    3d44:	60 81       	ld	r22, Z
    3d46:	71 81       	ldd	r23, Z+1	; 0x01
    3d48:	82 81       	ldd	r24, Z+2	; 0x02
    3d4a:	93 81       	ldd	r25, Z+3	; 0x03
    3d4c:	20 e0       	ldi	r18, 0x00	; 0
    3d4e:	30 e0       	ldi	r19, 0x00	; 0
    3d50:	40 e2       	ldi	r20, 0x20	; 32
    3d52:	51 e4       	ldi	r21, 0x41	; 65
    3d54:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d58:	dc 01       	movw	r26, r24
    3d5a:	cb 01       	movw	r24, r22
    3d5c:	8e 01       	movw	r16, r28
    3d5e:	0b 51       	subi	r16, 0x1B	; 27
    3d60:	1f 4f       	sbci	r17, 0xFF	; 255
    3d62:	bc 01       	movw	r22, r24
    3d64:	cd 01       	movw	r24, r26
    3d66:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d6a:	dc 01       	movw	r26, r24
    3d6c:	cb 01       	movw	r24, r22
    3d6e:	f8 01       	movw	r30, r16
    3d70:	91 83       	std	Z+1, r25	; 0x01
    3d72:	80 83       	st	Z, r24
    3d74:	1f c0       	rjmp	.+62     	; 0x3db4 <main+0x1e04>
    3d76:	fe 01       	movw	r30, r28
    3d78:	ed 51       	subi	r30, 0x1D	; 29
    3d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d7c:	88 ec       	ldi	r24, 0xC8	; 200
    3d7e:	90 e0       	ldi	r25, 0x00	; 0
    3d80:	91 83       	std	Z+1, r25	; 0x01
    3d82:	80 83       	st	Z, r24
    3d84:	fe 01       	movw	r30, r28
    3d86:	ed 51       	subi	r30, 0x1D	; 29
    3d88:	ff 4f       	sbci	r31, 0xFF	; 255
    3d8a:	80 81       	ld	r24, Z
    3d8c:	91 81       	ldd	r25, Z+1	; 0x01
    3d8e:	01 97       	sbiw	r24, 0x01	; 1
    3d90:	f1 f7       	brne	.-4      	; 0x3d8e <main+0x1dde>
    3d92:	fe 01       	movw	r30, r28
    3d94:	ed 51       	subi	r30, 0x1D	; 29
    3d96:	ff 4f       	sbci	r31, 0xFF	; 255
    3d98:	91 83       	std	Z+1, r25	; 0x01
    3d9a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3d9c:	de 01       	movw	r26, r28
    3d9e:	ab 51       	subi	r26, 0x1B	; 27
    3da0:	bf 4f       	sbci	r27, 0xFF	; 255
    3da2:	fe 01       	movw	r30, r28
    3da4:	eb 51       	subi	r30, 0x1B	; 27
    3da6:	ff 4f       	sbci	r31, 0xFF	; 255
    3da8:	80 81       	ld	r24, Z
    3daa:	91 81       	ldd	r25, Z+1	; 0x01
    3dac:	01 97       	sbiw	r24, 0x01	; 1
    3dae:	11 96       	adiw	r26, 0x01	; 1
    3db0:	9c 93       	st	X, r25
    3db2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3db4:	fe 01       	movw	r30, r28
    3db6:	eb 51       	subi	r30, 0x1B	; 27
    3db8:	ff 4f       	sbci	r31, 0xFF	; 255
    3dba:	80 81       	ld	r24, Z
    3dbc:	91 81       	ldd	r25, Z+1	; 0x01
    3dbe:	00 97       	sbiw	r24, 0x00	; 0
    3dc0:	d1 f6       	brne	.-76     	; 0x3d76 <main+0x1dc6>
    3dc2:	27 c0       	rjmp	.+78     	; 0x3e12 <main+0x1e62>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3dc4:	8e 01       	movw	r16, r28
    3dc6:	0b 51       	subi	r16, 0x1B	; 27
    3dc8:	1f 4f       	sbci	r17, 0xFF	; 255
    3dca:	fe 01       	movw	r30, r28
    3dcc:	e9 51       	subi	r30, 0x19	; 25
    3dce:	ff 4f       	sbci	r31, 0xFF	; 255
    3dd0:	60 81       	ld	r22, Z
    3dd2:	71 81       	ldd	r23, Z+1	; 0x01
    3dd4:	82 81       	ldd	r24, Z+2	; 0x02
    3dd6:	93 81       	ldd	r25, Z+3	; 0x03
    3dd8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ddc:	dc 01       	movw	r26, r24
    3dde:	cb 01       	movw	r24, r22
    3de0:	f8 01       	movw	r30, r16
    3de2:	91 83       	std	Z+1, r25	; 0x01
    3de4:	80 83       	st	Z, r24
    3de6:	de 01       	movw	r26, r28
    3de8:	af 51       	subi	r26, 0x1F	; 31
    3dea:	bf 4f       	sbci	r27, 0xFF	; 255
    3dec:	fe 01       	movw	r30, r28
    3dee:	eb 51       	subi	r30, 0x1B	; 27
    3df0:	ff 4f       	sbci	r31, 0xFF	; 255
    3df2:	80 81       	ld	r24, Z
    3df4:	91 81       	ldd	r25, Z+1	; 0x01
    3df6:	8d 93       	st	X+, r24
    3df8:	9c 93       	st	X, r25
    3dfa:	fe 01       	movw	r30, r28
    3dfc:	ef 51       	subi	r30, 0x1F	; 31
    3dfe:	ff 4f       	sbci	r31, 0xFF	; 255
    3e00:	80 81       	ld	r24, Z
    3e02:	91 81       	ldd	r25, Z+1	; 0x01
    3e04:	01 97       	sbiw	r24, 0x01	; 1
    3e06:	f1 f7       	brne	.-4      	; 0x3e04 <main+0x1e54>
    3e08:	fe 01       	movw	r30, r28
    3e0a:	ef 51       	subi	r30, 0x1F	; 31
    3e0c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e0e:	91 83       	std	Z+1, r25	; 0x01
    3e10:	80 83       	st	Z, r24
					}
					else
					{
						_delay_ms(200);

						Local_M_2--;
    3e12:	de 01       	movw	r26, r28
    3e14:	ad 53       	subi	r26, 0x3D	; 61
    3e16:	be 4f       	sbci	r27, 0xFE	; 254
    3e18:	fe 01       	movw	r30, r28
    3e1a:	ed 53       	subi	r30, 0x3D	; 61
    3e1c:	fe 4f       	sbci	r31, 0xFE	; 254
    3e1e:	80 81       	ld	r24, Z
    3e20:	81 50       	subi	r24, 0x01	; 1
    3e22:	8c 93       	st	X, r24
						CLCD_voidGoToXY(0,4);
    3e24:	80 e0       	ldi	r24, 0x00	; 0
    3e26:	64 e0       	ldi	r22, 0x04	; 4
    3e28:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>

						CLCD_VoidWriteNumber(Local_M_2);
    3e2c:	fe 01       	movw	r30, r28
    3e2e:	ed 53       	subi	r30, 0x3D	; 61
    3e30:	fe 4f       	sbci	r31, 0xFE	; 254
    3e32:	80 81       	ld	r24, Z
    3e34:	88 2f       	mov	r24, r24
    3e36:	90 e0       	ldi	r25, 0x00	; 0
    3e38:	a0 e0       	ldi	r26, 0x00	; 0
    3e3a:	b0 e0       	ldi	r27, 0x00	; 0
    3e3c:	bc 01       	movw	r22, r24
    3e3e:	cd 01       	movw	r24, r26
    3e40:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    3e44:	dc 01       	movw	r26, r24
    3e46:	cb 01       	movw	r24, r22
    3e48:	bc 01       	movw	r22, r24
    3e4a:	cd 01       	movw	r24, r26
    3e4c:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
					}

				}

			}
			while(PB_u8GetState(DIO_u8PORTD,DIO_u8PIN4)!=1);
    3e50:	83 e0       	ldi	r24, 0x03	; 3
    3e52:	64 e0       	ldi	r22, 0x04	; 4
    3e54:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    3e58:	81 30       	cpi	r24, 0x01	; 1
    3e5a:	09 f0       	breq	.+2      	; 0x3e5e <main+0x1eae>
    3e5c:	9b cc       	rjmp	.-1738   	; 0x3794 <main+0x17e4>

			CLCD_voidGoToXY(1,4);
    3e5e:	81 e0       	ldi	r24, 0x01	; 1
    3e60:	64 e0       	ldi	r22, 0x04	; 4
    3e62:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
			CLCD_voidSendData(' ');
    3e66:	80 e2       	ldi	r24, 0x20	; 32
    3e68:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <CLCD_voidSendData>
			CLCD_voidWriteSpecialCharacter(arrow,1,1,6);
    3e6c:	ce 01       	movw	r24, r28
    3e6e:	89 53       	subi	r24, 0x39	; 57
    3e70:	9e 4f       	sbci	r25, 0xFE	; 254
    3e72:	61 e0       	ldi	r22, 0x01	; 1
    3e74:	41 e0       	ldi	r20, 0x01	; 1
    3e76:	26 e0       	ldi	r18, 0x06	; 6
    3e78:	0e 94 77 0b 	call	0x16ee	; 0x16ee <CLCD_voidWriteSpecialCharacter>

			/**************************** Second ****************************/

			do
			{
				if (PB_u8GetState(DIO_u8PORTD,DIO_u8PIN2)==1)
    3e7c:	83 e0       	ldi	r24, 0x03	; 3
    3e7e:	62 e0       	ldi	r22, 0x02	; 2
    3e80:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    3e84:	81 30       	cpi	r24, 0x01	; 1
    3e86:	09 f0       	breq	.+2      	; 0x3e8a <main+0x1eda>
    3e88:	a8 c1       	rjmp	.+848    	; 0x41da <main+0x222a>
				{
					if (Local_S_1>=9)
    3e8a:	fe 01       	movw	r30, r28
    3e8c:	ee 53       	subi	r30, 0x3E	; 62
    3e8e:	fe 4f       	sbci	r31, 0xFE	; 254
    3e90:	80 81       	ld	r24, Z
    3e92:	89 30       	cpi	r24, 0x09	; 9
    3e94:	08 f4       	brcc	.+2      	; 0x3e98 <main+0x1ee8>
    3e96:	ce c0       	rjmp	.+412    	; 0x4034 <main+0x2084>
    3e98:	fe 01       	movw	r30, r28
    3e9a:	e3 52       	subi	r30, 0x23	; 35
    3e9c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e9e:	80 e0       	ldi	r24, 0x00	; 0
    3ea0:	90 e0       	ldi	r25, 0x00	; 0
    3ea2:	a6 e1       	ldi	r26, 0x16	; 22
    3ea4:	b3 e4       	ldi	r27, 0x43	; 67
    3ea6:	80 83       	st	Z, r24
    3ea8:	91 83       	std	Z+1, r25	; 0x01
    3eaa:	a2 83       	std	Z+2, r26	; 0x02
    3eac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3eae:	8e 01       	movw	r16, r28
    3eb0:	07 52       	subi	r16, 0x27	; 39
    3eb2:	1f 4f       	sbci	r17, 0xFF	; 255
    3eb4:	fe 01       	movw	r30, r28
    3eb6:	e3 52       	subi	r30, 0x23	; 35
    3eb8:	ff 4f       	sbci	r31, 0xFF	; 255
    3eba:	60 81       	ld	r22, Z
    3ebc:	71 81       	ldd	r23, Z+1	; 0x01
    3ebe:	82 81       	ldd	r24, Z+2	; 0x02
    3ec0:	93 81       	ldd	r25, Z+3	; 0x03
    3ec2:	20 e0       	ldi	r18, 0x00	; 0
    3ec4:	30 e0       	ldi	r19, 0x00	; 0
    3ec6:	4a ef       	ldi	r20, 0xFA	; 250
    3ec8:	54 e4       	ldi	r21, 0x44	; 68
    3eca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3ece:	dc 01       	movw	r26, r24
    3ed0:	cb 01       	movw	r24, r22
    3ed2:	f8 01       	movw	r30, r16
    3ed4:	80 83       	st	Z, r24
    3ed6:	91 83       	std	Z+1, r25	; 0x01
    3ed8:	a2 83       	std	Z+2, r26	; 0x02
    3eda:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3edc:	fe 01       	movw	r30, r28
    3ede:	e7 52       	subi	r30, 0x27	; 39
    3ee0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ee2:	60 81       	ld	r22, Z
    3ee4:	71 81       	ldd	r23, Z+1	; 0x01
    3ee6:	82 81       	ldd	r24, Z+2	; 0x02
    3ee8:	93 81       	ldd	r25, Z+3	; 0x03
    3eea:	20 e0       	ldi	r18, 0x00	; 0
    3eec:	30 e0       	ldi	r19, 0x00	; 0
    3eee:	40 e8       	ldi	r20, 0x80	; 128
    3ef0:	5f e3       	ldi	r21, 0x3F	; 63
    3ef2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3ef6:	88 23       	and	r24, r24
    3ef8:	44 f4       	brge	.+16     	; 0x3f0a <main+0x1f5a>
		__ticks = 1;
    3efa:	fe 01       	movw	r30, r28
    3efc:	e9 52       	subi	r30, 0x29	; 41
    3efe:	ff 4f       	sbci	r31, 0xFF	; 255
    3f00:	81 e0       	ldi	r24, 0x01	; 1
    3f02:	90 e0       	ldi	r25, 0x00	; 0
    3f04:	91 83       	std	Z+1, r25	; 0x01
    3f06:	80 83       	st	Z, r24
    3f08:	64 c0       	rjmp	.+200    	; 0x3fd2 <main+0x2022>
	else if (__tmp > 65535)
    3f0a:	fe 01       	movw	r30, r28
    3f0c:	e7 52       	subi	r30, 0x27	; 39
    3f0e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f10:	60 81       	ld	r22, Z
    3f12:	71 81       	ldd	r23, Z+1	; 0x01
    3f14:	82 81       	ldd	r24, Z+2	; 0x02
    3f16:	93 81       	ldd	r25, Z+3	; 0x03
    3f18:	20 e0       	ldi	r18, 0x00	; 0
    3f1a:	3f ef       	ldi	r19, 0xFF	; 255
    3f1c:	4f e7       	ldi	r20, 0x7F	; 127
    3f1e:	57 e4       	ldi	r21, 0x47	; 71
    3f20:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3f24:	18 16       	cp	r1, r24
    3f26:	0c f0       	brlt	.+2      	; 0x3f2a <main+0x1f7a>
    3f28:	43 c0       	rjmp	.+134    	; 0x3fb0 <main+0x2000>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f2a:	fe 01       	movw	r30, r28
    3f2c:	e3 52       	subi	r30, 0x23	; 35
    3f2e:	ff 4f       	sbci	r31, 0xFF	; 255
    3f30:	60 81       	ld	r22, Z
    3f32:	71 81       	ldd	r23, Z+1	; 0x01
    3f34:	82 81       	ldd	r24, Z+2	; 0x02
    3f36:	93 81       	ldd	r25, Z+3	; 0x03
    3f38:	20 e0       	ldi	r18, 0x00	; 0
    3f3a:	30 e0       	ldi	r19, 0x00	; 0
    3f3c:	40 e2       	ldi	r20, 0x20	; 32
    3f3e:	51 e4       	ldi	r21, 0x41	; 65
    3f40:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f44:	dc 01       	movw	r26, r24
    3f46:	cb 01       	movw	r24, r22
    3f48:	8e 01       	movw	r16, r28
    3f4a:	09 52       	subi	r16, 0x29	; 41
    3f4c:	1f 4f       	sbci	r17, 0xFF	; 255
    3f4e:	bc 01       	movw	r22, r24
    3f50:	cd 01       	movw	r24, r26
    3f52:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f56:	dc 01       	movw	r26, r24
    3f58:	cb 01       	movw	r24, r22
    3f5a:	f8 01       	movw	r30, r16
    3f5c:	91 83       	std	Z+1, r25	; 0x01
    3f5e:	80 83       	st	Z, r24
    3f60:	1f c0       	rjmp	.+62     	; 0x3fa0 <main+0x1ff0>
    3f62:	fe 01       	movw	r30, r28
    3f64:	eb 52       	subi	r30, 0x2B	; 43
    3f66:	ff 4f       	sbci	r31, 0xFF	; 255
    3f68:	88 ec       	ldi	r24, 0xC8	; 200
    3f6a:	90 e0       	ldi	r25, 0x00	; 0
    3f6c:	91 83       	std	Z+1, r25	; 0x01
    3f6e:	80 83       	st	Z, r24
    3f70:	fe 01       	movw	r30, r28
    3f72:	eb 52       	subi	r30, 0x2B	; 43
    3f74:	ff 4f       	sbci	r31, 0xFF	; 255
    3f76:	80 81       	ld	r24, Z
    3f78:	91 81       	ldd	r25, Z+1	; 0x01
    3f7a:	01 97       	sbiw	r24, 0x01	; 1
    3f7c:	f1 f7       	brne	.-4      	; 0x3f7a <main+0x1fca>
    3f7e:	fe 01       	movw	r30, r28
    3f80:	eb 52       	subi	r30, 0x2B	; 43
    3f82:	ff 4f       	sbci	r31, 0xFF	; 255
    3f84:	91 83       	std	Z+1, r25	; 0x01
    3f86:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f88:	de 01       	movw	r26, r28
    3f8a:	a9 52       	subi	r26, 0x29	; 41
    3f8c:	bf 4f       	sbci	r27, 0xFF	; 255
    3f8e:	fe 01       	movw	r30, r28
    3f90:	e9 52       	subi	r30, 0x29	; 41
    3f92:	ff 4f       	sbci	r31, 0xFF	; 255
    3f94:	80 81       	ld	r24, Z
    3f96:	91 81       	ldd	r25, Z+1	; 0x01
    3f98:	01 97       	sbiw	r24, 0x01	; 1
    3f9a:	11 96       	adiw	r26, 0x01	; 1
    3f9c:	9c 93       	st	X, r25
    3f9e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3fa0:	fe 01       	movw	r30, r28
    3fa2:	e9 52       	subi	r30, 0x29	; 41
    3fa4:	ff 4f       	sbci	r31, 0xFF	; 255
    3fa6:	80 81       	ld	r24, Z
    3fa8:	91 81       	ldd	r25, Z+1	; 0x01
    3faa:	00 97       	sbiw	r24, 0x00	; 0
    3fac:	d1 f6       	brne	.-76     	; 0x3f62 <main+0x1fb2>
    3fae:	27 c0       	rjmp	.+78     	; 0x3ffe <main+0x204e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3fb0:	8e 01       	movw	r16, r28
    3fb2:	09 52       	subi	r16, 0x29	; 41
    3fb4:	1f 4f       	sbci	r17, 0xFF	; 255
    3fb6:	fe 01       	movw	r30, r28
    3fb8:	e7 52       	subi	r30, 0x27	; 39
    3fba:	ff 4f       	sbci	r31, 0xFF	; 255
    3fbc:	60 81       	ld	r22, Z
    3fbe:	71 81       	ldd	r23, Z+1	; 0x01
    3fc0:	82 81       	ldd	r24, Z+2	; 0x02
    3fc2:	93 81       	ldd	r25, Z+3	; 0x03
    3fc4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3fc8:	dc 01       	movw	r26, r24
    3fca:	cb 01       	movw	r24, r22
    3fcc:	f8 01       	movw	r30, r16
    3fce:	91 83       	std	Z+1, r25	; 0x01
    3fd0:	80 83       	st	Z, r24
    3fd2:	de 01       	movw	r26, r28
    3fd4:	ad 52       	subi	r26, 0x2D	; 45
    3fd6:	bf 4f       	sbci	r27, 0xFF	; 255
    3fd8:	fe 01       	movw	r30, r28
    3fda:	e9 52       	subi	r30, 0x29	; 41
    3fdc:	ff 4f       	sbci	r31, 0xFF	; 255
    3fde:	80 81       	ld	r24, Z
    3fe0:	91 81       	ldd	r25, Z+1	; 0x01
    3fe2:	8d 93       	st	X+, r24
    3fe4:	9c 93       	st	X, r25
    3fe6:	fe 01       	movw	r30, r28
    3fe8:	ed 52       	subi	r30, 0x2D	; 45
    3fea:	ff 4f       	sbci	r31, 0xFF	; 255
    3fec:	80 81       	ld	r24, Z
    3fee:	91 81       	ldd	r25, Z+1	; 0x01
    3ff0:	01 97       	sbiw	r24, 0x01	; 1
    3ff2:	f1 f7       	brne	.-4      	; 0x3ff0 <main+0x2040>
    3ff4:	fe 01       	movw	r30, r28
    3ff6:	ed 52       	subi	r30, 0x2D	; 45
    3ff8:	ff 4f       	sbci	r31, 0xFF	; 255
    3ffa:	91 83       	std	Z+1, r25	; 0x01
    3ffc:	80 83       	st	Z, r24
					{
						_delay_ms(150);
						Local_S_1=0;
    3ffe:	fe 01       	movw	r30, r28
    4000:	ee 53       	subi	r30, 0x3E	; 62
    4002:	fe 4f       	sbci	r31, 0xFE	; 254
    4004:	10 82       	st	Z, r1
						CLCD_voidGoToXY(0,6);
    4006:	80 e0       	ldi	r24, 0x00	; 0
    4008:	66 e0       	ldi	r22, 0x06	; 6
    400a:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_S_1);
    400e:	fe 01       	movw	r30, r28
    4010:	ee 53       	subi	r30, 0x3E	; 62
    4012:	fe 4f       	sbci	r31, 0xFE	; 254
    4014:	80 81       	ld	r24, Z
    4016:	88 2f       	mov	r24, r24
    4018:	90 e0       	ldi	r25, 0x00	; 0
    401a:	a0 e0       	ldi	r26, 0x00	; 0
    401c:	b0 e0       	ldi	r27, 0x00	; 0
    401e:	bc 01       	movw	r22, r24
    4020:	cd 01       	movw	r24, r26
    4022:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    4026:	dc 01       	movw	r26, r24
    4028:	cb 01       	movw	r24, r22
    402a:	bc 01       	movw	r22, r24
    402c:	cd 01       	movw	r24, r26
    402e:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    4032:	82 c2       	rjmp	.+1284   	; 0x4538 <main+0x2588>
    4034:	fe 01       	movw	r30, r28
    4036:	e1 53       	subi	r30, 0x31	; 49
    4038:	ff 4f       	sbci	r31, 0xFF	; 255
    403a:	80 e0       	ldi	r24, 0x00	; 0
    403c:	90 e0       	ldi	r25, 0x00	; 0
    403e:	a6 e1       	ldi	r26, 0x16	; 22
    4040:	b3 e4       	ldi	r27, 0x43	; 67
    4042:	80 83       	st	Z, r24
    4044:	91 83       	std	Z+1, r25	; 0x01
    4046:	a2 83       	std	Z+2, r26	; 0x02
    4048:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    404a:	8e 01       	movw	r16, r28
    404c:	05 53       	subi	r16, 0x35	; 53
    404e:	1f 4f       	sbci	r17, 0xFF	; 255
    4050:	fe 01       	movw	r30, r28
    4052:	e1 53       	subi	r30, 0x31	; 49
    4054:	ff 4f       	sbci	r31, 0xFF	; 255
    4056:	60 81       	ld	r22, Z
    4058:	71 81       	ldd	r23, Z+1	; 0x01
    405a:	82 81       	ldd	r24, Z+2	; 0x02
    405c:	93 81       	ldd	r25, Z+3	; 0x03
    405e:	20 e0       	ldi	r18, 0x00	; 0
    4060:	30 e0       	ldi	r19, 0x00	; 0
    4062:	4a ef       	ldi	r20, 0xFA	; 250
    4064:	54 e4       	ldi	r21, 0x44	; 68
    4066:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    406a:	dc 01       	movw	r26, r24
    406c:	cb 01       	movw	r24, r22
    406e:	f8 01       	movw	r30, r16
    4070:	80 83       	st	Z, r24
    4072:	91 83       	std	Z+1, r25	; 0x01
    4074:	a2 83       	std	Z+2, r26	; 0x02
    4076:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4078:	fe 01       	movw	r30, r28
    407a:	e5 53       	subi	r30, 0x35	; 53
    407c:	ff 4f       	sbci	r31, 0xFF	; 255
    407e:	60 81       	ld	r22, Z
    4080:	71 81       	ldd	r23, Z+1	; 0x01
    4082:	82 81       	ldd	r24, Z+2	; 0x02
    4084:	93 81       	ldd	r25, Z+3	; 0x03
    4086:	20 e0       	ldi	r18, 0x00	; 0
    4088:	30 e0       	ldi	r19, 0x00	; 0
    408a:	40 e8       	ldi	r20, 0x80	; 128
    408c:	5f e3       	ldi	r21, 0x3F	; 63
    408e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4092:	88 23       	and	r24, r24
    4094:	44 f4       	brge	.+16     	; 0x40a6 <main+0x20f6>
		__ticks = 1;
    4096:	fe 01       	movw	r30, r28
    4098:	e7 53       	subi	r30, 0x37	; 55
    409a:	ff 4f       	sbci	r31, 0xFF	; 255
    409c:	81 e0       	ldi	r24, 0x01	; 1
    409e:	90 e0       	ldi	r25, 0x00	; 0
    40a0:	91 83       	std	Z+1, r25	; 0x01
    40a2:	80 83       	st	Z, r24
    40a4:	64 c0       	rjmp	.+200    	; 0x416e <main+0x21be>
	else if (__tmp > 65535)
    40a6:	fe 01       	movw	r30, r28
    40a8:	e5 53       	subi	r30, 0x35	; 53
    40aa:	ff 4f       	sbci	r31, 0xFF	; 255
    40ac:	60 81       	ld	r22, Z
    40ae:	71 81       	ldd	r23, Z+1	; 0x01
    40b0:	82 81       	ldd	r24, Z+2	; 0x02
    40b2:	93 81       	ldd	r25, Z+3	; 0x03
    40b4:	20 e0       	ldi	r18, 0x00	; 0
    40b6:	3f ef       	ldi	r19, 0xFF	; 255
    40b8:	4f e7       	ldi	r20, 0x7F	; 127
    40ba:	57 e4       	ldi	r21, 0x47	; 71
    40bc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    40c0:	18 16       	cp	r1, r24
    40c2:	0c f0       	brlt	.+2      	; 0x40c6 <main+0x2116>
    40c4:	43 c0       	rjmp	.+134    	; 0x414c <main+0x219c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    40c6:	fe 01       	movw	r30, r28
    40c8:	e1 53       	subi	r30, 0x31	; 49
    40ca:	ff 4f       	sbci	r31, 0xFF	; 255
    40cc:	60 81       	ld	r22, Z
    40ce:	71 81       	ldd	r23, Z+1	; 0x01
    40d0:	82 81       	ldd	r24, Z+2	; 0x02
    40d2:	93 81       	ldd	r25, Z+3	; 0x03
    40d4:	20 e0       	ldi	r18, 0x00	; 0
    40d6:	30 e0       	ldi	r19, 0x00	; 0
    40d8:	40 e2       	ldi	r20, 0x20	; 32
    40da:	51 e4       	ldi	r21, 0x41	; 65
    40dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    40e0:	dc 01       	movw	r26, r24
    40e2:	cb 01       	movw	r24, r22
    40e4:	8e 01       	movw	r16, r28
    40e6:	07 53       	subi	r16, 0x37	; 55
    40e8:	1f 4f       	sbci	r17, 0xFF	; 255
    40ea:	bc 01       	movw	r22, r24
    40ec:	cd 01       	movw	r24, r26
    40ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    40f2:	dc 01       	movw	r26, r24
    40f4:	cb 01       	movw	r24, r22
    40f6:	f8 01       	movw	r30, r16
    40f8:	91 83       	std	Z+1, r25	; 0x01
    40fa:	80 83       	st	Z, r24
    40fc:	1f c0       	rjmp	.+62     	; 0x413c <main+0x218c>
    40fe:	fe 01       	movw	r30, r28
    4100:	e9 53       	subi	r30, 0x39	; 57
    4102:	ff 4f       	sbci	r31, 0xFF	; 255
    4104:	88 ec       	ldi	r24, 0xC8	; 200
    4106:	90 e0       	ldi	r25, 0x00	; 0
    4108:	91 83       	std	Z+1, r25	; 0x01
    410a:	80 83       	st	Z, r24
    410c:	fe 01       	movw	r30, r28
    410e:	e9 53       	subi	r30, 0x39	; 57
    4110:	ff 4f       	sbci	r31, 0xFF	; 255
    4112:	80 81       	ld	r24, Z
    4114:	91 81       	ldd	r25, Z+1	; 0x01
    4116:	01 97       	sbiw	r24, 0x01	; 1
    4118:	f1 f7       	brne	.-4      	; 0x4116 <main+0x2166>
    411a:	fe 01       	movw	r30, r28
    411c:	e9 53       	subi	r30, 0x39	; 57
    411e:	ff 4f       	sbci	r31, 0xFF	; 255
    4120:	91 83       	std	Z+1, r25	; 0x01
    4122:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4124:	de 01       	movw	r26, r28
    4126:	a7 53       	subi	r26, 0x37	; 55
    4128:	bf 4f       	sbci	r27, 0xFF	; 255
    412a:	fe 01       	movw	r30, r28
    412c:	e7 53       	subi	r30, 0x37	; 55
    412e:	ff 4f       	sbci	r31, 0xFF	; 255
    4130:	80 81       	ld	r24, Z
    4132:	91 81       	ldd	r25, Z+1	; 0x01
    4134:	01 97       	sbiw	r24, 0x01	; 1
    4136:	11 96       	adiw	r26, 0x01	; 1
    4138:	9c 93       	st	X, r25
    413a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    413c:	fe 01       	movw	r30, r28
    413e:	e7 53       	subi	r30, 0x37	; 55
    4140:	ff 4f       	sbci	r31, 0xFF	; 255
    4142:	80 81       	ld	r24, Z
    4144:	91 81       	ldd	r25, Z+1	; 0x01
    4146:	00 97       	sbiw	r24, 0x00	; 0
    4148:	d1 f6       	brne	.-76     	; 0x40fe <main+0x214e>
    414a:	27 c0       	rjmp	.+78     	; 0x419a <main+0x21ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    414c:	8e 01       	movw	r16, r28
    414e:	07 53       	subi	r16, 0x37	; 55
    4150:	1f 4f       	sbci	r17, 0xFF	; 255
    4152:	fe 01       	movw	r30, r28
    4154:	e5 53       	subi	r30, 0x35	; 53
    4156:	ff 4f       	sbci	r31, 0xFF	; 255
    4158:	60 81       	ld	r22, Z
    415a:	71 81       	ldd	r23, Z+1	; 0x01
    415c:	82 81       	ldd	r24, Z+2	; 0x02
    415e:	93 81       	ldd	r25, Z+3	; 0x03
    4160:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4164:	dc 01       	movw	r26, r24
    4166:	cb 01       	movw	r24, r22
    4168:	f8 01       	movw	r30, r16
    416a:	91 83       	std	Z+1, r25	; 0x01
    416c:	80 83       	st	Z, r24
    416e:	de 01       	movw	r26, r28
    4170:	ab 53       	subi	r26, 0x3B	; 59
    4172:	bf 4f       	sbci	r27, 0xFF	; 255
    4174:	fe 01       	movw	r30, r28
    4176:	e7 53       	subi	r30, 0x37	; 55
    4178:	ff 4f       	sbci	r31, 0xFF	; 255
    417a:	80 81       	ld	r24, Z
    417c:	91 81       	ldd	r25, Z+1	; 0x01
    417e:	8d 93       	st	X+, r24
    4180:	9c 93       	st	X, r25
    4182:	fe 01       	movw	r30, r28
    4184:	eb 53       	subi	r30, 0x3B	; 59
    4186:	ff 4f       	sbci	r31, 0xFF	; 255
    4188:	80 81       	ld	r24, Z
    418a:	91 81       	ldd	r25, Z+1	; 0x01
    418c:	01 97       	sbiw	r24, 0x01	; 1
    418e:	f1 f7       	brne	.-4      	; 0x418c <main+0x21dc>
    4190:	fe 01       	movw	r30, r28
    4192:	eb 53       	subi	r30, 0x3B	; 59
    4194:	ff 4f       	sbci	r31, 0xFF	; 255
    4196:	91 83       	std	Z+1, r25	; 0x01
    4198:	80 83       	st	Z, r24
					}
					else
					{
						_delay_ms(150);
						Local_S_1++;
    419a:	de 01       	movw	r26, r28
    419c:	ae 53       	subi	r26, 0x3E	; 62
    419e:	be 4f       	sbci	r27, 0xFE	; 254
    41a0:	fe 01       	movw	r30, r28
    41a2:	ee 53       	subi	r30, 0x3E	; 62
    41a4:	fe 4f       	sbci	r31, 0xFE	; 254
    41a6:	80 81       	ld	r24, Z
    41a8:	8f 5f       	subi	r24, 0xFF	; 255
    41aa:	8c 93       	st	X, r24

						CLCD_voidGoToXY(0,6);
    41ac:	80 e0       	ldi	r24, 0x00	; 0
    41ae:	66 e0       	ldi	r22, 0x06	; 6
    41b0:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_S_1);
    41b4:	fe 01       	movw	r30, r28
    41b6:	ee 53       	subi	r30, 0x3E	; 62
    41b8:	fe 4f       	sbci	r31, 0xFE	; 254
    41ba:	80 81       	ld	r24, Z
    41bc:	88 2f       	mov	r24, r24
    41be:	90 e0       	ldi	r25, 0x00	; 0
    41c0:	a0 e0       	ldi	r26, 0x00	; 0
    41c2:	b0 e0       	ldi	r27, 0x00	; 0
    41c4:	bc 01       	movw	r22, r24
    41c6:	cd 01       	movw	r24, r26
    41c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    41cc:	dc 01       	movw	r26, r24
    41ce:	cb 01       	movw	r24, r22
    41d0:	bc 01       	movw	r22, r24
    41d2:	cd 01       	movw	r24, r26
    41d4:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    41d8:	af c1       	rjmp	.+862    	; 0x4538 <main+0x2588>
					}


				}
				else if (PB_u8GetState(DIO_u8PORTD,DIO_u8PIN3)==1)
    41da:	83 e0       	ldi	r24, 0x03	; 3
    41dc:	63 e0       	ldi	r22, 0x03	; 3
    41de:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    41e2:	81 30       	cpi	r24, 0x01	; 1
    41e4:	09 f0       	breq	.+2      	; 0x41e8 <main+0x2238>
    41e6:	a8 c1       	rjmp	.+848    	; 0x4538 <main+0x2588>
				{
					if (Local_S_1<=0)
    41e8:	fe 01       	movw	r30, r28
    41ea:	ee 53       	subi	r30, 0x3E	; 62
    41ec:	fe 4f       	sbci	r31, 0xFE	; 254
    41ee:	80 81       	ld	r24, Z
    41f0:	88 23       	and	r24, r24
    41f2:	09 f0       	breq	.+2      	; 0x41f6 <main+0x2246>
    41f4:	cf c0       	rjmp	.+414    	; 0x4394 <main+0x23e4>
    41f6:	fe 01       	movw	r30, r28
    41f8:	ef 53       	subi	r30, 0x3F	; 63
    41fa:	ff 4f       	sbci	r31, 0xFF	; 255
    41fc:	80 e0       	ldi	r24, 0x00	; 0
    41fe:	90 e0       	ldi	r25, 0x00	; 0
    4200:	a6 e1       	ldi	r26, 0x16	; 22
    4202:	b3 e4       	ldi	r27, 0x43	; 67
    4204:	80 83       	st	Z, r24
    4206:	91 83       	std	Z+1, r25	; 0x01
    4208:	a2 83       	std	Z+2, r26	; 0x02
    420a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    420c:	8e 01       	movw	r16, r28
    420e:	03 54       	subi	r16, 0x43	; 67
    4210:	1f 4f       	sbci	r17, 0xFF	; 255
    4212:	fe 01       	movw	r30, r28
    4214:	ef 53       	subi	r30, 0x3F	; 63
    4216:	ff 4f       	sbci	r31, 0xFF	; 255
    4218:	60 81       	ld	r22, Z
    421a:	71 81       	ldd	r23, Z+1	; 0x01
    421c:	82 81       	ldd	r24, Z+2	; 0x02
    421e:	93 81       	ldd	r25, Z+3	; 0x03
    4220:	20 e0       	ldi	r18, 0x00	; 0
    4222:	30 e0       	ldi	r19, 0x00	; 0
    4224:	4a ef       	ldi	r20, 0xFA	; 250
    4226:	54 e4       	ldi	r21, 0x44	; 68
    4228:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    422c:	dc 01       	movw	r26, r24
    422e:	cb 01       	movw	r24, r22
    4230:	f8 01       	movw	r30, r16
    4232:	80 83       	st	Z, r24
    4234:	91 83       	std	Z+1, r25	; 0x01
    4236:	a2 83       	std	Z+2, r26	; 0x02
    4238:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    423a:	fe 01       	movw	r30, r28
    423c:	e3 54       	subi	r30, 0x43	; 67
    423e:	ff 4f       	sbci	r31, 0xFF	; 255
    4240:	60 81       	ld	r22, Z
    4242:	71 81       	ldd	r23, Z+1	; 0x01
    4244:	82 81       	ldd	r24, Z+2	; 0x02
    4246:	93 81       	ldd	r25, Z+3	; 0x03
    4248:	20 e0       	ldi	r18, 0x00	; 0
    424a:	30 e0       	ldi	r19, 0x00	; 0
    424c:	40 e8       	ldi	r20, 0x80	; 128
    424e:	5f e3       	ldi	r21, 0x3F	; 63
    4250:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4254:	88 23       	and	r24, r24
    4256:	44 f4       	brge	.+16     	; 0x4268 <main+0x22b8>
		__ticks = 1;
    4258:	fe 01       	movw	r30, r28
    425a:	e5 54       	subi	r30, 0x45	; 69
    425c:	ff 4f       	sbci	r31, 0xFF	; 255
    425e:	81 e0       	ldi	r24, 0x01	; 1
    4260:	90 e0       	ldi	r25, 0x00	; 0
    4262:	91 83       	std	Z+1, r25	; 0x01
    4264:	80 83       	st	Z, r24
    4266:	64 c0       	rjmp	.+200    	; 0x4330 <main+0x2380>
	else if (__tmp > 65535)
    4268:	fe 01       	movw	r30, r28
    426a:	e3 54       	subi	r30, 0x43	; 67
    426c:	ff 4f       	sbci	r31, 0xFF	; 255
    426e:	60 81       	ld	r22, Z
    4270:	71 81       	ldd	r23, Z+1	; 0x01
    4272:	82 81       	ldd	r24, Z+2	; 0x02
    4274:	93 81       	ldd	r25, Z+3	; 0x03
    4276:	20 e0       	ldi	r18, 0x00	; 0
    4278:	3f ef       	ldi	r19, 0xFF	; 255
    427a:	4f e7       	ldi	r20, 0x7F	; 127
    427c:	57 e4       	ldi	r21, 0x47	; 71
    427e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4282:	18 16       	cp	r1, r24
    4284:	0c f0       	brlt	.+2      	; 0x4288 <main+0x22d8>
    4286:	43 c0       	rjmp	.+134    	; 0x430e <main+0x235e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4288:	fe 01       	movw	r30, r28
    428a:	ef 53       	subi	r30, 0x3F	; 63
    428c:	ff 4f       	sbci	r31, 0xFF	; 255
    428e:	60 81       	ld	r22, Z
    4290:	71 81       	ldd	r23, Z+1	; 0x01
    4292:	82 81       	ldd	r24, Z+2	; 0x02
    4294:	93 81       	ldd	r25, Z+3	; 0x03
    4296:	20 e0       	ldi	r18, 0x00	; 0
    4298:	30 e0       	ldi	r19, 0x00	; 0
    429a:	40 e2       	ldi	r20, 0x20	; 32
    429c:	51 e4       	ldi	r21, 0x41	; 65
    429e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    42a2:	dc 01       	movw	r26, r24
    42a4:	cb 01       	movw	r24, r22
    42a6:	8e 01       	movw	r16, r28
    42a8:	05 54       	subi	r16, 0x45	; 69
    42aa:	1f 4f       	sbci	r17, 0xFF	; 255
    42ac:	bc 01       	movw	r22, r24
    42ae:	cd 01       	movw	r24, r26
    42b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    42b4:	dc 01       	movw	r26, r24
    42b6:	cb 01       	movw	r24, r22
    42b8:	f8 01       	movw	r30, r16
    42ba:	91 83       	std	Z+1, r25	; 0x01
    42bc:	80 83       	st	Z, r24
    42be:	1f c0       	rjmp	.+62     	; 0x42fe <main+0x234e>
    42c0:	fe 01       	movw	r30, r28
    42c2:	e7 54       	subi	r30, 0x47	; 71
    42c4:	ff 4f       	sbci	r31, 0xFF	; 255
    42c6:	88 ec       	ldi	r24, 0xC8	; 200
    42c8:	90 e0       	ldi	r25, 0x00	; 0
    42ca:	91 83       	std	Z+1, r25	; 0x01
    42cc:	80 83       	st	Z, r24
    42ce:	fe 01       	movw	r30, r28
    42d0:	e7 54       	subi	r30, 0x47	; 71
    42d2:	ff 4f       	sbci	r31, 0xFF	; 255
    42d4:	80 81       	ld	r24, Z
    42d6:	91 81       	ldd	r25, Z+1	; 0x01
    42d8:	01 97       	sbiw	r24, 0x01	; 1
    42da:	f1 f7       	brne	.-4      	; 0x42d8 <main+0x2328>
    42dc:	fe 01       	movw	r30, r28
    42de:	e7 54       	subi	r30, 0x47	; 71
    42e0:	ff 4f       	sbci	r31, 0xFF	; 255
    42e2:	91 83       	std	Z+1, r25	; 0x01
    42e4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42e6:	de 01       	movw	r26, r28
    42e8:	a5 54       	subi	r26, 0x45	; 69
    42ea:	bf 4f       	sbci	r27, 0xFF	; 255
    42ec:	fe 01       	movw	r30, r28
    42ee:	e5 54       	subi	r30, 0x45	; 69
    42f0:	ff 4f       	sbci	r31, 0xFF	; 255
    42f2:	80 81       	ld	r24, Z
    42f4:	91 81       	ldd	r25, Z+1	; 0x01
    42f6:	01 97       	sbiw	r24, 0x01	; 1
    42f8:	11 96       	adiw	r26, 0x01	; 1
    42fa:	9c 93       	st	X, r25
    42fc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42fe:	fe 01       	movw	r30, r28
    4300:	e5 54       	subi	r30, 0x45	; 69
    4302:	ff 4f       	sbci	r31, 0xFF	; 255
    4304:	80 81       	ld	r24, Z
    4306:	91 81       	ldd	r25, Z+1	; 0x01
    4308:	00 97       	sbiw	r24, 0x00	; 0
    430a:	d1 f6       	brne	.-76     	; 0x42c0 <main+0x2310>
    430c:	27 c0       	rjmp	.+78     	; 0x435c <main+0x23ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    430e:	8e 01       	movw	r16, r28
    4310:	05 54       	subi	r16, 0x45	; 69
    4312:	1f 4f       	sbci	r17, 0xFF	; 255
    4314:	fe 01       	movw	r30, r28
    4316:	e3 54       	subi	r30, 0x43	; 67
    4318:	ff 4f       	sbci	r31, 0xFF	; 255
    431a:	60 81       	ld	r22, Z
    431c:	71 81       	ldd	r23, Z+1	; 0x01
    431e:	82 81       	ldd	r24, Z+2	; 0x02
    4320:	93 81       	ldd	r25, Z+3	; 0x03
    4322:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4326:	dc 01       	movw	r26, r24
    4328:	cb 01       	movw	r24, r22
    432a:	f8 01       	movw	r30, r16
    432c:	91 83       	std	Z+1, r25	; 0x01
    432e:	80 83       	st	Z, r24
    4330:	de 01       	movw	r26, r28
    4332:	a9 54       	subi	r26, 0x49	; 73
    4334:	bf 4f       	sbci	r27, 0xFF	; 255
    4336:	fe 01       	movw	r30, r28
    4338:	e5 54       	subi	r30, 0x45	; 69
    433a:	ff 4f       	sbci	r31, 0xFF	; 255
    433c:	80 81       	ld	r24, Z
    433e:	91 81       	ldd	r25, Z+1	; 0x01
    4340:	8d 93       	st	X+, r24
    4342:	9c 93       	st	X, r25
    4344:	fe 01       	movw	r30, r28
    4346:	e9 54       	subi	r30, 0x49	; 73
    4348:	ff 4f       	sbci	r31, 0xFF	; 255
    434a:	80 81       	ld	r24, Z
    434c:	91 81       	ldd	r25, Z+1	; 0x01
    434e:	01 97       	sbiw	r24, 0x01	; 1
    4350:	f1 f7       	brne	.-4      	; 0x434e <main+0x239e>
    4352:	fe 01       	movw	r30, r28
    4354:	e9 54       	subi	r30, 0x49	; 73
    4356:	ff 4f       	sbci	r31, 0xFF	; 255
    4358:	91 83       	std	Z+1, r25	; 0x01
    435a:	80 83       	st	Z, r24
					{
						_delay_ms(150);
						Local_S_1=9;
    435c:	fe 01       	movw	r30, r28
    435e:	ee 53       	subi	r30, 0x3E	; 62
    4360:	fe 4f       	sbci	r31, 0xFE	; 254
    4362:	89 e0       	ldi	r24, 0x09	; 9
    4364:	80 83       	st	Z, r24
						CLCD_voidGoToXY(0,6);
    4366:	80 e0       	ldi	r24, 0x00	; 0
    4368:	66 e0       	ldi	r22, 0x06	; 6
    436a:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_S_1);
    436e:	fe 01       	movw	r30, r28
    4370:	ee 53       	subi	r30, 0x3E	; 62
    4372:	fe 4f       	sbci	r31, 0xFE	; 254
    4374:	80 81       	ld	r24, Z
    4376:	88 2f       	mov	r24, r24
    4378:	90 e0       	ldi	r25, 0x00	; 0
    437a:	a0 e0       	ldi	r26, 0x00	; 0
    437c:	b0 e0       	ldi	r27, 0x00	; 0
    437e:	bc 01       	movw	r22, r24
    4380:	cd 01       	movw	r24, r26
    4382:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    4386:	dc 01       	movw	r26, r24
    4388:	cb 01       	movw	r24, r22
    438a:	bc 01       	movw	r22, r24
    438c:	cd 01       	movw	r24, r26
    438e:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    4392:	d2 c0       	rjmp	.+420    	; 0x4538 <main+0x2588>
    4394:	fe 01       	movw	r30, r28
    4396:	ed 54       	subi	r30, 0x4D	; 77
    4398:	ff 4f       	sbci	r31, 0xFF	; 255
    439a:	80 e0       	ldi	r24, 0x00	; 0
    439c:	90 e0       	ldi	r25, 0x00	; 0
    439e:	a8 e4       	ldi	r26, 0x48	; 72
    43a0:	b3 e4       	ldi	r27, 0x43	; 67
    43a2:	80 83       	st	Z, r24
    43a4:	91 83       	std	Z+1, r25	; 0x01
    43a6:	a2 83       	std	Z+2, r26	; 0x02
    43a8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    43aa:	8e 01       	movw	r16, r28
    43ac:	01 55       	subi	r16, 0x51	; 81
    43ae:	1f 4f       	sbci	r17, 0xFF	; 255
    43b0:	fe 01       	movw	r30, r28
    43b2:	ed 54       	subi	r30, 0x4D	; 77
    43b4:	ff 4f       	sbci	r31, 0xFF	; 255
    43b6:	60 81       	ld	r22, Z
    43b8:	71 81       	ldd	r23, Z+1	; 0x01
    43ba:	82 81       	ldd	r24, Z+2	; 0x02
    43bc:	93 81       	ldd	r25, Z+3	; 0x03
    43be:	20 e0       	ldi	r18, 0x00	; 0
    43c0:	30 e0       	ldi	r19, 0x00	; 0
    43c2:	4a ef       	ldi	r20, 0xFA	; 250
    43c4:	54 e4       	ldi	r21, 0x44	; 68
    43c6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    43ca:	dc 01       	movw	r26, r24
    43cc:	cb 01       	movw	r24, r22
    43ce:	f8 01       	movw	r30, r16
    43d0:	80 83       	st	Z, r24
    43d2:	91 83       	std	Z+1, r25	; 0x01
    43d4:	a2 83       	std	Z+2, r26	; 0x02
    43d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    43d8:	fe 01       	movw	r30, r28
    43da:	e1 55       	subi	r30, 0x51	; 81
    43dc:	ff 4f       	sbci	r31, 0xFF	; 255
    43de:	60 81       	ld	r22, Z
    43e0:	71 81       	ldd	r23, Z+1	; 0x01
    43e2:	82 81       	ldd	r24, Z+2	; 0x02
    43e4:	93 81       	ldd	r25, Z+3	; 0x03
    43e6:	20 e0       	ldi	r18, 0x00	; 0
    43e8:	30 e0       	ldi	r19, 0x00	; 0
    43ea:	40 e8       	ldi	r20, 0x80	; 128
    43ec:	5f e3       	ldi	r21, 0x3F	; 63
    43ee:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    43f2:	88 23       	and	r24, r24
    43f4:	44 f4       	brge	.+16     	; 0x4406 <main+0x2456>
		__ticks = 1;
    43f6:	fe 01       	movw	r30, r28
    43f8:	e3 55       	subi	r30, 0x53	; 83
    43fa:	ff 4f       	sbci	r31, 0xFF	; 255
    43fc:	81 e0       	ldi	r24, 0x01	; 1
    43fe:	90 e0       	ldi	r25, 0x00	; 0
    4400:	91 83       	std	Z+1, r25	; 0x01
    4402:	80 83       	st	Z, r24
    4404:	64 c0       	rjmp	.+200    	; 0x44ce <main+0x251e>
	else if (__tmp > 65535)
    4406:	fe 01       	movw	r30, r28
    4408:	e1 55       	subi	r30, 0x51	; 81
    440a:	ff 4f       	sbci	r31, 0xFF	; 255
    440c:	60 81       	ld	r22, Z
    440e:	71 81       	ldd	r23, Z+1	; 0x01
    4410:	82 81       	ldd	r24, Z+2	; 0x02
    4412:	93 81       	ldd	r25, Z+3	; 0x03
    4414:	20 e0       	ldi	r18, 0x00	; 0
    4416:	3f ef       	ldi	r19, 0xFF	; 255
    4418:	4f e7       	ldi	r20, 0x7F	; 127
    441a:	57 e4       	ldi	r21, 0x47	; 71
    441c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4420:	18 16       	cp	r1, r24
    4422:	0c f0       	brlt	.+2      	; 0x4426 <main+0x2476>
    4424:	43 c0       	rjmp	.+134    	; 0x44ac <main+0x24fc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4426:	fe 01       	movw	r30, r28
    4428:	ed 54       	subi	r30, 0x4D	; 77
    442a:	ff 4f       	sbci	r31, 0xFF	; 255
    442c:	60 81       	ld	r22, Z
    442e:	71 81       	ldd	r23, Z+1	; 0x01
    4430:	82 81       	ldd	r24, Z+2	; 0x02
    4432:	93 81       	ldd	r25, Z+3	; 0x03
    4434:	20 e0       	ldi	r18, 0x00	; 0
    4436:	30 e0       	ldi	r19, 0x00	; 0
    4438:	40 e2       	ldi	r20, 0x20	; 32
    443a:	51 e4       	ldi	r21, 0x41	; 65
    443c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4440:	dc 01       	movw	r26, r24
    4442:	cb 01       	movw	r24, r22
    4444:	8e 01       	movw	r16, r28
    4446:	03 55       	subi	r16, 0x53	; 83
    4448:	1f 4f       	sbci	r17, 0xFF	; 255
    444a:	bc 01       	movw	r22, r24
    444c:	cd 01       	movw	r24, r26
    444e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4452:	dc 01       	movw	r26, r24
    4454:	cb 01       	movw	r24, r22
    4456:	f8 01       	movw	r30, r16
    4458:	91 83       	std	Z+1, r25	; 0x01
    445a:	80 83       	st	Z, r24
    445c:	1f c0       	rjmp	.+62     	; 0x449c <main+0x24ec>
    445e:	fe 01       	movw	r30, r28
    4460:	e5 55       	subi	r30, 0x55	; 85
    4462:	ff 4f       	sbci	r31, 0xFF	; 255
    4464:	88 ec       	ldi	r24, 0xC8	; 200
    4466:	90 e0       	ldi	r25, 0x00	; 0
    4468:	91 83       	std	Z+1, r25	; 0x01
    446a:	80 83       	st	Z, r24
    446c:	fe 01       	movw	r30, r28
    446e:	e5 55       	subi	r30, 0x55	; 85
    4470:	ff 4f       	sbci	r31, 0xFF	; 255
    4472:	80 81       	ld	r24, Z
    4474:	91 81       	ldd	r25, Z+1	; 0x01
    4476:	01 97       	sbiw	r24, 0x01	; 1
    4478:	f1 f7       	brne	.-4      	; 0x4476 <main+0x24c6>
    447a:	fe 01       	movw	r30, r28
    447c:	e5 55       	subi	r30, 0x55	; 85
    447e:	ff 4f       	sbci	r31, 0xFF	; 255
    4480:	91 83       	std	Z+1, r25	; 0x01
    4482:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4484:	de 01       	movw	r26, r28
    4486:	a3 55       	subi	r26, 0x53	; 83
    4488:	bf 4f       	sbci	r27, 0xFF	; 255
    448a:	fe 01       	movw	r30, r28
    448c:	e3 55       	subi	r30, 0x53	; 83
    448e:	ff 4f       	sbci	r31, 0xFF	; 255
    4490:	80 81       	ld	r24, Z
    4492:	91 81       	ldd	r25, Z+1	; 0x01
    4494:	01 97       	sbiw	r24, 0x01	; 1
    4496:	11 96       	adiw	r26, 0x01	; 1
    4498:	9c 93       	st	X, r25
    449a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    449c:	fe 01       	movw	r30, r28
    449e:	e3 55       	subi	r30, 0x53	; 83
    44a0:	ff 4f       	sbci	r31, 0xFF	; 255
    44a2:	80 81       	ld	r24, Z
    44a4:	91 81       	ldd	r25, Z+1	; 0x01
    44a6:	00 97       	sbiw	r24, 0x00	; 0
    44a8:	d1 f6       	brne	.-76     	; 0x445e <main+0x24ae>
    44aa:	27 c0       	rjmp	.+78     	; 0x44fa <main+0x254a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44ac:	8e 01       	movw	r16, r28
    44ae:	03 55       	subi	r16, 0x53	; 83
    44b0:	1f 4f       	sbci	r17, 0xFF	; 255
    44b2:	fe 01       	movw	r30, r28
    44b4:	e1 55       	subi	r30, 0x51	; 81
    44b6:	ff 4f       	sbci	r31, 0xFF	; 255
    44b8:	60 81       	ld	r22, Z
    44ba:	71 81       	ldd	r23, Z+1	; 0x01
    44bc:	82 81       	ldd	r24, Z+2	; 0x02
    44be:	93 81       	ldd	r25, Z+3	; 0x03
    44c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44c4:	dc 01       	movw	r26, r24
    44c6:	cb 01       	movw	r24, r22
    44c8:	f8 01       	movw	r30, r16
    44ca:	91 83       	std	Z+1, r25	; 0x01
    44cc:	80 83       	st	Z, r24
    44ce:	de 01       	movw	r26, r28
    44d0:	a7 55       	subi	r26, 0x57	; 87
    44d2:	bf 4f       	sbci	r27, 0xFF	; 255
    44d4:	fe 01       	movw	r30, r28
    44d6:	e3 55       	subi	r30, 0x53	; 83
    44d8:	ff 4f       	sbci	r31, 0xFF	; 255
    44da:	80 81       	ld	r24, Z
    44dc:	91 81       	ldd	r25, Z+1	; 0x01
    44de:	8d 93       	st	X+, r24
    44e0:	9c 93       	st	X, r25
    44e2:	fe 01       	movw	r30, r28
    44e4:	e7 55       	subi	r30, 0x57	; 87
    44e6:	ff 4f       	sbci	r31, 0xFF	; 255
    44e8:	80 81       	ld	r24, Z
    44ea:	91 81       	ldd	r25, Z+1	; 0x01
    44ec:	01 97       	sbiw	r24, 0x01	; 1
    44ee:	f1 f7       	brne	.-4      	; 0x44ec <main+0x253c>
    44f0:	fe 01       	movw	r30, r28
    44f2:	e7 55       	subi	r30, 0x57	; 87
    44f4:	ff 4f       	sbci	r31, 0xFF	; 255
    44f6:	91 83       	std	Z+1, r25	; 0x01
    44f8:	80 83       	st	Z, r24
					}
					else
					{
						_delay_ms(200);

						Local_S_1--;
    44fa:	de 01       	movw	r26, r28
    44fc:	ae 53       	subi	r26, 0x3E	; 62
    44fe:	be 4f       	sbci	r27, 0xFE	; 254
    4500:	fe 01       	movw	r30, r28
    4502:	ee 53       	subi	r30, 0x3E	; 62
    4504:	fe 4f       	sbci	r31, 0xFE	; 254
    4506:	80 81       	ld	r24, Z
    4508:	81 50       	subi	r24, 0x01	; 1
    450a:	8c 93       	st	X, r24
						CLCD_voidGoToXY(0,6);
    450c:	80 e0       	ldi	r24, 0x00	; 0
    450e:	66 e0       	ldi	r22, 0x06	; 6
    4510:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>

						CLCD_VoidWriteNumber(Local_S_1);
    4514:	fe 01       	movw	r30, r28
    4516:	ee 53       	subi	r30, 0x3E	; 62
    4518:	fe 4f       	sbci	r31, 0xFE	; 254
    451a:	80 81       	ld	r24, Z
    451c:	88 2f       	mov	r24, r24
    451e:	90 e0       	ldi	r25, 0x00	; 0
    4520:	a0 e0       	ldi	r26, 0x00	; 0
    4522:	b0 e0       	ldi	r27, 0x00	; 0
    4524:	bc 01       	movw	r22, r24
    4526:	cd 01       	movw	r24, r26
    4528:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    452c:	dc 01       	movw	r26, r24
    452e:	cb 01       	movw	r24, r22
    4530:	bc 01       	movw	r22, r24
    4532:	cd 01       	movw	r24, r26
    4534:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
					}

				}

			}
			while(PB_u8GetState(DIO_u8PORTD,DIO_u8PIN4)!=1);
    4538:	83 e0       	ldi	r24, 0x03	; 3
    453a:	64 e0       	ldi	r22, 0x04	; 4
    453c:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    4540:	81 30       	cpi	r24, 0x01	; 1
    4542:	09 f0       	breq	.+2      	; 0x4546 <main+0x2596>
    4544:	9b cc       	rjmp	.-1738   	; 0x3e7c <main+0x1ecc>


			CLCD_voidGoToXY(1,6);
    4546:	81 e0       	ldi	r24, 0x01	; 1
    4548:	66 e0       	ldi	r22, 0x06	; 6
    454a:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
			CLCD_voidSendData(' ');
    454e:	80 e2       	ldi	r24, 0x20	; 32
    4550:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <CLCD_voidSendData>
			CLCD_voidWriteSpecialCharacter(arrow,1,1,7);
    4554:	ce 01       	movw	r24, r28
    4556:	89 53       	subi	r24, 0x39	; 57
    4558:	9e 4f       	sbci	r25, 0xFE	; 254
    455a:	61 e0       	ldi	r22, 0x01	; 1
    455c:	41 e0       	ldi	r20, 0x01	; 1
    455e:	27 e0       	ldi	r18, 0x07	; 7
    4560:	0e 94 77 0b 	call	0x16ee	; 0x16ee <CLCD_voidWriteSpecialCharacter>

			do
			{
				if (PB_u8GetState(DIO_u8PORTD,DIO_u8PIN2)==1)
    4564:	83 e0       	ldi	r24, 0x03	; 3
    4566:	62 e0       	ldi	r22, 0x02	; 2
    4568:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    456c:	81 30       	cpi	r24, 0x01	; 1
    456e:	09 f0       	breq	.+2      	; 0x4572 <main+0x25c2>
    4570:	a8 c1       	rjmp	.+848    	; 0x48c2 <main+0x2912>
				{
					if (Local_S_2>=9)
    4572:	fe 01       	movw	r30, r28
    4574:	ef 53       	subi	r30, 0x3F	; 63
    4576:	fe 4f       	sbci	r31, 0xFE	; 254
    4578:	80 81       	ld	r24, Z
    457a:	89 30       	cpi	r24, 0x09	; 9
    457c:	08 f4       	brcc	.+2      	; 0x4580 <main+0x25d0>
    457e:	ce c0       	rjmp	.+412    	; 0x471c <main+0x276c>
    4580:	fe 01       	movw	r30, r28
    4582:	eb 55       	subi	r30, 0x5B	; 91
    4584:	ff 4f       	sbci	r31, 0xFF	; 255
    4586:	80 e0       	ldi	r24, 0x00	; 0
    4588:	90 e0       	ldi	r25, 0x00	; 0
    458a:	a6 e1       	ldi	r26, 0x16	; 22
    458c:	b3 e4       	ldi	r27, 0x43	; 67
    458e:	80 83       	st	Z, r24
    4590:	91 83       	std	Z+1, r25	; 0x01
    4592:	a2 83       	std	Z+2, r26	; 0x02
    4594:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4596:	8e 01       	movw	r16, r28
    4598:	0f 55       	subi	r16, 0x5F	; 95
    459a:	1f 4f       	sbci	r17, 0xFF	; 255
    459c:	fe 01       	movw	r30, r28
    459e:	eb 55       	subi	r30, 0x5B	; 91
    45a0:	ff 4f       	sbci	r31, 0xFF	; 255
    45a2:	60 81       	ld	r22, Z
    45a4:	71 81       	ldd	r23, Z+1	; 0x01
    45a6:	82 81       	ldd	r24, Z+2	; 0x02
    45a8:	93 81       	ldd	r25, Z+3	; 0x03
    45aa:	20 e0       	ldi	r18, 0x00	; 0
    45ac:	30 e0       	ldi	r19, 0x00	; 0
    45ae:	4a ef       	ldi	r20, 0xFA	; 250
    45b0:	54 e4       	ldi	r21, 0x44	; 68
    45b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    45b6:	dc 01       	movw	r26, r24
    45b8:	cb 01       	movw	r24, r22
    45ba:	f8 01       	movw	r30, r16
    45bc:	80 83       	st	Z, r24
    45be:	91 83       	std	Z+1, r25	; 0x01
    45c0:	a2 83       	std	Z+2, r26	; 0x02
    45c2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    45c4:	fe 01       	movw	r30, r28
    45c6:	ef 55       	subi	r30, 0x5F	; 95
    45c8:	ff 4f       	sbci	r31, 0xFF	; 255
    45ca:	60 81       	ld	r22, Z
    45cc:	71 81       	ldd	r23, Z+1	; 0x01
    45ce:	82 81       	ldd	r24, Z+2	; 0x02
    45d0:	93 81       	ldd	r25, Z+3	; 0x03
    45d2:	20 e0       	ldi	r18, 0x00	; 0
    45d4:	30 e0       	ldi	r19, 0x00	; 0
    45d6:	40 e8       	ldi	r20, 0x80	; 128
    45d8:	5f e3       	ldi	r21, 0x3F	; 63
    45da:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    45de:	88 23       	and	r24, r24
    45e0:	44 f4       	brge	.+16     	; 0x45f2 <main+0x2642>
		__ticks = 1;
    45e2:	fe 01       	movw	r30, r28
    45e4:	e1 56       	subi	r30, 0x61	; 97
    45e6:	ff 4f       	sbci	r31, 0xFF	; 255
    45e8:	81 e0       	ldi	r24, 0x01	; 1
    45ea:	90 e0       	ldi	r25, 0x00	; 0
    45ec:	91 83       	std	Z+1, r25	; 0x01
    45ee:	80 83       	st	Z, r24
    45f0:	64 c0       	rjmp	.+200    	; 0x46ba <main+0x270a>
	else if (__tmp > 65535)
    45f2:	fe 01       	movw	r30, r28
    45f4:	ef 55       	subi	r30, 0x5F	; 95
    45f6:	ff 4f       	sbci	r31, 0xFF	; 255
    45f8:	60 81       	ld	r22, Z
    45fa:	71 81       	ldd	r23, Z+1	; 0x01
    45fc:	82 81       	ldd	r24, Z+2	; 0x02
    45fe:	93 81       	ldd	r25, Z+3	; 0x03
    4600:	20 e0       	ldi	r18, 0x00	; 0
    4602:	3f ef       	ldi	r19, 0xFF	; 255
    4604:	4f e7       	ldi	r20, 0x7F	; 127
    4606:	57 e4       	ldi	r21, 0x47	; 71
    4608:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    460c:	18 16       	cp	r1, r24
    460e:	0c f0       	brlt	.+2      	; 0x4612 <main+0x2662>
    4610:	43 c0       	rjmp	.+134    	; 0x4698 <main+0x26e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4612:	fe 01       	movw	r30, r28
    4614:	eb 55       	subi	r30, 0x5B	; 91
    4616:	ff 4f       	sbci	r31, 0xFF	; 255
    4618:	60 81       	ld	r22, Z
    461a:	71 81       	ldd	r23, Z+1	; 0x01
    461c:	82 81       	ldd	r24, Z+2	; 0x02
    461e:	93 81       	ldd	r25, Z+3	; 0x03
    4620:	20 e0       	ldi	r18, 0x00	; 0
    4622:	30 e0       	ldi	r19, 0x00	; 0
    4624:	40 e2       	ldi	r20, 0x20	; 32
    4626:	51 e4       	ldi	r21, 0x41	; 65
    4628:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    462c:	dc 01       	movw	r26, r24
    462e:	cb 01       	movw	r24, r22
    4630:	8e 01       	movw	r16, r28
    4632:	01 56       	subi	r16, 0x61	; 97
    4634:	1f 4f       	sbci	r17, 0xFF	; 255
    4636:	bc 01       	movw	r22, r24
    4638:	cd 01       	movw	r24, r26
    463a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    463e:	dc 01       	movw	r26, r24
    4640:	cb 01       	movw	r24, r22
    4642:	f8 01       	movw	r30, r16
    4644:	91 83       	std	Z+1, r25	; 0x01
    4646:	80 83       	st	Z, r24
    4648:	1f c0       	rjmp	.+62     	; 0x4688 <main+0x26d8>
    464a:	fe 01       	movw	r30, r28
    464c:	e3 56       	subi	r30, 0x63	; 99
    464e:	ff 4f       	sbci	r31, 0xFF	; 255
    4650:	88 ec       	ldi	r24, 0xC8	; 200
    4652:	90 e0       	ldi	r25, 0x00	; 0
    4654:	91 83       	std	Z+1, r25	; 0x01
    4656:	80 83       	st	Z, r24
    4658:	fe 01       	movw	r30, r28
    465a:	e3 56       	subi	r30, 0x63	; 99
    465c:	ff 4f       	sbci	r31, 0xFF	; 255
    465e:	80 81       	ld	r24, Z
    4660:	91 81       	ldd	r25, Z+1	; 0x01
    4662:	01 97       	sbiw	r24, 0x01	; 1
    4664:	f1 f7       	brne	.-4      	; 0x4662 <main+0x26b2>
    4666:	fe 01       	movw	r30, r28
    4668:	e3 56       	subi	r30, 0x63	; 99
    466a:	ff 4f       	sbci	r31, 0xFF	; 255
    466c:	91 83       	std	Z+1, r25	; 0x01
    466e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4670:	de 01       	movw	r26, r28
    4672:	a1 56       	subi	r26, 0x61	; 97
    4674:	bf 4f       	sbci	r27, 0xFF	; 255
    4676:	fe 01       	movw	r30, r28
    4678:	e1 56       	subi	r30, 0x61	; 97
    467a:	ff 4f       	sbci	r31, 0xFF	; 255
    467c:	80 81       	ld	r24, Z
    467e:	91 81       	ldd	r25, Z+1	; 0x01
    4680:	01 97       	sbiw	r24, 0x01	; 1
    4682:	11 96       	adiw	r26, 0x01	; 1
    4684:	9c 93       	st	X, r25
    4686:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4688:	fe 01       	movw	r30, r28
    468a:	e1 56       	subi	r30, 0x61	; 97
    468c:	ff 4f       	sbci	r31, 0xFF	; 255
    468e:	80 81       	ld	r24, Z
    4690:	91 81       	ldd	r25, Z+1	; 0x01
    4692:	00 97       	sbiw	r24, 0x00	; 0
    4694:	d1 f6       	brne	.-76     	; 0x464a <main+0x269a>
    4696:	27 c0       	rjmp	.+78     	; 0x46e6 <main+0x2736>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4698:	8e 01       	movw	r16, r28
    469a:	01 56       	subi	r16, 0x61	; 97
    469c:	1f 4f       	sbci	r17, 0xFF	; 255
    469e:	fe 01       	movw	r30, r28
    46a0:	ef 55       	subi	r30, 0x5F	; 95
    46a2:	ff 4f       	sbci	r31, 0xFF	; 255
    46a4:	60 81       	ld	r22, Z
    46a6:	71 81       	ldd	r23, Z+1	; 0x01
    46a8:	82 81       	ldd	r24, Z+2	; 0x02
    46aa:	93 81       	ldd	r25, Z+3	; 0x03
    46ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    46b0:	dc 01       	movw	r26, r24
    46b2:	cb 01       	movw	r24, r22
    46b4:	f8 01       	movw	r30, r16
    46b6:	91 83       	std	Z+1, r25	; 0x01
    46b8:	80 83       	st	Z, r24
    46ba:	de 01       	movw	r26, r28
    46bc:	a5 56       	subi	r26, 0x65	; 101
    46be:	bf 4f       	sbci	r27, 0xFF	; 255
    46c0:	fe 01       	movw	r30, r28
    46c2:	e1 56       	subi	r30, 0x61	; 97
    46c4:	ff 4f       	sbci	r31, 0xFF	; 255
    46c6:	80 81       	ld	r24, Z
    46c8:	91 81       	ldd	r25, Z+1	; 0x01
    46ca:	8d 93       	st	X+, r24
    46cc:	9c 93       	st	X, r25
    46ce:	fe 01       	movw	r30, r28
    46d0:	e5 56       	subi	r30, 0x65	; 101
    46d2:	ff 4f       	sbci	r31, 0xFF	; 255
    46d4:	80 81       	ld	r24, Z
    46d6:	91 81       	ldd	r25, Z+1	; 0x01
    46d8:	01 97       	sbiw	r24, 0x01	; 1
    46da:	f1 f7       	brne	.-4      	; 0x46d8 <main+0x2728>
    46dc:	fe 01       	movw	r30, r28
    46de:	e5 56       	subi	r30, 0x65	; 101
    46e0:	ff 4f       	sbci	r31, 0xFF	; 255
    46e2:	91 83       	std	Z+1, r25	; 0x01
    46e4:	80 83       	st	Z, r24
					{
						_delay_ms(150);
						Local_S_2=0;
    46e6:	fe 01       	movw	r30, r28
    46e8:	ef 53       	subi	r30, 0x3F	; 63
    46ea:	fe 4f       	sbci	r31, 0xFE	; 254
    46ec:	10 82       	st	Z, r1
						CLCD_voidGoToXY(0,7);
    46ee:	80 e0       	ldi	r24, 0x00	; 0
    46f0:	67 e0       	ldi	r22, 0x07	; 7
    46f2:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_S_2);
    46f6:	fe 01       	movw	r30, r28
    46f8:	ef 53       	subi	r30, 0x3F	; 63
    46fa:	fe 4f       	sbci	r31, 0xFE	; 254
    46fc:	80 81       	ld	r24, Z
    46fe:	88 2f       	mov	r24, r24
    4700:	90 e0       	ldi	r25, 0x00	; 0
    4702:	a0 e0       	ldi	r26, 0x00	; 0
    4704:	b0 e0       	ldi	r27, 0x00	; 0
    4706:	bc 01       	movw	r22, r24
    4708:	cd 01       	movw	r24, r26
    470a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    470e:	dc 01       	movw	r26, r24
    4710:	cb 01       	movw	r24, r22
    4712:	bc 01       	movw	r22, r24
    4714:	cd 01       	movw	r24, r26
    4716:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    471a:	82 c2       	rjmp	.+1284   	; 0x4c20 <main+0x2c70>
    471c:	fe 01       	movw	r30, r28
    471e:	e9 56       	subi	r30, 0x69	; 105
    4720:	ff 4f       	sbci	r31, 0xFF	; 255
    4722:	80 e0       	ldi	r24, 0x00	; 0
    4724:	90 e0       	ldi	r25, 0x00	; 0
    4726:	a6 e1       	ldi	r26, 0x16	; 22
    4728:	b3 e4       	ldi	r27, 0x43	; 67
    472a:	80 83       	st	Z, r24
    472c:	91 83       	std	Z+1, r25	; 0x01
    472e:	a2 83       	std	Z+2, r26	; 0x02
    4730:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4732:	8e 01       	movw	r16, r28
    4734:	0d 56       	subi	r16, 0x6D	; 109
    4736:	1f 4f       	sbci	r17, 0xFF	; 255
    4738:	fe 01       	movw	r30, r28
    473a:	e9 56       	subi	r30, 0x69	; 105
    473c:	ff 4f       	sbci	r31, 0xFF	; 255
    473e:	60 81       	ld	r22, Z
    4740:	71 81       	ldd	r23, Z+1	; 0x01
    4742:	82 81       	ldd	r24, Z+2	; 0x02
    4744:	93 81       	ldd	r25, Z+3	; 0x03
    4746:	20 e0       	ldi	r18, 0x00	; 0
    4748:	30 e0       	ldi	r19, 0x00	; 0
    474a:	4a ef       	ldi	r20, 0xFA	; 250
    474c:	54 e4       	ldi	r21, 0x44	; 68
    474e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4752:	dc 01       	movw	r26, r24
    4754:	cb 01       	movw	r24, r22
    4756:	f8 01       	movw	r30, r16
    4758:	80 83       	st	Z, r24
    475a:	91 83       	std	Z+1, r25	; 0x01
    475c:	a2 83       	std	Z+2, r26	; 0x02
    475e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4760:	fe 01       	movw	r30, r28
    4762:	ed 56       	subi	r30, 0x6D	; 109
    4764:	ff 4f       	sbci	r31, 0xFF	; 255
    4766:	60 81       	ld	r22, Z
    4768:	71 81       	ldd	r23, Z+1	; 0x01
    476a:	82 81       	ldd	r24, Z+2	; 0x02
    476c:	93 81       	ldd	r25, Z+3	; 0x03
    476e:	20 e0       	ldi	r18, 0x00	; 0
    4770:	30 e0       	ldi	r19, 0x00	; 0
    4772:	40 e8       	ldi	r20, 0x80	; 128
    4774:	5f e3       	ldi	r21, 0x3F	; 63
    4776:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    477a:	88 23       	and	r24, r24
    477c:	44 f4       	brge	.+16     	; 0x478e <main+0x27de>
		__ticks = 1;
    477e:	fe 01       	movw	r30, r28
    4780:	ef 56       	subi	r30, 0x6F	; 111
    4782:	ff 4f       	sbci	r31, 0xFF	; 255
    4784:	81 e0       	ldi	r24, 0x01	; 1
    4786:	90 e0       	ldi	r25, 0x00	; 0
    4788:	91 83       	std	Z+1, r25	; 0x01
    478a:	80 83       	st	Z, r24
    478c:	64 c0       	rjmp	.+200    	; 0x4856 <main+0x28a6>
	else if (__tmp > 65535)
    478e:	fe 01       	movw	r30, r28
    4790:	ed 56       	subi	r30, 0x6D	; 109
    4792:	ff 4f       	sbci	r31, 0xFF	; 255
    4794:	60 81       	ld	r22, Z
    4796:	71 81       	ldd	r23, Z+1	; 0x01
    4798:	82 81       	ldd	r24, Z+2	; 0x02
    479a:	93 81       	ldd	r25, Z+3	; 0x03
    479c:	20 e0       	ldi	r18, 0x00	; 0
    479e:	3f ef       	ldi	r19, 0xFF	; 255
    47a0:	4f e7       	ldi	r20, 0x7F	; 127
    47a2:	57 e4       	ldi	r21, 0x47	; 71
    47a4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    47a8:	18 16       	cp	r1, r24
    47aa:	0c f0       	brlt	.+2      	; 0x47ae <main+0x27fe>
    47ac:	43 c0       	rjmp	.+134    	; 0x4834 <main+0x2884>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47ae:	fe 01       	movw	r30, r28
    47b0:	e9 56       	subi	r30, 0x69	; 105
    47b2:	ff 4f       	sbci	r31, 0xFF	; 255
    47b4:	60 81       	ld	r22, Z
    47b6:	71 81       	ldd	r23, Z+1	; 0x01
    47b8:	82 81       	ldd	r24, Z+2	; 0x02
    47ba:	93 81       	ldd	r25, Z+3	; 0x03
    47bc:	20 e0       	ldi	r18, 0x00	; 0
    47be:	30 e0       	ldi	r19, 0x00	; 0
    47c0:	40 e2       	ldi	r20, 0x20	; 32
    47c2:	51 e4       	ldi	r21, 0x41	; 65
    47c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    47c8:	dc 01       	movw	r26, r24
    47ca:	cb 01       	movw	r24, r22
    47cc:	8e 01       	movw	r16, r28
    47ce:	0f 56       	subi	r16, 0x6F	; 111
    47d0:	1f 4f       	sbci	r17, 0xFF	; 255
    47d2:	bc 01       	movw	r22, r24
    47d4:	cd 01       	movw	r24, r26
    47d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    47da:	dc 01       	movw	r26, r24
    47dc:	cb 01       	movw	r24, r22
    47de:	f8 01       	movw	r30, r16
    47e0:	91 83       	std	Z+1, r25	; 0x01
    47e2:	80 83       	st	Z, r24
    47e4:	1f c0       	rjmp	.+62     	; 0x4824 <main+0x2874>
    47e6:	fe 01       	movw	r30, r28
    47e8:	e1 57       	subi	r30, 0x71	; 113
    47ea:	ff 4f       	sbci	r31, 0xFF	; 255
    47ec:	88 ec       	ldi	r24, 0xC8	; 200
    47ee:	90 e0       	ldi	r25, 0x00	; 0
    47f0:	91 83       	std	Z+1, r25	; 0x01
    47f2:	80 83       	st	Z, r24
    47f4:	fe 01       	movw	r30, r28
    47f6:	e1 57       	subi	r30, 0x71	; 113
    47f8:	ff 4f       	sbci	r31, 0xFF	; 255
    47fa:	80 81       	ld	r24, Z
    47fc:	91 81       	ldd	r25, Z+1	; 0x01
    47fe:	01 97       	sbiw	r24, 0x01	; 1
    4800:	f1 f7       	brne	.-4      	; 0x47fe <main+0x284e>
    4802:	fe 01       	movw	r30, r28
    4804:	e1 57       	subi	r30, 0x71	; 113
    4806:	ff 4f       	sbci	r31, 0xFF	; 255
    4808:	91 83       	std	Z+1, r25	; 0x01
    480a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    480c:	de 01       	movw	r26, r28
    480e:	af 56       	subi	r26, 0x6F	; 111
    4810:	bf 4f       	sbci	r27, 0xFF	; 255
    4812:	fe 01       	movw	r30, r28
    4814:	ef 56       	subi	r30, 0x6F	; 111
    4816:	ff 4f       	sbci	r31, 0xFF	; 255
    4818:	80 81       	ld	r24, Z
    481a:	91 81       	ldd	r25, Z+1	; 0x01
    481c:	01 97       	sbiw	r24, 0x01	; 1
    481e:	11 96       	adiw	r26, 0x01	; 1
    4820:	9c 93       	st	X, r25
    4822:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4824:	fe 01       	movw	r30, r28
    4826:	ef 56       	subi	r30, 0x6F	; 111
    4828:	ff 4f       	sbci	r31, 0xFF	; 255
    482a:	80 81       	ld	r24, Z
    482c:	91 81       	ldd	r25, Z+1	; 0x01
    482e:	00 97       	sbiw	r24, 0x00	; 0
    4830:	d1 f6       	brne	.-76     	; 0x47e6 <main+0x2836>
    4832:	27 c0       	rjmp	.+78     	; 0x4882 <main+0x28d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4834:	8e 01       	movw	r16, r28
    4836:	0f 56       	subi	r16, 0x6F	; 111
    4838:	1f 4f       	sbci	r17, 0xFF	; 255
    483a:	fe 01       	movw	r30, r28
    483c:	ed 56       	subi	r30, 0x6D	; 109
    483e:	ff 4f       	sbci	r31, 0xFF	; 255
    4840:	60 81       	ld	r22, Z
    4842:	71 81       	ldd	r23, Z+1	; 0x01
    4844:	82 81       	ldd	r24, Z+2	; 0x02
    4846:	93 81       	ldd	r25, Z+3	; 0x03
    4848:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    484c:	dc 01       	movw	r26, r24
    484e:	cb 01       	movw	r24, r22
    4850:	f8 01       	movw	r30, r16
    4852:	91 83       	std	Z+1, r25	; 0x01
    4854:	80 83       	st	Z, r24
    4856:	de 01       	movw	r26, r28
    4858:	a3 57       	subi	r26, 0x73	; 115
    485a:	bf 4f       	sbci	r27, 0xFF	; 255
    485c:	fe 01       	movw	r30, r28
    485e:	ef 56       	subi	r30, 0x6F	; 111
    4860:	ff 4f       	sbci	r31, 0xFF	; 255
    4862:	80 81       	ld	r24, Z
    4864:	91 81       	ldd	r25, Z+1	; 0x01
    4866:	8d 93       	st	X+, r24
    4868:	9c 93       	st	X, r25
    486a:	fe 01       	movw	r30, r28
    486c:	e3 57       	subi	r30, 0x73	; 115
    486e:	ff 4f       	sbci	r31, 0xFF	; 255
    4870:	80 81       	ld	r24, Z
    4872:	91 81       	ldd	r25, Z+1	; 0x01
    4874:	01 97       	sbiw	r24, 0x01	; 1
    4876:	f1 f7       	brne	.-4      	; 0x4874 <main+0x28c4>
    4878:	fe 01       	movw	r30, r28
    487a:	e3 57       	subi	r30, 0x73	; 115
    487c:	ff 4f       	sbci	r31, 0xFF	; 255
    487e:	91 83       	std	Z+1, r25	; 0x01
    4880:	80 83       	st	Z, r24
					}
					else
					{
						_delay_ms(150);
						Local_S_2++;
    4882:	de 01       	movw	r26, r28
    4884:	af 53       	subi	r26, 0x3F	; 63
    4886:	be 4f       	sbci	r27, 0xFE	; 254
    4888:	fe 01       	movw	r30, r28
    488a:	ef 53       	subi	r30, 0x3F	; 63
    488c:	fe 4f       	sbci	r31, 0xFE	; 254
    488e:	80 81       	ld	r24, Z
    4890:	8f 5f       	subi	r24, 0xFF	; 255
    4892:	8c 93       	st	X, r24

						CLCD_voidGoToXY(0,7);
    4894:	80 e0       	ldi	r24, 0x00	; 0
    4896:	67 e0       	ldi	r22, 0x07	; 7
    4898:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_S_2);
    489c:	fe 01       	movw	r30, r28
    489e:	ef 53       	subi	r30, 0x3F	; 63
    48a0:	fe 4f       	sbci	r31, 0xFE	; 254
    48a2:	80 81       	ld	r24, Z
    48a4:	88 2f       	mov	r24, r24
    48a6:	90 e0       	ldi	r25, 0x00	; 0
    48a8:	a0 e0       	ldi	r26, 0x00	; 0
    48aa:	b0 e0       	ldi	r27, 0x00	; 0
    48ac:	bc 01       	movw	r22, r24
    48ae:	cd 01       	movw	r24, r26
    48b0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    48b4:	dc 01       	movw	r26, r24
    48b6:	cb 01       	movw	r24, r22
    48b8:	bc 01       	movw	r22, r24
    48ba:	cd 01       	movw	r24, r26
    48bc:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    48c0:	af c1       	rjmp	.+862    	; 0x4c20 <main+0x2c70>
					}


				}
				else if (PB_u8GetState(DIO_u8PORTD,DIO_u8PIN3)==1)
    48c2:	83 e0       	ldi	r24, 0x03	; 3
    48c4:	63 e0       	ldi	r22, 0x03	; 3
    48c6:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    48ca:	81 30       	cpi	r24, 0x01	; 1
    48cc:	09 f0       	breq	.+2      	; 0x48d0 <main+0x2920>
    48ce:	a8 c1       	rjmp	.+848    	; 0x4c20 <main+0x2c70>
				{
					if (Local_S_2<=0)
    48d0:	fe 01       	movw	r30, r28
    48d2:	ef 53       	subi	r30, 0x3F	; 63
    48d4:	fe 4f       	sbci	r31, 0xFE	; 254
    48d6:	80 81       	ld	r24, Z
    48d8:	88 23       	and	r24, r24
    48da:	09 f0       	breq	.+2      	; 0x48de <main+0x292e>
    48dc:	cf c0       	rjmp	.+414    	; 0x4a7c <main+0x2acc>
    48de:	fe 01       	movw	r30, r28
    48e0:	e7 57       	subi	r30, 0x77	; 119
    48e2:	ff 4f       	sbci	r31, 0xFF	; 255
    48e4:	80 e0       	ldi	r24, 0x00	; 0
    48e6:	90 e0       	ldi	r25, 0x00	; 0
    48e8:	a6 e1       	ldi	r26, 0x16	; 22
    48ea:	b3 e4       	ldi	r27, 0x43	; 67
    48ec:	80 83       	st	Z, r24
    48ee:	91 83       	std	Z+1, r25	; 0x01
    48f0:	a2 83       	std	Z+2, r26	; 0x02
    48f2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    48f4:	8e 01       	movw	r16, r28
    48f6:	0b 57       	subi	r16, 0x7B	; 123
    48f8:	1f 4f       	sbci	r17, 0xFF	; 255
    48fa:	fe 01       	movw	r30, r28
    48fc:	e7 57       	subi	r30, 0x77	; 119
    48fe:	ff 4f       	sbci	r31, 0xFF	; 255
    4900:	60 81       	ld	r22, Z
    4902:	71 81       	ldd	r23, Z+1	; 0x01
    4904:	82 81       	ldd	r24, Z+2	; 0x02
    4906:	93 81       	ldd	r25, Z+3	; 0x03
    4908:	20 e0       	ldi	r18, 0x00	; 0
    490a:	30 e0       	ldi	r19, 0x00	; 0
    490c:	4a ef       	ldi	r20, 0xFA	; 250
    490e:	54 e4       	ldi	r21, 0x44	; 68
    4910:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4914:	dc 01       	movw	r26, r24
    4916:	cb 01       	movw	r24, r22
    4918:	f8 01       	movw	r30, r16
    491a:	80 83       	st	Z, r24
    491c:	91 83       	std	Z+1, r25	; 0x01
    491e:	a2 83       	std	Z+2, r26	; 0x02
    4920:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4922:	fe 01       	movw	r30, r28
    4924:	eb 57       	subi	r30, 0x7B	; 123
    4926:	ff 4f       	sbci	r31, 0xFF	; 255
    4928:	60 81       	ld	r22, Z
    492a:	71 81       	ldd	r23, Z+1	; 0x01
    492c:	82 81       	ldd	r24, Z+2	; 0x02
    492e:	93 81       	ldd	r25, Z+3	; 0x03
    4930:	20 e0       	ldi	r18, 0x00	; 0
    4932:	30 e0       	ldi	r19, 0x00	; 0
    4934:	40 e8       	ldi	r20, 0x80	; 128
    4936:	5f e3       	ldi	r21, 0x3F	; 63
    4938:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    493c:	88 23       	and	r24, r24
    493e:	44 f4       	brge	.+16     	; 0x4950 <main+0x29a0>
		__ticks = 1;
    4940:	fe 01       	movw	r30, r28
    4942:	ed 57       	subi	r30, 0x7D	; 125
    4944:	ff 4f       	sbci	r31, 0xFF	; 255
    4946:	81 e0       	ldi	r24, 0x01	; 1
    4948:	90 e0       	ldi	r25, 0x00	; 0
    494a:	91 83       	std	Z+1, r25	; 0x01
    494c:	80 83       	st	Z, r24
    494e:	64 c0       	rjmp	.+200    	; 0x4a18 <main+0x2a68>
	else if (__tmp > 65535)
    4950:	fe 01       	movw	r30, r28
    4952:	eb 57       	subi	r30, 0x7B	; 123
    4954:	ff 4f       	sbci	r31, 0xFF	; 255
    4956:	60 81       	ld	r22, Z
    4958:	71 81       	ldd	r23, Z+1	; 0x01
    495a:	82 81       	ldd	r24, Z+2	; 0x02
    495c:	93 81       	ldd	r25, Z+3	; 0x03
    495e:	20 e0       	ldi	r18, 0x00	; 0
    4960:	3f ef       	ldi	r19, 0xFF	; 255
    4962:	4f e7       	ldi	r20, 0x7F	; 127
    4964:	57 e4       	ldi	r21, 0x47	; 71
    4966:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    496a:	18 16       	cp	r1, r24
    496c:	0c f0       	brlt	.+2      	; 0x4970 <main+0x29c0>
    496e:	43 c0       	rjmp	.+134    	; 0x49f6 <main+0x2a46>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4970:	fe 01       	movw	r30, r28
    4972:	e7 57       	subi	r30, 0x77	; 119
    4974:	ff 4f       	sbci	r31, 0xFF	; 255
    4976:	60 81       	ld	r22, Z
    4978:	71 81       	ldd	r23, Z+1	; 0x01
    497a:	82 81       	ldd	r24, Z+2	; 0x02
    497c:	93 81       	ldd	r25, Z+3	; 0x03
    497e:	20 e0       	ldi	r18, 0x00	; 0
    4980:	30 e0       	ldi	r19, 0x00	; 0
    4982:	40 e2       	ldi	r20, 0x20	; 32
    4984:	51 e4       	ldi	r21, 0x41	; 65
    4986:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    498a:	dc 01       	movw	r26, r24
    498c:	cb 01       	movw	r24, r22
    498e:	8e 01       	movw	r16, r28
    4990:	0d 57       	subi	r16, 0x7D	; 125
    4992:	1f 4f       	sbci	r17, 0xFF	; 255
    4994:	bc 01       	movw	r22, r24
    4996:	cd 01       	movw	r24, r26
    4998:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    499c:	dc 01       	movw	r26, r24
    499e:	cb 01       	movw	r24, r22
    49a0:	f8 01       	movw	r30, r16
    49a2:	91 83       	std	Z+1, r25	; 0x01
    49a4:	80 83       	st	Z, r24
    49a6:	1f c0       	rjmp	.+62     	; 0x49e6 <main+0x2a36>
    49a8:	fe 01       	movw	r30, r28
    49aa:	ef 57       	subi	r30, 0x7F	; 127
    49ac:	ff 4f       	sbci	r31, 0xFF	; 255
    49ae:	88 ec       	ldi	r24, 0xC8	; 200
    49b0:	90 e0       	ldi	r25, 0x00	; 0
    49b2:	91 83       	std	Z+1, r25	; 0x01
    49b4:	80 83       	st	Z, r24
    49b6:	fe 01       	movw	r30, r28
    49b8:	ef 57       	subi	r30, 0x7F	; 127
    49ba:	ff 4f       	sbci	r31, 0xFF	; 255
    49bc:	80 81       	ld	r24, Z
    49be:	91 81       	ldd	r25, Z+1	; 0x01
    49c0:	01 97       	sbiw	r24, 0x01	; 1
    49c2:	f1 f7       	brne	.-4      	; 0x49c0 <main+0x2a10>
    49c4:	fe 01       	movw	r30, r28
    49c6:	ef 57       	subi	r30, 0x7F	; 127
    49c8:	ff 4f       	sbci	r31, 0xFF	; 255
    49ca:	91 83       	std	Z+1, r25	; 0x01
    49cc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    49ce:	de 01       	movw	r26, r28
    49d0:	ad 57       	subi	r26, 0x7D	; 125
    49d2:	bf 4f       	sbci	r27, 0xFF	; 255
    49d4:	fe 01       	movw	r30, r28
    49d6:	ed 57       	subi	r30, 0x7D	; 125
    49d8:	ff 4f       	sbci	r31, 0xFF	; 255
    49da:	80 81       	ld	r24, Z
    49dc:	91 81       	ldd	r25, Z+1	; 0x01
    49de:	01 97       	sbiw	r24, 0x01	; 1
    49e0:	11 96       	adiw	r26, 0x01	; 1
    49e2:	9c 93       	st	X, r25
    49e4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    49e6:	fe 01       	movw	r30, r28
    49e8:	ed 57       	subi	r30, 0x7D	; 125
    49ea:	ff 4f       	sbci	r31, 0xFF	; 255
    49ec:	80 81       	ld	r24, Z
    49ee:	91 81       	ldd	r25, Z+1	; 0x01
    49f0:	00 97       	sbiw	r24, 0x00	; 0
    49f2:	d1 f6       	brne	.-76     	; 0x49a8 <main+0x29f8>
    49f4:	27 c0       	rjmp	.+78     	; 0x4a44 <main+0x2a94>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49f6:	8e 01       	movw	r16, r28
    49f8:	0d 57       	subi	r16, 0x7D	; 125
    49fa:	1f 4f       	sbci	r17, 0xFF	; 255
    49fc:	fe 01       	movw	r30, r28
    49fe:	eb 57       	subi	r30, 0x7B	; 123
    4a00:	ff 4f       	sbci	r31, 0xFF	; 255
    4a02:	60 81       	ld	r22, Z
    4a04:	71 81       	ldd	r23, Z+1	; 0x01
    4a06:	82 81       	ldd	r24, Z+2	; 0x02
    4a08:	93 81       	ldd	r25, Z+3	; 0x03
    4a0a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a0e:	dc 01       	movw	r26, r24
    4a10:	cb 01       	movw	r24, r22
    4a12:	f8 01       	movw	r30, r16
    4a14:	91 83       	std	Z+1, r25	; 0x01
    4a16:	80 83       	st	Z, r24
    4a18:	de 01       	movw	r26, r28
    4a1a:	a1 58       	subi	r26, 0x81	; 129
    4a1c:	bf 4f       	sbci	r27, 0xFF	; 255
    4a1e:	fe 01       	movw	r30, r28
    4a20:	ed 57       	subi	r30, 0x7D	; 125
    4a22:	ff 4f       	sbci	r31, 0xFF	; 255
    4a24:	80 81       	ld	r24, Z
    4a26:	91 81       	ldd	r25, Z+1	; 0x01
    4a28:	8d 93       	st	X+, r24
    4a2a:	9c 93       	st	X, r25
    4a2c:	fe 01       	movw	r30, r28
    4a2e:	e1 58       	subi	r30, 0x81	; 129
    4a30:	ff 4f       	sbci	r31, 0xFF	; 255
    4a32:	80 81       	ld	r24, Z
    4a34:	91 81       	ldd	r25, Z+1	; 0x01
    4a36:	01 97       	sbiw	r24, 0x01	; 1
    4a38:	f1 f7       	brne	.-4      	; 0x4a36 <main+0x2a86>
    4a3a:	fe 01       	movw	r30, r28
    4a3c:	e1 58       	subi	r30, 0x81	; 129
    4a3e:	ff 4f       	sbci	r31, 0xFF	; 255
    4a40:	91 83       	std	Z+1, r25	; 0x01
    4a42:	80 83       	st	Z, r24
					{
						_delay_ms(150);
						Local_S_2=9;
    4a44:	fe 01       	movw	r30, r28
    4a46:	ef 53       	subi	r30, 0x3F	; 63
    4a48:	fe 4f       	sbci	r31, 0xFE	; 254
    4a4a:	89 e0       	ldi	r24, 0x09	; 9
    4a4c:	80 83       	st	Z, r24
						CLCD_voidGoToXY(0,7);
    4a4e:	80 e0       	ldi	r24, 0x00	; 0
    4a50:	67 e0       	ldi	r22, 0x07	; 7
    4a52:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
						CLCD_VoidWriteNumber(Local_S_2);
    4a56:	fe 01       	movw	r30, r28
    4a58:	ef 53       	subi	r30, 0x3F	; 63
    4a5a:	fe 4f       	sbci	r31, 0xFE	; 254
    4a5c:	80 81       	ld	r24, Z
    4a5e:	88 2f       	mov	r24, r24
    4a60:	90 e0       	ldi	r25, 0x00	; 0
    4a62:	a0 e0       	ldi	r26, 0x00	; 0
    4a64:	b0 e0       	ldi	r27, 0x00	; 0
    4a66:	bc 01       	movw	r22, r24
    4a68:	cd 01       	movw	r24, r26
    4a6a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    4a6e:	dc 01       	movw	r26, r24
    4a70:	cb 01       	movw	r24, r22
    4a72:	bc 01       	movw	r22, r24
    4a74:	cd 01       	movw	r24, r26
    4a76:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
    4a7a:	d2 c0       	rjmp	.+420    	; 0x4c20 <main+0x2c70>
    4a7c:	fe 01       	movw	r30, r28
    4a7e:	e5 58       	subi	r30, 0x85	; 133
    4a80:	ff 4f       	sbci	r31, 0xFF	; 255
    4a82:	80 e0       	ldi	r24, 0x00	; 0
    4a84:	90 e0       	ldi	r25, 0x00	; 0
    4a86:	a8 e4       	ldi	r26, 0x48	; 72
    4a88:	b3 e4       	ldi	r27, 0x43	; 67
    4a8a:	80 83       	st	Z, r24
    4a8c:	91 83       	std	Z+1, r25	; 0x01
    4a8e:	a2 83       	std	Z+2, r26	; 0x02
    4a90:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4a92:	8e 01       	movw	r16, r28
    4a94:	09 58       	subi	r16, 0x89	; 137
    4a96:	1f 4f       	sbci	r17, 0xFF	; 255
    4a98:	fe 01       	movw	r30, r28
    4a9a:	e5 58       	subi	r30, 0x85	; 133
    4a9c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a9e:	60 81       	ld	r22, Z
    4aa0:	71 81       	ldd	r23, Z+1	; 0x01
    4aa2:	82 81       	ldd	r24, Z+2	; 0x02
    4aa4:	93 81       	ldd	r25, Z+3	; 0x03
    4aa6:	20 e0       	ldi	r18, 0x00	; 0
    4aa8:	30 e0       	ldi	r19, 0x00	; 0
    4aaa:	4a ef       	ldi	r20, 0xFA	; 250
    4aac:	54 e4       	ldi	r21, 0x44	; 68
    4aae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4ab2:	dc 01       	movw	r26, r24
    4ab4:	cb 01       	movw	r24, r22
    4ab6:	f8 01       	movw	r30, r16
    4ab8:	80 83       	st	Z, r24
    4aba:	91 83       	std	Z+1, r25	; 0x01
    4abc:	a2 83       	std	Z+2, r26	; 0x02
    4abe:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4ac0:	fe 01       	movw	r30, r28
    4ac2:	e9 58       	subi	r30, 0x89	; 137
    4ac4:	ff 4f       	sbci	r31, 0xFF	; 255
    4ac6:	60 81       	ld	r22, Z
    4ac8:	71 81       	ldd	r23, Z+1	; 0x01
    4aca:	82 81       	ldd	r24, Z+2	; 0x02
    4acc:	93 81       	ldd	r25, Z+3	; 0x03
    4ace:	20 e0       	ldi	r18, 0x00	; 0
    4ad0:	30 e0       	ldi	r19, 0x00	; 0
    4ad2:	40 e8       	ldi	r20, 0x80	; 128
    4ad4:	5f e3       	ldi	r21, 0x3F	; 63
    4ad6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4ada:	88 23       	and	r24, r24
    4adc:	44 f4       	brge	.+16     	; 0x4aee <main+0x2b3e>
		__ticks = 1;
    4ade:	fe 01       	movw	r30, r28
    4ae0:	eb 58       	subi	r30, 0x8B	; 139
    4ae2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ae4:	81 e0       	ldi	r24, 0x01	; 1
    4ae6:	90 e0       	ldi	r25, 0x00	; 0
    4ae8:	91 83       	std	Z+1, r25	; 0x01
    4aea:	80 83       	st	Z, r24
    4aec:	64 c0       	rjmp	.+200    	; 0x4bb6 <main+0x2c06>
	else if (__tmp > 65535)
    4aee:	fe 01       	movw	r30, r28
    4af0:	e9 58       	subi	r30, 0x89	; 137
    4af2:	ff 4f       	sbci	r31, 0xFF	; 255
    4af4:	60 81       	ld	r22, Z
    4af6:	71 81       	ldd	r23, Z+1	; 0x01
    4af8:	82 81       	ldd	r24, Z+2	; 0x02
    4afa:	93 81       	ldd	r25, Z+3	; 0x03
    4afc:	20 e0       	ldi	r18, 0x00	; 0
    4afe:	3f ef       	ldi	r19, 0xFF	; 255
    4b00:	4f e7       	ldi	r20, 0x7F	; 127
    4b02:	57 e4       	ldi	r21, 0x47	; 71
    4b04:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4b08:	18 16       	cp	r1, r24
    4b0a:	0c f0       	brlt	.+2      	; 0x4b0e <main+0x2b5e>
    4b0c:	43 c0       	rjmp	.+134    	; 0x4b94 <main+0x2be4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4b0e:	fe 01       	movw	r30, r28
    4b10:	e5 58       	subi	r30, 0x85	; 133
    4b12:	ff 4f       	sbci	r31, 0xFF	; 255
    4b14:	60 81       	ld	r22, Z
    4b16:	71 81       	ldd	r23, Z+1	; 0x01
    4b18:	82 81       	ldd	r24, Z+2	; 0x02
    4b1a:	93 81       	ldd	r25, Z+3	; 0x03
    4b1c:	20 e0       	ldi	r18, 0x00	; 0
    4b1e:	30 e0       	ldi	r19, 0x00	; 0
    4b20:	40 e2       	ldi	r20, 0x20	; 32
    4b22:	51 e4       	ldi	r21, 0x41	; 65
    4b24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4b28:	dc 01       	movw	r26, r24
    4b2a:	cb 01       	movw	r24, r22
    4b2c:	8e 01       	movw	r16, r28
    4b2e:	0b 58       	subi	r16, 0x8B	; 139
    4b30:	1f 4f       	sbci	r17, 0xFF	; 255
    4b32:	bc 01       	movw	r22, r24
    4b34:	cd 01       	movw	r24, r26
    4b36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4b3a:	dc 01       	movw	r26, r24
    4b3c:	cb 01       	movw	r24, r22
    4b3e:	f8 01       	movw	r30, r16
    4b40:	91 83       	std	Z+1, r25	; 0x01
    4b42:	80 83       	st	Z, r24
    4b44:	1f c0       	rjmp	.+62     	; 0x4b84 <main+0x2bd4>
    4b46:	fe 01       	movw	r30, r28
    4b48:	ed 58       	subi	r30, 0x8D	; 141
    4b4a:	ff 4f       	sbci	r31, 0xFF	; 255
    4b4c:	88 ec       	ldi	r24, 0xC8	; 200
    4b4e:	90 e0       	ldi	r25, 0x00	; 0
    4b50:	91 83       	std	Z+1, r25	; 0x01
    4b52:	80 83       	st	Z, r24
    4b54:	fe 01       	movw	r30, r28
    4b56:	ed 58       	subi	r30, 0x8D	; 141
    4b58:	ff 4f       	sbci	r31, 0xFF	; 255
    4b5a:	80 81       	ld	r24, Z
    4b5c:	91 81       	ldd	r25, Z+1	; 0x01
    4b5e:	01 97       	sbiw	r24, 0x01	; 1
    4b60:	f1 f7       	brne	.-4      	; 0x4b5e <main+0x2bae>
    4b62:	fe 01       	movw	r30, r28
    4b64:	ed 58       	subi	r30, 0x8D	; 141
    4b66:	ff 4f       	sbci	r31, 0xFF	; 255
    4b68:	91 83       	std	Z+1, r25	; 0x01
    4b6a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4b6c:	de 01       	movw	r26, r28
    4b6e:	ab 58       	subi	r26, 0x8B	; 139
    4b70:	bf 4f       	sbci	r27, 0xFF	; 255
    4b72:	fe 01       	movw	r30, r28
    4b74:	eb 58       	subi	r30, 0x8B	; 139
    4b76:	ff 4f       	sbci	r31, 0xFF	; 255
    4b78:	80 81       	ld	r24, Z
    4b7a:	91 81       	ldd	r25, Z+1	; 0x01
    4b7c:	01 97       	sbiw	r24, 0x01	; 1
    4b7e:	11 96       	adiw	r26, 0x01	; 1
    4b80:	9c 93       	st	X, r25
    4b82:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4b84:	fe 01       	movw	r30, r28
    4b86:	eb 58       	subi	r30, 0x8B	; 139
    4b88:	ff 4f       	sbci	r31, 0xFF	; 255
    4b8a:	80 81       	ld	r24, Z
    4b8c:	91 81       	ldd	r25, Z+1	; 0x01
    4b8e:	00 97       	sbiw	r24, 0x00	; 0
    4b90:	d1 f6       	brne	.-76     	; 0x4b46 <main+0x2b96>
    4b92:	27 c0       	rjmp	.+78     	; 0x4be2 <main+0x2c32>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4b94:	8e 01       	movw	r16, r28
    4b96:	0b 58       	subi	r16, 0x8B	; 139
    4b98:	1f 4f       	sbci	r17, 0xFF	; 255
    4b9a:	fe 01       	movw	r30, r28
    4b9c:	e9 58       	subi	r30, 0x89	; 137
    4b9e:	ff 4f       	sbci	r31, 0xFF	; 255
    4ba0:	60 81       	ld	r22, Z
    4ba2:	71 81       	ldd	r23, Z+1	; 0x01
    4ba4:	82 81       	ldd	r24, Z+2	; 0x02
    4ba6:	93 81       	ldd	r25, Z+3	; 0x03
    4ba8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4bac:	dc 01       	movw	r26, r24
    4bae:	cb 01       	movw	r24, r22
    4bb0:	f8 01       	movw	r30, r16
    4bb2:	91 83       	std	Z+1, r25	; 0x01
    4bb4:	80 83       	st	Z, r24
    4bb6:	de 01       	movw	r26, r28
    4bb8:	af 58       	subi	r26, 0x8F	; 143
    4bba:	bf 4f       	sbci	r27, 0xFF	; 255
    4bbc:	fe 01       	movw	r30, r28
    4bbe:	eb 58       	subi	r30, 0x8B	; 139
    4bc0:	ff 4f       	sbci	r31, 0xFF	; 255
    4bc2:	80 81       	ld	r24, Z
    4bc4:	91 81       	ldd	r25, Z+1	; 0x01
    4bc6:	8d 93       	st	X+, r24
    4bc8:	9c 93       	st	X, r25
    4bca:	fe 01       	movw	r30, r28
    4bcc:	ef 58       	subi	r30, 0x8F	; 143
    4bce:	ff 4f       	sbci	r31, 0xFF	; 255
    4bd0:	80 81       	ld	r24, Z
    4bd2:	91 81       	ldd	r25, Z+1	; 0x01
    4bd4:	01 97       	sbiw	r24, 0x01	; 1
    4bd6:	f1 f7       	brne	.-4      	; 0x4bd4 <main+0x2c24>
    4bd8:	fe 01       	movw	r30, r28
    4bda:	ef 58       	subi	r30, 0x8F	; 143
    4bdc:	ff 4f       	sbci	r31, 0xFF	; 255
    4bde:	91 83       	std	Z+1, r25	; 0x01
    4be0:	80 83       	st	Z, r24
					}
					else
					{
						_delay_ms(200);

						Local_S_2--;
    4be2:	de 01       	movw	r26, r28
    4be4:	af 53       	subi	r26, 0x3F	; 63
    4be6:	be 4f       	sbci	r27, 0xFE	; 254
    4be8:	fe 01       	movw	r30, r28
    4bea:	ef 53       	subi	r30, 0x3F	; 63
    4bec:	fe 4f       	sbci	r31, 0xFE	; 254
    4bee:	80 81       	ld	r24, Z
    4bf0:	81 50       	subi	r24, 0x01	; 1
    4bf2:	8c 93       	st	X, r24
						CLCD_voidGoToXY(0,7);
    4bf4:	80 e0       	ldi	r24, 0x00	; 0
    4bf6:	67 e0       	ldi	r22, 0x07	; 7
    4bf8:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>

						CLCD_VoidWriteNumber(Local_S_2);
    4bfc:	fe 01       	movw	r30, r28
    4bfe:	ef 53       	subi	r30, 0x3F	; 63
    4c00:	fe 4f       	sbci	r31, 0xFE	; 254
    4c02:	80 81       	ld	r24, Z
    4c04:	88 2f       	mov	r24, r24
    4c06:	90 e0       	ldi	r25, 0x00	; 0
    4c08:	a0 e0       	ldi	r26, 0x00	; 0
    4c0a:	b0 e0       	ldi	r27, 0x00	; 0
    4c0c:	bc 01       	movw	r22, r24
    4c0e:	cd 01       	movw	r24, r26
    4c10:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    4c14:	dc 01       	movw	r26, r24
    4c16:	cb 01       	movw	r24, r22
    4c18:	bc 01       	movw	r22, r24
    4c1a:	cd 01       	movw	r24, r26
    4c1c:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>
					}

				}

			}
			while(PB_u8GetState(DIO_u8PORTD,DIO_u8PIN4)!=1);
    4c20:	83 e0       	ldi	r24, 0x03	; 3
    4c22:	64 e0       	ldi	r22, 0x04	; 4
    4c24:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    4c28:	81 30       	cpi	r24, 0x01	; 1
    4c2a:	09 f0       	breq	.+2      	; 0x4c2e <main+0x2c7e>
    4c2c:	9b cc       	rjmp	.-1738   	; 0x4564 <main+0x25b4>

			CLCD_voidGoToXY(1,7);
    4c2e:	81 e0       	ldi	r24, 0x01	; 1
    4c30:	67 e0       	ldi	r22, 0x07	; 7
    4c32:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
			CLCD_voidSendData(' ');
    4c36:	80 e2       	ldi	r24, 0x20	; 32
    4c38:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <CLCD_voidSendData>
			CLCD_voidWriteSpecialCharacter(arrow,1,1,0);
    4c3c:	ce 01       	movw	r24, r28
    4c3e:	89 53       	subi	r24, 0x39	; 57
    4c40:	9e 4f       	sbci	r25, 0xFE	; 254
    4c42:	61 e0       	ldi	r22, 0x01	; 1
    4c44:	41 e0       	ldi	r20, 0x01	; 1
    4c46:	20 e0       	ldi	r18, 0x00	; 0
    4c48:	0e 94 77 0b 	call	0x16ee	; 0x16ee <CLCD_voidWriteSpecialCharacter>
    4c4c:	fe 01       	movw	r30, r28
    4c4e:	e3 59       	subi	r30, 0x93	; 147
    4c50:	ff 4f       	sbci	r31, 0xFF	; 255
    4c52:	80 e0       	ldi	r24, 0x00	; 0
    4c54:	90 e0       	ldi	r25, 0x00	; 0
    4c56:	aa e7       	ldi	r26, 0x7A	; 122
    4c58:	b4 e4       	ldi	r27, 0x44	; 68
    4c5a:	80 83       	st	Z, r24
    4c5c:	91 83       	std	Z+1, r25	; 0x01
    4c5e:	a2 83       	std	Z+2, r26	; 0x02
    4c60:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4c62:	8e 01       	movw	r16, r28
    4c64:	07 59       	subi	r16, 0x97	; 151
    4c66:	1f 4f       	sbci	r17, 0xFF	; 255
    4c68:	fe 01       	movw	r30, r28
    4c6a:	e3 59       	subi	r30, 0x93	; 147
    4c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    4c6e:	60 81       	ld	r22, Z
    4c70:	71 81       	ldd	r23, Z+1	; 0x01
    4c72:	82 81       	ldd	r24, Z+2	; 0x02
    4c74:	93 81       	ldd	r25, Z+3	; 0x03
    4c76:	20 e0       	ldi	r18, 0x00	; 0
    4c78:	30 e0       	ldi	r19, 0x00	; 0
    4c7a:	4a ef       	ldi	r20, 0xFA	; 250
    4c7c:	54 e4       	ldi	r21, 0x44	; 68
    4c7e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4c82:	dc 01       	movw	r26, r24
    4c84:	cb 01       	movw	r24, r22
    4c86:	f8 01       	movw	r30, r16
    4c88:	80 83       	st	Z, r24
    4c8a:	91 83       	std	Z+1, r25	; 0x01
    4c8c:	a2 83       	std	Z+2, r26	; 0x02
    4c8e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4c90:	fe 01       	movw	r30, r28
    4c92:	e7 59       	subi	r30, 0x97	; 151
    4c94:	ff 4f       	sbci	r31, 0xFF	; 255
    4c96:	60 81       	ld	r22, Z
    4c98:	71 81       	ldd	r23, Z+1	; 0x01
    4c9a:	82 81       	ldd	r24, Z+2	; 0x02
    4c9c:	93 81       	ldd	r25, Z+3	; 0x03
    4c9e:	20 e0       	ldi	r18, 0x00	; 0
    4ca0:	30 e0       	ldi	r19, 0x00	; 0
    4ca2:	40 e8       	ldi	r20, 0x80	; 128
    4ca4:	5f e3       	ldi	r21, 0x3F	; 63
    4ca6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4caa:	88 23       	and	r24, r24
    4cac:	44 f4       	brge	.+16     	; 0x4cbe <main+0x2d0e>
		__ticks = 1;
    4cae:	fe 01       	movw	r30, r28
    4cb0:	e9 59       	subi	r30, 0x99	; 153
    4cb2:	ff 4f       	sbci	r31, 0xFF	; 255
    4cb4:	81 e0       	ldi	r24, 0x01	; 1
    4cb6:	90 e0       	ldi	r25, 0x00	; 0
    4cb8:	91 83       	std	Z+1, r25	; 0x01
    4cba:	80 83       	st	Z, r24
    4cbc:	64 c0       	rjmp	.+200    	; 0x4d86 <main+0x2dd6>
	else if (__tmp > 65535)
    4cbe:	fe 01       	movw	r30, r28
    4cc0:	e7 59       	subi	r30, 0x97	; 151
    4cc2:	ff 4f       	sbci	r31, 0xFF	; 255
    4cc4:	60 81       	ld	r22, Z
    4cc6:	71 81       	ldd	r23, Z+1	; 0x01
    4cc8:	82 81       	ldd	r24, Z+2	; 0x02
    4cca:	93 81       	ldd	r25, Z+3	; 0x03
    4ccc:	20 e0       	ldi	r18, 0x00	; 0
    4cce:	3f ef       	ldi	r19, 0xFF	; 255
    4cd0:	4f e7       	ldi	r20, 0x7F	; 127
    4cd2:	57 e4       	ldi	r21, 0x47	; 71
    4cd4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4cd8:	18 16       	cp	r1, r24
    4cda:	0c f0       	brlt	.+2      	; 0x4cde <main+0x2d2e>
    4cdc:	43 c0       	rjmp	.+134    	; 0x4d64 <main+0x2db4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4cde:	fe 01       	movw	r30, r28
    4ce0:	e3 59       	subi	r30, 0x93	; 147
    4ce2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ce4:	60 81       	ld	r22, Z
    4ce6:	71 81       	ldd	r23, Z+1	; 0x01
    4ce8:	82 81       	ldd	r24, Z+2	; 0x02
    4cea:	93 81       	ldd	r25, Z+3	; 0x03
    4cec:	20 e0       	ldi	r18, 0x00	; 0
    4cee:	30 e0       	ldi	r19, 0x00	; 0
    4cf0:	40 e2       	ldi	r20, 0x20	; 32
    4cf2:	51 e4       	ldi	r21, 0x41	; 65
    4cf4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4cf8:	dc 01       	movw	r26, r24
    4cfa:	cb 01       	movw	r24, r22
    4cfc:	8e 01       	movw	r16, r28
    4cfe:	09 59       	subi	r16, 0x99	; 153
    4d00:	1f 4f       	sbci	r17, 0xFF	; 255
    4d02:	bc 01       	movw	r22, r24
    4d04:	cd 01       	movw	r24, r26
    4d06:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4d0a:	dc 01       	movw	r26, r24
    4d0c:	cb 01       	movw	r24, r22
    4d0e:	f8 01       	movw	r30, r16
    4d10:	91 83       	std	Z+1, r25	; 0x01
    4d12:	80 83       	st	Z, r24
    4d14:	1f c0       	rjmp	.+62     	; 0x4d54 <main+0x2da4>
    4d16:	fe 01       	movw	r30, r28
    4d18:	eb 59       	subi	r30, 0x9B	; 155
    4d1a:	ff 4f       	sbci	r31, 0xFF	; 255
    4d1c:	88 ec       	ldi	r24, 0xC8	; 200
    4d1e:	90 e0       	ldi	r25, 0x00	; 0
    4d20:	91 83       	std	Z+1, r25	; 0x01
    4d22:	80 83       	st	Z, r24
    4d24:	fe 01       	movw	r30, r28
    4d26:	eb 59       	subi	r30, 0x9B	; 155
    4d28:	ff 4f       	sbci	r31, 0xFF	; 255
    4d2a:	80 81       	ld	r24, Z
    4d2c:	91 81       	ldd	r25, Z+1	; 0x01
    4d2e:	01 97       	sbiw	r24, 0x01	; 1
    4d30:	f1 f7       	brne	.-4      	; 0x4d2e <main+0x2d7e>
    4d32:	fe 01       	movw	r30, r28
    4d34:	eb 59       	subi	r30, 0x9B	; 155
    4d36:	ff 4f       	sbci	r31, 0xFF	; 255
    4d38:	91 83       	std	Z+1, r25	; 0x01
    4d3a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d3c:	de 01       	movw	r26, r28
    4d3e:	a9 59       	subi	r26, 0x99	; 153
    4d40:	bf 4f       	sbci	r27, 0xFF	; 255
    4d42:	fe 01       	movw	r30, r28
    4d44:	e9 59       	subi	r30, 0x99	; 153
    4d46:	ff 4f       	sbci	r31, 0xFF	; 255
    4d48:	80 81       	ld	r24, Z
    4d4a:	91 81       	ldd	r25, Z+1	; 0x01
    4d4c:	01 97       	sbiw	r24, 0x01	; 1
    4d4e:	11 96       	adiw	r26, 0x01	; 1
    4d50:	9c 93       	st	X, r25
    4d52:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d54:	fe 01       	movw	r30, r28
    4d56:	e9 59       	subi	r30, 0x99	; 153
    4d58:	ff 4f       	sbci	r31, 0xFF	; 255
    4d5a:	80 81       	ld	r24, Z
    4d5c:	91 81       	ldd	r25, Z+1	; 0x01
    4d5e:	00 97       	sbiw	r24, 0x00	; 0
    4d60:	d1 f6       	brne	.-76     	; 0x4d16 <main+0x2d66>
    4d62:	27 c0       	rjmp	.+78     	; 0x4db2 <main+0x2e02>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d64:	8e 01       	movw	r16, r28
    4d66:	09 59       	subi	r16, 0x99	; 153
    4d68:	1f 4f       	sbci	r17, 0xFF	; 255
    4d6a:	fe 01       	movw	r30, r28
    4d6c:	e7 59       	subi	r30, 0x97	; 151
    4d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    4d70:	60 81       	ld	r22, Z
    4d72:	71 81       	ldd	r23, Z+1	; 0x01
    4d74:	82 81       	ldd	r24, Z+2	; 0x02
    4d76:	93 81       	ldd	r25, Z+3	; 0x03
    4d78:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4d7c:	dc 01       	movw	r26, r24
    4d7e:	cb 01       	movw	r24, r22
    4d80:	f8 01       	movw	r30, r16
    4d82:	91 83       	std	Z+1, r25	; 0x01
    4d84:	80 83       	st	Z, r24
    4d86:	de 01       	movw	r26, r28
    4d88:	ad 59       	subi	r26, 0x9D	; 157
    4d8a:	bf 4f       	sbci	r27, 0xFF	; 255
    4d8c:	fe 01       	movw	r30, r28
    4d8e:	e9 59       	subi	r30, 0x99	; 153
    4d90:	ff 4f       	sbci	r31, 0xFF	; 255
    4d92:	80 81       	ld	r24, Z
    4d94:	91 81       	ldd	r25, Z+1	; 0x01
    4d96:	8d 93       	st	X+, r24
    4d98:	9c 93       	st	X, r25
    4d9a:	fe 01       	movw	r30, r28
    4d9c:	ed 59       	subi	r30, 0x9D	; 157
    4d9e:	ff 4f       	sbci	r31, 0xFF	; 255
    4da0:	80 81       	ld	r24, Z
    4da2:	91 81       	ldd	r25, Z+1	; 0x01
    4da4:	01 97       	sbiw	r24, 0x01	; 1
    4da6:	f1 f7       	brne	.-4      	; 0x4da4 <main+0x2df4>
    4da8:	fe 01       	movw	r30, r28
    4daa:	ed 59       	subi	r30, 0x9D	; 157
    4dac:	ff 4f       	sbci	r31, 0xFF	; 255
    4dae:	91 83       	std	Z+1, r25	; 0x01
    4db0:	80 83       	st	Z, r24

			_delay_ms(1000);
		if (PB_u8GetState(DIO_u8PORTD,DIO_u8PIN5)==1)
    4db2:	83 e0       	ldi	r24, 0x03	; 3
    4db4:	65 e0       	ldi	r22, 0x05	; 5
    4db6:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <PB_u8GetState>
    4dba:	81 30       	cpi	r24, 0x01	; 1
    4dbc:	11 f0       	breq	.+4      	; 0x4dc2 <main+0x2e12>
    4dbe:	0c 94 6e 11 	jmp	0x22dc	; 0x22dc <main+0x32c>
		{

		/* second timer */

		if (Local_S_2>0)
    4dc2:	fe 01       	movw	r30, r28
    4dc4:	ef 53       	subi	r30, 0x3F	; 63
    4dc6:	fe 4f       	sbci	r31, 0xFE	; 254
    4dc8:	80 81       	ld	r24, Z
    4dca:	88 23       	and	r24, r24
    4dcc:	09 f4       	brne	.+2      	; 0x4dd0 <main+0x2e20>
    4dce:	d9 c0       	rjmp	.+434    	; 0x4f82 <main+0x2fd2>
    4dd0:	fe 01       	movw	r30, r28
    4dd2:	e1 5a       	subi	r30, 0xA1	; 161
    4dd4:	ff 4f       	sbci	r31, 0xFF	; 255
    4dd6:	80 e0       	ldi	r24, 0x00	; 0
    4dd8:	90 e0       	ldi	r25, 0x00	; 0
    4dda:	aa e7       	ldi	r26, 0x7A	; 122
    4ddc:	b4 e4       	ldi	r27, 0x44	; 68
    4dde:	80 83       	st	Z, r24
    4de0:	91 83       	std	Z+1, r25	; 0x01
    4de2:	a2 83       	std	Z+2, r26	; 0x02
    4de4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4de6:	8e 01       	movw	r16, r28
    4de8:	05 5a       	subi	r16, 0xA5	; 165
    4dea:	1f 4f       	sbci	r17, 0xFF	; 255
    4dec:	fe 01       	movw	r30, r28
    4dee:	e1 5a       	subi	r30, 0xA1	; 161
    4df0:	ff 4f       	sbci	r31, 0xFF	; 255
    4df2:	60 81       	ld	r22, Z
    4df4:	71 81       	ldd	r23, Z+1	; 0x01
    4df6:	82 81       	ldd	r24, Z+2	; 0x02
    4df8:	93 81       	ldd	r25, Z+3	; 0x03
    4dfa:	20 e0       	ldi	r18, 0x00	; 0
    4dfc:	30 e0       	ldi	r19, 0x00	; 0
    4dfe:	4a ef       	ldi	r20, 0xFA	; 250
    4e00:	54 e4       	ldi	r21, 0x44	; 68
    4e02:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4e06:	dc 01       	movw	r26, r24
    4e08:	cb 01       	movw	r24, r22
    4e0a:	f8 01       	movw	r30, r16
    4e0c:	80 83       	st	Z, r24
    4e0e:	91 83       	std	Z+1, r25	; 0x01
    4e10:	a2 83       	std	Z+2, r26	; 0x02
    4e12:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4e14:	fe 01       	movw	r30, r28
    4e16:	e5 5a       	subi	r30, 0xA5	; 165
    4e18:	ff 4f       	sbci	r31, 0xFF	; 255
    4e1a:	60 81       	ld	r22, Z
    4e1c:	71 81       	ldd	r23, Z+1	; 0x01
    4e1e:	82 81       	ldd	r24, Z+2	; 0x02
    4e20:	93 81       	ldd	r25, Z+3	; 0x03
    4e22:	20 e0       	ldi	r18, 0x00	; 0
    4e24:	30 e0       	ldi	r19, 0x00	; 0
    4e26:	40 e8       	ldi	r20, 0x80	; 128
    4e28:	5f e3       	ldi	r21, 0x3F	; 63
    4e2a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4e2e:	88 23       	and	r24, r24
    4e30:	44 f4       	brge	.+16     	; 0x4e42 <main+0x2e92>
		__ticks = 1;
    4e32:	fe 01       	movw	r30, r28
    4e34:	e7 5a       	subi	r30, 0xA7	; 167
    4e36:	ff 4f       	sbci	r31, 0xFF	; 255
    4e38:	81 e0       	ldi	r24, 0x01	; 1
    4e3a:	90 e0       	ldi	r25, 0x00	; 0
    4e3c:	91 83       	std	Z+1, r25	; 0x01
    4e3e:	80 83       	st	Z, r24
    4e40:	64 c0       	rjmp	.+200    	; 0x4f0a <main+0x2f5a>
	else if (__tmp > 65535)
    4e42:	fe 01       	movw	r30, r28
    4e44:	e5 5a       	subi	r30, 0xA5	; 165
    4e46:	ff 4f       	sbci	r31, 0xFF	; 255
    4e48:	60 81       	ld	r22, Z
    4e4a:	71 81       	ldd	r23, Z+1	; 0x01
    4e4c:	82 81       	ldd	r24, Z+2	; 0x02
    4e4e:	93 81       	ldd	r25, Z+3	; 0x03
    4e50:	20 e0       	ldi	r18, 0x00	; 0
    4e52:	3f ef       	ldi	r19, 0xFF	; 255
    4e54:	4f e7       	ldi	r20, 0x7F	; 127
    4e56:	57 e4       	ldi	r21, 0x47	; 71
    4e58:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4e5c:	18 16       	cp	r1, r24
    4e5e:	0c f0       	brlt	.+2      	; 0x4e62 <main+0x2eb2>
    4e60:	43 c0       	rjmp	.+134    	; 0x4ee8 <main+0x2f38>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e62:	fe 01       	movw	r30, r28
    4e64:	e1 5a       	subi	r30, 0xA1	; 161
    4e66:	ff 4f       	sbci	r31, 0xFF	; 255
    4e68:	60 81       	ld	r22, Z
    4e6a:	71 81       	ldd	r23, Z+1	; 0x01
    4e6c:	82 81       	ldd	r24, Z+2	; 0x02
    4e6e:	93 81       	ldd	r25, Z+3	; 0x03
    4e70:	20 e0       	ldi	r18, 0x00	; 0
    4e72:	30 e0       	ldi	r19, 0x00	; 0
    4e74:	40 e2       	ldi	r20, 0x20	; 32
    4e76:	51 e4       	ldi	r21, 0x41	; 65
    4e78:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4e7c:	dc 01       	movw	r26, r24
    4e7e:	cb 01       	movw	r24, r22
    4e80:	8e 01       	movw	r16, r28
    4e82:	07 5a       	subi	r16, 0xA7	; 167
    4e84:	1f 4f       	sbci	r17, 0xFF	; 255
    4e86:	bc 01       	movw	r22, r24
    4e88:	cd 01       	movw	r24, r26
    4e8a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4e8e:	dc 01       	movw	r26, r24
    4e90:	cb 01       	movw	r24, r22
    4e92:	f8 01       	movw	r30, r16
    4e94:	91 83       	std	Z+1, r25	; 0x01
    4e96:	80 83       	st	Z, r24
    4e98:	1f c0       	rjmp	.+62     	; 0x4ed8 <main+0x2f28>
    4e9a:	fe 01       	movw	r30, r28
    4e9c:	e9 5a       	subi	r30, 0xA9	; 169
    4e9e:	ff 4f       	sbci	r31, 0xFF	; 255
    4ea0:	88 ec       	ldi	r24, 0xC8	; 200
    4ea2:	90 e0       	ldi	r25, 0x00	; 0
    4ea4:	91 83       	std	Z+1, r25	; 0x01
    4ea6:	80 83       	st	Z, r24
    4ea8:	fe 01       	movw	r30, r28
    4eaa:	e9 5a       	subi	r30, 0xA9	; 169
    4eac:	ff 4f       	sbci	r31, 0xFF	; 255
    4eae:	80 81       	ld	r24, Z
    4eb0:	91 81       	ldd	r25, Z+1	; 0x01
    4eb2:	01 97       	sbiw	r24, 0x01	; 1
    4eb4:	f1 f7       	brne	.-4      	; 0x4eb2 <main+0x2f02>
    4eb6:	fe 01       	movw	r30, r28
    4eb8:	e9 5a       	subi	r30, 0xA9	; 169
    4eba:	ff 4f       	sbci	r31, 0xFF	; 255
    4ebc:	91 83       	std	Z+1, r25	; 0x01
    4ebe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4ec0:	de 01       	movw	r26, r28
    4ec2:	a7 5a       	subi	r26, 0xA7	; 167
    4ec4:	bf 4f       	sbci	r27, 0xFF	; 255
    4ec6:	fe 01       	movw	r30, r28
    4ec8:	e7 5a       	subi	r30, 0xA7	; 167
    4eca:	ff 4f       	sbci	r31, 0xFF	; 255
    4ecc:	80 81       	ld	r24, Z
    4ece:	91 81       	ldd	r25, Z+1	; 0x01
    4ed0:	01 97       	sbiw	r24, 0x01	; 1
    4ed2:	11 96       	adiw	r26, 0x01	; 1
    4ed4:	9c 93       	st	X, r25
    4ed6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ed8:	fe 01       	movw	r30, r28
    4eda:	e7 5a       	subi	r30, 0xA7	; 167
    4edc:	ff 4f       	sbci	r31, 0xFF	; 255
    4ede:	80 81       	ld	r24, Z
    4ee0:	91 81       	ldd	r25, Z+1	; 0x01
    4ee2:	00 97       	sbiw	r24, 0x00	; 0
    4ee4:	d1 f6       	brne	.-76     	; 0x4e9a <main+0x2eea>
    4ee6:	27 c0       	rjmp	.+78     	; 0x4f36 <main+0x2f86>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ee8:	8e 01       	movw	r16, r28
    4eea:	07 5a       	subi	r16, 0xA7	; 167
    4eec:	1f 4f       	sbci	r17, 0xFF	; 255
    4eee:	fe 01       	movw	r30, r28
    4ef0:	e5 5a       	subi	r30, 0xA5	; 165
    4ef2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ef4:	60 81       	ld	r22, Z
    4ef6:	71 81       	ldd	r23, Z+1	; 0x01
    4ef8:	82 81       	ldd	r24, Z+2	; 0x02
    4efa:	93 81       	ldd	r25, Z+3	; 0x03
    4efc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4f00:	dc 01       	movw	r26, r24
    4f02:	cb 01       	movw	r24, r22
    4f04:	f8 01       	movw	r30, r16
    4f06:	91 83       	std	Z+1, r25	; 0x01
    4f08:	80 83       	st	Z, r24
    4f0a:	de 01       	movw	r26, r28
    4f0c:	ab 5a       	subi	r26, 0xAB	; 171
    4f0e:	bf 4f       	sbci	r27, 0xFF	; 255
    4f10:	fe 01       	movw	r30, r28
    4f12:	e7 5a       	subi	r30, 0xA7	; 167
    4f14:	ff 4f       	sbci	r31, 0xFF	; 255
    4f16:	80 81       	ld	r24, Z
    4f18:	91 81       	ldd	r25, Z+1	; 0x01
    4f1a:	8d 93       	st	X+, r24
    4f1c:	9c 93       	st	X, r25
    4f1e:	fe 01       	movw	r30, r28
    4f20:	eb 5a       	subi	r30, 0xAB	; 171
    4f22:	ff 4f       	sbci	r31, 0xFF	; 255
    4f24:	80 81       	ld	r24, Z
    4f26:	91 81       	ldd	r25, Z+1	; 0x01
    4f28:	01 97       	sbiw	r24, 0x01	; 1
    4f2a:	f1 f7       	brne	.-4      	; 0x4f28 <main+0x2f78>
    4f2c:	fe 01       	movw	r30, r28
    4f2e:	eb 5a       	subi	r30, 0xAB	; 171
    4f30:	ff 4f       	sbci	r31, 0xFF	; 255
    4f32:	91 83       	std	Z+1, r25	; 0x01
    4f34:	80 83       	st	Z, r24
		{
			do
			{
				_delay_ms(1000);
				Local_S_2--;
    4f36:	de 01       	movw	r26, r28
    4f38:	af 53       	subi	r26, 0x3F	; 63
    4f3a:	be 4f       	sbci	r27, 0xFE	; 254
    4f3c:	fe 01       	movw	r30, r28
    4f3e:	ef 53       	subi	r30, 0x3F	; 63
    4f40:	fe 4f       	sbci	r31, 0xFE	; 254
    4f42:	80 81       	ld	r24, Z
    4f44:	81 50       	subi	r24, 0x01	; 1
    4f46:	8c 93       	st	X, r24
				CLCD_voidGoToXY(0,7);
    4f48:	80 e0       	ldi	r24, 0x00	; 0
    4f4a:	67 e0       	ldi	r22, 0x07	; 7
    4f4c:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
				CLCD_VoidWriteNumber(Local_S_2);
    4f50:	fe 01       	movw	r30, r28
    4f52:	ef 53       	subi	r30, 0x3F	; 63
    4f54:	fe 4f       	sbci	r31, 0xFE	; 254
    4f56:	80 81       	ld	r24, Z
    4f58:	88 2f       	mov	r24, r24
    4f5a:	90 e0       	ldi	r25, 0x00	; 0
    4f5c:	a0 e0       	ldi	r26, 0x00	; 0
    4f5e:	b0 e0       	ldi	r27, 0x00	; 0
    4f60:	bc 01       	movw	r22, r24
    4f62:	cd 01       	movw	r24, r26
    4f64:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    4f68:	dc 01       	movw	r26, r24
    4f6a:	cb 01       	movw	r24, r22
    4f6c:	bc 01       	movw	r22, r24
    4f6e:	cd 01       	movw	r24, r26
    4f70:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>

			}
			while (Local_S_2!=0);
    4f74:	fe 01       	movw	r30, r28
    4f76:	ef 53       	subi	r30, 0x3F	; 63
    4f78:	fe 4f       	sbci	r31, 0xFE	; 254
    4f7a:	80 81       	ld	r24, Z
    4f7c:	88 23       	and	r24, r24
    4f7e:	09 f0       	breq	.+2      	; 0x4f82 <main+0x2fd2>
    4f80:	27 cf       	rjmp	.-434    	; 0x4dd0 <main+0x2e20>
		}

		if (Local_S_1>0)
    4f82:	fe 01       	movw	r30, r28
    4f84:	ee 53       	subi	r30, 0x3E	; 62
    4f86:	fe 4f       	sbci	r31, 0xFE	; 254
    4f88:	80 81       	ld	r24, Z
    4f8a:	88 23       	and	r24, r24
    4f8c:	09 f4       	brne	.+2      	; 0x4f90 <main+0x2fe0>
    4f8e:	d9 c0       	rjmp	.+434    	; 0x5142 <main+0x3192>
    4f90:	fe 01       	movw	r30, r28
    4f92:	ef 5a       	subi	r30, 0xAF	; 175
    4f94:	ff 4f       	sbci	r31, 0xFF	; 255
    4f96:	80 e0       	ldi	r24, 0x00	; 0
    4f98:	90 e0       	ldi	r25, 0x00	; 0
    4f9a:	aa e7       	ldi	r26, 0x7A	; 122
    4f9c:	b4 e4       	ldi	r27, 0x44	; 68
    4f9e:	80 83       	st	Z, r24
    4fa0:	91 83       	std	Z+1, r25	; 0x01
    4fa2:	a2 83       	std	Z+2, r26	; 0x02
    4fa4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4fa6:	8e 01       	movw	r16, r28
    4fa8:	03 5b       	subi	r16, 0xB3	; 179
    4faa:	1f 4f       	sbci	r17, 0xFF	; 255
    4fac:	fe 01       	movw	r30, r28
    4fae:	ef 5a       	subi	r30, 0xAF	; 175
    4fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    4fb2:	60 81       	ld	r22, Z
    4fb4:	71 81       	ldd	r23, Z+1	; 0x01
    4fb6:	82 81       	ldd	r24, Z+2	; 0x02
    4fb8:	93 81       	ldd	r25, Z+3	; 0x03
    4fba:	20 e0       	ldi	r18, 0x00	; 0
    4fbc:	30 e0       	ldi	r19, 0x00	; 0
    4fbe:	4a ef       	ldi	r20, 0xFA	; 250
    4fc0:	54 e4       	ldi	r21, 0x44	; 68
    4fc2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4fc6:	dc 01       	movw	r26, r24
    4fc8:	cb 01       	movw	r24, r22
    4fca:	f8 01       	movw	r30, r16
    4fcc:	80 83       	st	Z, r24
    4fce:	91 83       	std	Z+1, r25	; 0x01
    4fd0:	a2 83       	std	Z+2, r26	; 0x02
    4fd2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4fd4:	fe 01       	movw	r30, r28
    4fd6:	e3 5b       	subi	r30, 0xB3	; 179
    4fd8:	ff 4f       	sbci	r31, 0xFF	; 255
    4fda:	60 81       	ld	r22, Z
    4fdc:	71 81       	ldd	r23, Z+1	; 0x01
    4fde:	82 81       	ldd	r24, Z+2	; 0x02
    4fe0:	93 81       	ldd	r25, Z+3	; 0x03
    4fe2:	20 e0       	ldi	r18, 0x00	; 0
    4fe4:	30 e0       	ldi	r19, 0x00	; 0
    4fe6:	40 e8       	ldi	r20, 0x80	; 128
    4fe8:	5f e3       	ldi	r21, 0x3F	; 63
    4fea:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4fee:	88 23       	and	r24, r24
    4ff0:	44 f4       	brge	.+16     	; 0x5002 <main+0x3052>
		__ticks = 1;
    4ff2:	fe 01       	movw	r30, r28
    4ff4:	e5 5b       	subi	r30, 0xB5	; 181
    4ff6:	ff 4f       	sbci	r31, 0xFF	; 255
    4ff8:	81 e0       	ldi	r24, 0x01	; 1
    4ffa:	90 e0       	ldi	r25, 0x00	; 0
    4ffc:	91 83       	std	Z+1, r25	; 0x01
    4ffe:	80 83       	st	Z, r24
    5000:	64 c0       	rjmp	.+200    	; 0x50ca <main+0x311a>
	else if (__tmp > 65535)
    5002:	fe 01       	movw	r30, r28
    5004:	e3 5b       	subi	r30, 0xB3	; 179
    5006:	ff 4f       	sbci	r31, 0xFF	; 255
    5008:	60 81       	ld	r22, Z
    500a:	71 81       	ldd	r23, Z+1	; 0x01
    500c:	82 81       	ldd	r24, Z+2	; 0x02
    500e:	93 81       	ldd	r25, Z+3	; 0x03
    5010:	20 e0       	ldi	r18, 0x00	; 0
    5012:	3f ef       	ldi	r19, 0xFF	; 255
    5014:	4f e7       	ldi	r20, 0x7F	; 127
    5016:	57 e4       	ldi	r21, 0x47	; 71
    5018:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    501c:	18 16       	cp	r1, r24
    501e:	0c f0       	brlt	.+2      	; 0x5022 <main+0x3072>
    5020:	43 c0       	rjmp	.+134    	; 0x50a8 <main+0x30f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5022:	fe 01       	movw	r30, r28
    5024:	ef 5a       	subi	r30, 0xAF	; 175
    5026:	ff 4f       	sbci	r31, 0xFF	; 255
    5028:	60 81       	ld	r22, Z
    502a:	71 81       	ldd	r23, Z+1	; 0x01
    502c:	82 81       	ldd	r24, Z+2	; 0x02
    502e:	93 81       	ldd	r25, Z+3	; 0x03
    5030:	20 e0       	ldi	r18, 0x00	; 0
    5032:	30 e0       	ldi	r19, 0x00	; 0
    5034:	40 e2       	ldi	r20, 0x20	; 32
    5036:	51 e4       	ldi	r21, 0x41	; 65
    5038:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    503c:	dc 01       	movw	r26, r24
    503e:	cb 01       	movw	r24, r22
    5040:	8e 01       	movw	r16, r28
    5042:	05 5b       	subi	r16, 0xB5	; 181
    5044:	1f 4f       	sbci	r17, 0xFF	; 255
    5046:	bc 01       	movw	r22, r24
    5048:	cd 01       	movw	r24, r26
    504a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    504e:	dc 01       	movw	r26, r24
    5050:	cb 01       	movw	r24, r22
    5052:	f8 01       	movw	r30, r16
    5054:	91 83       	std	Z+1, r25	; 0x01
    5056:	80 83       	st	Z, r24
    5058:	1f c0       	rjmp	.+62     	; 0x5098 <main+0x30e8>
    505a:	fe 01       	movw	r30, r28
    505c:	e7 5b       	subi	r30, 0xB7	; 183
    505e:	ff 4f       	sbci	r31, 0xFF	; 255
    5060:	88 ec       	ldi	r24, 0xC8	; 200
    5062:	90 e0       	ldi	r25, 0x00	; 0
    5064:	91 83       	std	Z+1, r25	; 0x01
    5066:	80 83       	st	Z, r24
    5068:	fe 01       	movw	r30, r28
    506a:	e7 5b       	subi	r30, 0xB7	; 183
    506c:	ff 4f       	sbci	r31, 0xFF	; 255
    506e:	80 81       	ld	r24, Z
    5070:	91 81       	ldd	r25, Z+1	; 0x01
    5072:	01 97       	sbiw	r24, 0x01	; 1
    5074:	f1 f7       	brne	.-4      	; 0x5072 <main+0x30c2>
    5076:	fe 01       	movw	r30, r28
    5078:	e7 5b       	subi	r30, 0xB7	; 183
    507a:	ff 4f       	sbci	r31, 0xFF	; 255
    507c:	91 83       	std	Z+1, r25	; 0x01
    507e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5080:	de 01       	movw	r26, r28
    5082:	a5 5b       	subi	r26, 0xB5	; 181
    5084:	bf 4f       	sbci	r27, 0xFF	; 255
    5086:	fe 01       	movw	r30, r28
    5088:	e5 5b       	subi	r30, 0xB5	; 181
    508a:	ff 4f       	sbci	r31, 0xFF	; 255
    508c:	80 81       	ld	r24, Z
    508e:	91 81       	ldd	r25, Z+1	; 0x01
    5090:	01 97       	sbiw	r24, 0x01	; 1
    5092:	11 96       	adiw	r26, 0x01	; 1
    5094:	9c 93       	st	X, r25
    5096:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5098:	fe 01       	movw	r30, r28
    509a:	e5 5b       	subi	r30, 0xB5	; 181
    509c:	ff 4f       	sbci	r31, 0xFF	; 255
    509e:	80 81       	ld	r24, Z
    50a0:	91 81       	ldd	r25, Z+1	; 0x01
    50a2:	00 97       	sbiw	r24, 0x00	; 0
    50a4:	d1 f6       	brne	.-76     	; 0x505a <main+0x30aa>
    50a6:	27 c0       	rjmp	.+78     	; 0x50f6 <main+0x3146>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    50a8:	8e 01       	movw	r16, r28
    50aa:	05 5b       	subi	r16, 0xB5	; 181
    50ac:	1f 4f       	sbci	r17, 0xFF	; 255
    50ae:	fe 01       	movw	r30, r28
    50b0:	e3 5b       	subi	r30, 0xB3	; 179
    50b2:	ff 4f       	sbci	r31, 0xFF	; 255
    50b4:	60 81       	ld	r22, Z
    50b6:	71 81       	ldd	r23, Z+1	; 0x01
    50b8:	82 81       	ldd	r24, Z+2	; 0x02
    50ba:	93 81       	ldd	r25, Z+3	; 0x03
    50bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    50c0:	dc 01       	movw	r26, r24
    50c2:	cb 01       	movw	r24, r22
    50c4:	f8 01       	movw	r30, r16
    50c6:	91 83       	std	Z+1, r25	; 0x01
    50c8:	80 83       	st	Z, r24
    50ca:	de 01       	movw	r26, r28
    50cc:	a9 5b       	subi	r26, 0xB9	; 185
    50ce:	bf 4f       	sbci	r27, 0xFF	; 255
    50d0:	fe 01       	movw	r30, r28
    50d2:	e5 5b       	subi	r30, 0xB5	; 181
    50d4:	ff 4f       	sbci	r31, 0xFF	; 255
    50d6:	80 81       	ld	r24, Z
    50d8:	91 81       	ldd	r25, Z+1	; 0x01
    50da:	8d 93       	st	X+, r24
    50dc:	9c 93       	st	X, r25
    50de:	fe 01       	movw	r30, r28
    50e0:	e9 5b       	subi	r30, 0xB9	; 185
    50e2:	ff 4f       	sbci	r31, 0xFF	; 255
    50e4:	80 81       	ld	r24, Z
    50e6:	91 81       	ldd	r25, Z+1	; 0x01
    50e8:	01 97       	sbiw	r24, 0x01	; 1
    50ea:	f1 f7       	brne	.-4      	; 0x50e8 <main+0x3138>
    50ec:	fe 01       	movw	r30, r28
    50ee:	e9 5b       	subi	r30, 0xB9	; 185
    50f0:	ff 4f       	sbci	r31, 0xFF	; 255
    50f2:	91 83       	std	Z+1, r25	; 0x01
    50f4:	80 83       	st	Z, r24
		{
			do
			{
				_delay_ms(1000);
				Local_S_1--;
    50f6:	de 01       	movw	r26, r28
    50f8:	ae 53       	subi	r26, 0x3E	; 62
    50fa:	be 4f       	sbci	r27, 0xFE	; 254
    50fc:	fe 01       	movw	r30, r28
    50fe:	ee 53       	subi	r30, 0x3E	; 62
    5100:	fe 4f       	sbci	r31, 0xFE	; 254
    5102:	80 81       	ld	r24, Z
    5104:	81 50       	subi	r24, 0x01	; 1
    5106:	8c 93       	st	X, r24
				CLCD_voidGoToXY(0,6);
    5108:	80 e0       	ldi	r24, 0x00	; 0
    510a:	66 e0       	ldi	r22, 0x06	; 6
    510c:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
				CLCD_VoidWriteNumber(Local_S_1);
    5110:	fe 01       	movw	r30, r28
    5112:	ee 53       	subi	r30, 0x3E	; 62
    5114:	fe 4f       	sbci	r31, 0xFE	; 254
    5116:	80 81       	ld	r24, Z
    5118:	88 2f       	mov	r24, r24
    511a:	90 e0       	ldi	r25, 0x00	; 0
    511c:	a0 e0       	ldi	r26, 0x00	; 0
    511e:	b0 e0       	ldi	r27, 0x00	; 0
    5120:	bc 01       	movw	r22, r24
    5122:	cd 01       	movw	r24, r26
    5124:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    5128:	dc 01       	movw	r26, r24
    512a:	cb 01       	movw	r24, r22
    512c:	bc 01       	movw	r22, r24
    512e:	cd 01       	movw	r24, r26
    5130:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>

			}
			while (Local_S_1!=0);
    5134:	fe 01       	movw	r30, r28
    5136:	ee 53       	subi	r30, 0x3E	; 62
    5138:	fe 4f       	sbci	r31, 0xFE	; 254
    513a:	80 81       	ld	r24, Z
    513c:	88 23       	and	r24, r24
    513e:	09 f0       	breq	.+2      	; 0x5142 <main+0x3192>
    5140:	27 cf       	rjmp	.-434    	; 0x4f90 <main+0x2fe0>
		}

		/* Minute timer */

		if (Local_M_2>0)
    5142:	fe 01       	movw	r30, r28
    5144:	ed 53       	subi	r30, 0x3D	; 61
    5146:	fe 4f       	sbci	r31, 0xFE	; 254
    5148:	80 81       	ld	r24, Z
    514a:	88 23       	and	r24, r24
    514c:	09 f4       	brne	.+2      	; 0x5150 <main+0x31a0>
    514e:	ab c0       	rjmp	.+342    	; 0x52a6 <main+0x32f6>
    5150:	fe 01       	movw	r30, r28
    5152:	ed 5b       	subi	r30, 0xBD	; 189
    5154:	ff 4f       	sbci	r31, 0xFF	; 255
    5156:	80 e0       	ldi	r24, 0x00	; 0
    5158:	90 e0       	ldi	r25, 0x00	; 0
    515a:	aa e7       	ldi	r26, 0x7A	; 122
    515c:	b4 e4       	ldi	r27, 0x44	; 68
    515e:	80 83       	st	Z, r24
    5160:	91 83       	std	Z+1, r25	; 0x01
    5162:	a2 83       	std	Z+2, r26	; 0x02
    5164:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5166:	8e 01       	movw	r16, r28
    5168:	01 5c       	subi	r16, 0xC1	; 193
    516a:	1f 4f       	sbci	r17, 0xFF	; 255
    516c:	fe 01       	movw	r30, r28
    516e:	ed 5b       	subi	r30, 0xBD	; 189
    5170:	ff 4f       	sbci	r31, 0xFF	; 255
    5172:	60 81       	ld	r22, Z
    5174:	71 81       	ldd	r23, Z+1	; 0x01
    5176:	82 81       	ldd	r24, Z+2	; 0x02
    5178:	93 81       	ldd	r25, Z+3	; 0x03
    517a:	20 e0       	ldi	r18, 0x00	; 0
    517c:	30 e0       	ldi	r19, 0x00	; 0
    517e:	4a ef       	ldi	r20, 0xFA	; 250
    5180:	54 e4       	ldi	r21, 0x44	; 68
    5182:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5186:	dc 01       	movw	r26, r24
    5188:	cb 01       	movw	r24, r22
    518a:	f8 01       	movw	r30, r16
    518c:	80 83       	st	Z, r24
    518e:	91 83       	std	Z+1, r25	; 0x01
    5190:	a2 83       	std	Z+2, r26	; 0x02
    5192:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    5194:	fe 01       	movw	r30, r28
    5196:	ff 96       	adiw	r30, 0x3f	; 63
    5198:	60 81       	ld	r22, Z
    519a:	71 81       	ldd	r23, Z+1	; 0x01
    519c:	82 81       	ldd	r24, Z+2	; 0x02
    519e:	93 81       	ldd	r25, Z+3	; 0x03
    51a0:	20 e0       	ldi	r18, 0x00	; 0
    51a2:	30 e0       	ldi	r19, 0x00	; 0
    51a4:	40 e8       	ldi	r20, 0x80	; 128
    51a6:	5f e3       	ldi	r21, 0x3F	; 63
    51a8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    51ac:	88 23       	and	r24, r24
    51ae:	2c f4       	brge	.+10     	; 0x51ba <main+0x320a>
		__ticks = 1;
    51b0:	81 e0       	ldi	r24, 0x01	; 1
    51b2:	90 e0       	ldi	r25, 0x00	; 0
    51b4:	9e af       	std	Y+62, r25	; 0x3e
    51b6:	8d af       	std	Y+61, r24	; 0x3d
    51b8:	46 c0       	rjmp	.+140    	; 0x5246 <main+0x3296>
	else if (__tmp > 65535)
    51ba:	fe 01       	movw	r30, r28
    51bc:	ff 96       	adiw	r30, 0x3f	; 63
    51be:	60 81       	ld	r22, Z
    51c0:	71 81       	ldd	r23, Z+1	; 0x01
    51c2:	82 81       	ldd	r24, Z+2	; 0x02
    51c4:	93 81       	ldd	r25, Z+3	; 0x03
    51c6:	20 e0       	ldi	r18, 0x00	; 0
    51c8:	3f ef       	ldi	r19, 0xFF	; 255
    51ca:	4f e7       	ldi	r20, 0x7F	; 127
    51cc:	57 e4       	ldi	r21, 0x47	; 71
    51ce:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    51d2:	18 16       	cp	r1, r24
    51d4:	64 f5       	brge	.+88     	; 0x522e <main+0x327e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    51d6:	fe 01       	movw	r30, r28
    51d8:	ed 5b       	subi	r30, 0xBD	; 189
    51da:	ff 4f       	sbci	r31, 0xFF	; 255
    51dc:	60 81       	ld	r22, Z
    51de:	71 81       	ldd	r23, Z+1	; 0x01
    51e0:	82 81       	ldd	r24, Z+2	; 0x02
    51e2:	93 81       	ldd	r25, Z+3	; 0x03
    51e4:	20 e0       	ldi	r18, 0x00	; 0
    51e6:	30 e0       	ldi	r19, 0x00	; 0
    51e8:	40 e2       	ldi	r20, 0x20	; 32
    51ea:	51 e4       	ldi	r21, 0x41	; 65
    51ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    51f0:	dc 01       	movw	r26, r24
    51f2:	cb 01       	movw	r24, r22
    51f4:	bc 01       	movw	r22, r24
    51f6:	cd 01       	movw	r24, r26
    51f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    51fc:	dc 01       	movw	r26, r24
    51fe:	cb 01       	movw	r24, r22
    5200:	9e af       	std	Y+62, r25	; 0x3e
    5202:	8d af       	std	Y+61, r24	; 0x3d
    5204:	0f c0       	rjmp	.+30     	; 0x5224 <main+0x3274>
    5206:	88 ec       	ldi	r24, 0xC8	; 200
    5208:	90 e0       	ldi	r25, 0x00	; 0
    520a:	9c af       	std	Y+60, r25	; 0x3c
    520c:	8b af       	std	Y+59, r24	; 0x3b
    520e:	8b ad       	ldd	r24, Y+59	; 0x3b
    5210:	9c ad       	ldd	r25, Y+60	; 0x3c
    5212:	01 97       	sbiw	r24, 0x01	; 1
    5214:	f1 f7       	brne	.-4      	; 0x5212 <main+0x3262>
    5216:	9c af       	std	Y+60, r25	; 0x3c
    5218:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    521a:	8d ad       	ldd	r24, Y+61	; 0x3d
    521c:	9e ad       	ldd	r25, Y+62	; 0x3e
    521e:	01 97       	sbiw	r24, 0x01	; 1
    5220:	9e af       	std	Y+62, r25	; 0x3e
    5222:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5224:	8d ad       	ldd	r24, Y+61	; 0x3d
    5226:	9e ad       	ldd	r25, Y+62	; 0x3e
    5228:	00 97       	sbiw	r24, 0x00	; 0
    522a:	69 f7       	brne	.-38     	; 0x5206 <main+0x3256>
    522c:	16 c0       	rjmp	.+44     	; 0x525a <main+0x32aa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    522e:	fe 01       	movw	r30, r28
    5230:	ff 96       	adiw	r30, 0x3f	; 63
    5232:	60 81       	ld	r22, Z
    5234:	71 81       	ldd	r23, Z+1	; 0x01
    5236:	82 81       	ldd	r24, Z+2	; 0x02
    5238:	93 81       	ldd	r25, Z+3	; 0x03
    523a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    523e:	dc 01       	movw	r26, r24
    5240:	cb 01       	movw	r24, r22
    5242:	9e af       	std	Y+62, r25	; 0x3e
    5244:	8d af       	std	Y+61, r24	; 0x3d
    5246:	8d ad       	ldd	r24, Y+61	; 0x3d
    5248:	9e ad       	ldd	r25, Y+62	; 0x3e
    524a:	9a af       	std	Y+58, r25	; 0x3a
    524c:	89 af       	std	Y+57, r24	; 0x39
    524e:	89 ad       	ldd	r24, Y+57	; 0x39
    5250:	9a ad       	ldd	r25, Y+58	; 0x3a
    5252:	01 97       	sbiw	r24, 0x01	; 1
    5254:	f1 f7       	brne	.-4      	; 0x5252 <main+0x32a2>
    5256:	9a af       	std	Y+58, r25	; 0x3a
    5258:	89 af       	std	Y+57, r24	; 0x39
		{
			do
			{
				_delay_ms(1000);
				Local_M_2--;
    525a:	de 01       	movw	r26, r28
    525c:	ad 53       	subi	r26, 0x3D	; 61
    525e:	be 4f       	sbci	r27, 0xFE	; 254
    5260:	fe 01       	movw	r30, r28
    5262:	ed 53       	subi	r30, 0x3D	; 61
    5264:	fe 4f       	sbci	r31, 0xFE	; 254
    5266:	80 81       	ld	r24, Z
    5268:	81 50       	subi	r24, 0x01	; 1
    526a:	8c 93       	st	X, r24
				CLCD_voidGoToXY(0,4);
    526c:	80 e0       	ldi	r24, 0x00	; 0
    526e:	64 e0       	ldi	r22, 0x04	; 4
    5270:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
				CLCD_VoidWriteNumber(Local_M_2);
    5274:	fe 01       	movw	r30, r28
    5276:	ed 53       	subi	r30, 0x3D	; 61
    5278:	fe 4f       	sbci	r31, 0xFE	; 254
    527a:	80 81       	ld	r24, Z
    527c:	88 2f       	mov	r24, r24
    527e:	90 e0       	ldi	r25, 0x00	; 0
    5280:	a0 e0       	ldi	r26, 0x00	; 0
    5282:	b0 e0       	ldi	r27, 0x00	; 0
    5284:	bc 01       	movw	r22, r24
    5286:	cd 01       	movw	r24, r26
    5288:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    528c:	dc 01       	movw	r26, r24
    528e:	cb 01       	movw	r24, r22
    5290:	bc 01       	movw	r22, r24
    5292:	cd 01       	movw	r24, r26
    5294:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>

			}
			while (Local_M_2!=0);
    5298:	fe 01       	movw	r30, r28
    529a:	ed 53       	subi	r30, 0x3D	; 61
    529c:	fe 4f       	sbci	r31, 0xFE	; 254
    529e:	80 81       	ld	r24, Z
    52a0:	88 23       	and	r24, r24
    52a2:	09 f0       	breq	.+2      	; 0x52a6 <main+0x32f6>
    52a4:	55 cf       	rjmp	.-342    	; 0x5150 <main+0x31a0>
		}
		if (Local_M_1>0)
    52a6:	fe 01       	movw	r30, r28
    52a8:	ec 53       	subi	r30, 0x3C	; 60
    52aa:	fe 4f       	sbci	r31, 0xFE	; 254
    52ac:	80 81       	ld	r24, Z
    52ae:	88 23       	and	r24, r24
    52b0:	09 f4       	brne	.+2      	; 0x52b4 <main+0x3304>
    52b2:	98 c0       	rjmp	.+304    	; 0x53e4 <main+0x3434>
    52b4:	80 e0       	ldi	r24, 0x00	; 0
    52b6:	90 e0       	ldi	r25, 0x00	; 0
    52b8:	aa e7       	ldi	r26, 0x7A	; 122
    52ba:	b4 e4       	ldi	r27, 0x44	; 68
    52bc:	8d ab       	std	Y+53, r24	; 0x35
    52be:	9e ab       	std	Y+54, r25	; 0x36
    52c0:	af ab       	std	Y+55, r26	; 0x37
    52c2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    52c4:	6d a9       	ldd	r22, Y+53	; 0x35
    52c6:	7e a9       	ldd	r23, Y+54	; 0x36
    52c8:	8f a9       	ldd	r24, Y+55	; 0x37
    52ca:	98 ad       	ldd	r25, Y+56	; 0x38
    52cc:	20 e0       	ldi	r18, 0x00	; 0
    52ce:	30 e0       	ldi	r19, 0x00	; 0
    52d0:	4a ef       	ldi	r20, 0xFA	; 250
    52d2:	54 e4       	ldi	r21, 0x44	; 68
    52d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    52d8:	dc 01       	movw	r26, r24
    52da:	cb 01       	movw	r24, r22
    52dc:	89 ab       	std	Y+49, r24	; 0x31
    52de:	9a ab       	std	Y+50, r25	; 0x32
    52e0:	ab ab       	std	Y+51, r26	; 0x33
    52e2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    52e4:	69 a9       	ldd	r22, Y+49	; 0x31
    52e6:	7a a9       	ldd	r23, Y+50	; 0x32
    52e8:	8b a9       	ldd	r24, Y+51	; 0x33
    52ea:	9c a9       	ldd	r25, Y+52	; 0x34
    52ec:	20 e0       	ldi	r18, 0x00	; 0
    52ee:	30 e0       	ldi	r19, 0x00	; 0
    52f0:	40 e8       	ldi	r20, 0x80	; 128
    52f2:	5f e3       	ldi	r21, 0x3F	; 63
    52f4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    52f8:	88 23       	and	r24, r24
    52fa:	2c f4       	brge	.+10     	; 0x5306 <main+0x3356>
		__ticks = 1;
    52fc:	81 e0       	ldi	r24, 0x01	; 1
    52fe:	90 e0       	ldi	r25, 0x00	; 0
    5300:	98 ab       	std	Y+48, r25	; 0x30
    5302:	8f a7       	std	Y+47, r24	; 0x2f
    5304:	3f c0       	rjmp	.+126    	; 0x5384 <main+0x33d4>
	else if (__tmp > 65535)
    5306:	69 a9       	ldd	r22, Y+49	; 0x31
    5308:	7a a9       	ldd	r23, Y+50	; 0x32
    530a:	8b a9       	ldd	r24, Y+51	; 0x33
    530c:	9c a9       	ldd	r25, Y+52	; 0x34
    530e:	20 e0       	ldi	r18, 0x00	; 0
    5310:	3f ef       	ldi	r19, 0xFF	; 255
    5312:	4f e7       	ldi	r20, 0x7F	; 127
    5314:	57 e4       	ldi	r21, 0x47	; 71
    5316:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    531a:	18 16       	cp	r1, r24
    531c:	4c f5       	brge	.+82     	; 0x5370 <main+0x33c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    531e:	6d a9       	ldd	r22, Y+53	; 0x35
    5320:	7e a9       	ldd	r23, Y+54	; 0x36
    5322:	8f a9       	ldd	r24, Y+55	; 0x37
    5324:	98 ad       	ldd	r25, Y+56	; 0x38
    5326:	20 e0       	ldi	r18, 0x00	; 0
    5328:	30 e0       	ldi	r19, 0x00	; 0
    532a:	40 e2       	ldi	r20, 0x20	; 32
    532c:	51 e4       	ldi	r21, 0x41	; 65
    532e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5332:	dc 01       	movw	r26, r24
    5334:	cb 01       	movw	r24, r22
    5336:	bc 01       	movw	r22, r24
    5338:	cd 01       	movw	r24, r26
    533a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    533e:	dc 01       	movw	r26, r24
    5340:	cb 01       	movw	r24, r22
    5342:	98 ab       	std	Y+48, r25	; 0x30
    5344:	8f a7       	std	Y+47, r24	; 0x2f
    5346:	0f c0       	rjmp	.+30     	; 0x5366 <main+0x33b6>
    5348:	88 ec       	ldi	r24, 0xC8	; 200
    534a:	90 e0       	ldi	r25, 0x00	; 0
    534c:	9e a7       	std	Y+46, r25	; 0x2e
    534e:	8d a7       	std	Y+45, r24	; 0x2d
    5350:	8d a5       	ldd	r24, Y+45	; 0x2d
    5352:	9e a5       	ldd	r25, Y+46	; 0x2e
    5354:	01 97       	sbiw	r24, 0x01	; 1
    5356:	f1 f7       	brne	.-4      	; 0x5354 <main+0x33a4>
    5358:	9e a7       	std	Y+46, r25	; 0x2e
    535a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    535c:	8f a5       	ldd	r24, Y+47	; 0x2f
    535e:	98 a9       	ldd	r25, Y+48	; 0x30
    5360:	01 97       	sbiw	r24, 0x01	; 1
    5362:	98 ab       	std	Y+48, r25	; 0x30
    5364:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5366:	8f a5       	ldd	r24, Y+47	; 0x2f
    5368:	98 a9       	ldd	r25, Y+48	; 0x30
    536a:	00 97       	sbiw	r24, 0x00	; 0
    536c:	69 f7       	brne	.-38     	; 0x5348 <main+0x3398>
    536e:	14 c0       	rjmp	.+40     	; 0x5398 <main+0x33e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5370:	69 a9       	ldd	r22, Y+49	; 0x31
    5372:	7a a9       	ldd	r23, Y+50	; 0x32
    5374:	8b a9       	ldd	r24, Y+51	; 0x33
    5376:	9c a9       	ldd	r25, Y+52	; 0x34
    5378:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    537c:	dc 01       	movw	r26, r24
    537e:	cb 01       	movw	r24, r22
    5380:	98 ab       	std	Y+48, r25	; 0x30
    5382:	8f a7       	std	Y+47, r24	; 0x2f
    5384:	8f a5       	ldd	r24, Y+47	; 0x2f
    5386:	98 a9       	ldd	r25, Y+48	; 0x30
    5388:	9c a7       	std	Y+44, r25	; 0x2c
    538a:	8b a7       	std	Y+43, r24	; 0x2b
    538c:	8b a5       	ldd	r24, Y+43	; 0x2b
    538e:	9c a5       	ldd	r25, Y+44	; 0x2c
    5390:	01 97       	sbiw	r24, 0x01	; 1
    5392:	f1 f7       	brne	.-4      	; 0x5390 <main+0x33e0>
    5394:	9c a7       	std	Y+44, r25	; 0x2c
    5396:	8b a7       	std	Y+43, r24	; 0x2b
		{
			do
			{
				_delay_ms(1000);
				Local_M_1--;
    5398:	de 01       	movw	r26, r28
    539a:	ac 53       	subi	r26, 0x3C	; 60
    539c:	be 4f       	sbci	r27, 0xFE	; 254
    539e:	fe 01       	movw	r30, r28
    53a0:	ec 53       	subi	r30, 0x3C	; 60
    53a2:	fe 4f       	sbci	r31, 0xFE	; 254
    53a4:	80 81       	ld	r24, Z
    53a6:	81 50       	subi	r24, 0x01	; 1
    53a8:	8c 93       	st	X, r24
				CLCD_voidGoToXY(0,3);
    53aa:	80 e0       	ldi	r24, 0x00	; 0
    53ac:	63 e0       	ldi	r22, 0x03	; 3
    53ae:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
				CLCD_VoidWriteNumber(Local_M_1);
    53b2:	fe 01       	movw	r30, r28
    53b4:	ec 53       	subi	r30, 0x3C	; 60
    53b6:	fe 4f       	sbci	r31, 0xFE	; 254
    53b8:	80 81       	ld	r24, Z
    53ba:	88 2f       	mov	r24, r24
    53bc:	90 e0       	ldi	r25, 0x00	; 0
    53be:	a0 e0       	ldi	r26, 0x00	; 0
    53c0:	b0 e0       	ldi	r27, 0x00	; 0
    53c2:	bc 01       	movw	r22, r24
    53c4:	cd 01       	movw	r24, r26
    53c6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    53ca:	dc 01       	movw	r26, r24
    53cc:	cb 01       	movw	r24, r22
    53ce:	bc 01       	movw	r22, r24
    53d0:	cd 01       	movw	r24, r26
    53d2:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>

			}
			while (Local_M_1!=0);
    53d6:	fe 01       	movw	r30, r28
    53d8:	ec 53       	subi	r30, 0x3C	; 60
    53da:	fe 4f       	sbci	r31, 0xFE	; 254
    53dc:	80 81       	ld	r24, Z
    53de:	88 23       	and	r24, r24
    53e0:	09 f0       	breq	.+2      	; 0x53e4 <main+0x3434>
    53e2:	68 cf       	rjmp	.-304    	; 0x52b4 <main+0x3304>
		}

		/* Hour timer */

		if (Local_H_2>0)
    53e4:	fe 01       	movw	r30, r28
    53e6:	eb 53       	subi	r30, 0x3B	; 59
    53e8:	fe 4f       	sbci	r31, 0xFE	; 254
    53ea:	80 81       	ld	r24, Z
    53ec:	88 23       	and	r24, r24
    53ee:	09 f4       	brne	.+2      	; 0x53f2 <main+0x3442>
    53f0:	98 c0       	rjmp	.+304    	; 0x5522 <main+0x3572>
    53f2:	80 e0       	ldi	r24, 0x00	; 0
    53f4:	90 e0       	ldi	r25, 0x00	; 0
    53f6:	aa e7       	ldi	r26, 0x7A	; 122
    53f8:	b4 e4       	ldi	r27, 0x44	; 68
    53fa:	8f a3       	std	Y+39, r24	; 0x27
    53fc:	98 a7       	std	Y+40, r25	; 0x28
    53fe:	a9 a7       	std	Y+41, r26	; 0x29
    5400:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5402:	6f a1       	ldd	r22, Y+39	; 0x27
    5404:	78 a5       	ldd	r23, Y+40	; 0x28
    5406:	89 a5       	ldd	r24, Y+41	; 0x29
    5408:	9a a5       	ldd	r25, Y+42	; 0x2a
    540a:	20 e0       	ldi	r18, 0x00	; 0
    540c:	30 e0       	ldi	r19, 0x00	; 0
    540e:	4a ef       	ldi	r20, 0xFA	; 250
    5410:	54 e4       	ldi	r21, 0x44	; 68
    5412:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5416:	dc 01       	movw	r26, r24
    5418:	cb 01       	movw	r24, r22
    541a:	8b a3       	std	Y+35, r24	; 0x23
    541c:	9c a3       	std	Y+36, r25	; 0x24
    541e:	ad a3       	std	Y+37, r26	; 0x25
    5420:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    5422:	6b a1       	ldd	r22, Y+35	; 0x23
    5424:	7c a1       	ldd	r23, Y+36	; 0x24
    5426:	8d a1       	ldd	r24, Y+37	; 0x25
    5428:	9e a1       	ldd	r25, Y+38	; 0x26
    542a:	20 e0       	ldi	r18, 0x00	; 0
    542c:	30 e0       	ldi	r19, 0x00	; 0
    542e:	40 e8       	ldi	r20, 0x80	; 128
    5430:	5f e3       	ldi	r21, 0x3F	; 63
    5432:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5436:	88 23       	and	r24, r24
    5438:	2c f4       	brge	.+10     	; 0x5444 <main+0x3494>
		__ticks = 1;
    543a:	81 e0       	ldi	r24, 0x01	; 1
    543c:	90 e0       	ldi	r25, 0x00	; 0
    543e:	9a a3       	std	Y+34, r25	; 0x22
    5440:	89 a3       	std	Y+33, r24	; 0x21
    5442:	3f c0       	rjmp	.+126    	; 0x54c2 <main+0x3512>
	else if (__tmp > 65535)
    5444:	6b a1       	ldd	r22, Y+35	; 0x23
    5446:	7c a1       	ldd	r23, Y+36	; 0x24
    5448:	8d a1       	ldd	r24, Y+37	; 0x25
    544a:	9e a1       	ldd	r25, Y+38	; 0x26
    544c:	20 e0       	ldi	r18, 0x00	; 0
    544e:	3f ef       	ldi	r19, 0xFF	; 255
    5450:	4f e7       	ldi	r20, 0x7F	; 127
    5452:	57 e4       	ldi	r21, 0x47	; 71
    5454:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5458:	18 16       	cp	r1, r24
    545a:	4c f5       	brge	.+82     	; 0x54ae <main+0x34fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    545c:	6f a1       	ldd	r22, Y+39	; 0x27
    545e:	78 a5       	ldd	r23, Y+40	; 0x28
    5460:	89 a5       	ldd	r24, Y+41	; 0x29
    5462:	9a a5       	ldd	r25, Y+42	; 0x2a
    5464:	20 e0       	ldi	r18, 0x00	; 0
    5466:	30 e0       	ldi	r19, 0x00	; 0
    5468:	40 e2       	ldi	r20, 0x20	; 32
    546a:	51 e4       	ldi	r21, 0x41	; 65
    546c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5470:	dc 01       	movw	r26, r24
    5472:	cb 01       	movw	r24, r22
    5474:	bc 01       	movw	r22, r24
    5476:	cd 01       	movw	r24, r26
    5478:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    547c:	dc 01       	movw	r26, r24
    547e:	cb 01       	movw	r24, r22
    5480:	9a a3       	std	Y+34, r25	; 0x22
    5482:	89 a3       	std	Y+33, r24	; 0x21
    5484:	0f c0       	rjmp	.+30     	; 0x54a4 <main+0x34f4>
    5486:	88 ec       	ldi	r24, 0xC8	; 200
    5488:	90 e0       	ldi	r25, 0x00	; 0
    548a:	98 a3       	std	Y+32, r25	; 0x20
    548c:	8f 8f       	std	Y+31, r24	; 0x1f
    548e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    5490:	98 a1       	ldd	r25, Y+32	; 0x20
    5492:	01 97       	sbiw	r24, 0x01	; 1
    5494:	f1 f7       	brne	.-4      	; 0x5492 <main+0x34e2>
    5496:	98 a3       	std	Y+32, r25	; 0x20
    5498:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    549a:	89 a1       	ldd	r24, Y+33	; 0x21
    549c:	9a a1       	ldd	r25, Y+34	; 0x22
    549e:	01 97       	sbiw	r24, 0x01	; 1
    54a0:	9a a3       	std	Y+34, r25	; 0x22
    54a2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    54a4:	89 a1       	ldd	r24, Y+33	; 0x21
    54a6:	9a a1       	ldd	r25, Y+34	; 0x22
    54a8:	00 97       	sbiw	r24, 0x00	; 0
    54aa:	69 f7       	brne	.-38     	; 0x5486 <main+0x34d6>
    54ac:	14 c0       	rjmp	.+40     	; 0x54d6 <main+0x3526>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    54ae:	6b a1       	ldd	r22, Y+35	; 0x23
    54b0:	7c a1       	ldd	r23, Y+36	; 0x24
    54b2:	8d a1       	ldd	r24, Y+37	; 0x25
    54b4:	9e a1       	ldd	r25, Y+38	; 0x26
    54b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    54ba:	dc 01       	movw	r26, r24
    54bc:	cb 01       	movw	r24, r22
    54be:	9a a3       	std	Y+34, r25	; 0x22
    54c0:	89 a3       	std	Y+33, r24	; 0x21
    54c2:	89 a1       	ldd	r24, Y+33	; 0x21
    54c4:	9a a1       	ldd	r25, Y+34	; 0x22
    54c6:	9e 8f       	std	Y+30, r25	; 0x1e
    54c8:	8d 8f       	std	Y+29, r24	; 0x1d
    54ca:	8d 8d       	ldd	r24, Y+29	; 0x1d
    54cc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    54ce:	01 97       	sbiw	r24, 0x01	; 1
    54d0:	f1 f7       	brne	.-4      	; 0x54ce <main+0x351e>
    54d2:	9e 8f       	std	Y+30, r25	; 0x1e
    54d4:	8d 8f       	std	Y+29, r24	; 0x1d
		{
			do
			{
				_delay_ms(1000);
				Local_H_2--;
    54d6:	de 01       	movw	r26, r28
    54d8:	ab 53       	subi	r26, 0x3B	; 59
    54da:	be 4f       	sbci	r27, 0xFE	; 254
    54dc:	fe 01       	movw	r30, r28
    54de:	eb 53       	subi	r30, 0x3B	; 59
    54e0:	fe 4f       	sbci	r31, 0xFE	; 254
    54e2:	80 81       	ld	r24, Z
    54e4:	81 50       	subi	r24, 0x01	; 1
    54e6:	8c 93       	st	X, r24
				CLCD_voidGoToXY(0,1);
    54e8:	80 e0       	ldi	r24, 0x00	; 0
    54ea:	61 e0       	ldi	r22, 0x01	; 1
    54ec:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
				CLCD_VoidWriteNumber(Local_H_2);
    54f0:	fe 01       	movw	r30, r28
    54f2:	eb 53       	subi	r30, 0x3B	; 59
    54f4:	fe 4f       	sbci	r31, 0xFE	; 254
    54f6:	80 81       	ld	r24, Z
    54f8:	88 2f       	mov	r24, r24
    54fa:	90 e0       	ldi	r25, 0x00	; 0
    54fc:	a0 e0       	ldi	r26, 0x00	; 0
    54fe:	b0 e0       	ldi	r27, 0x00	; 0
    5500:	bc 01       	movw	r22, r24
    5502:	cd 01       	movw	r24, r26
    5504:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    5508:	dc 01       	movw	r26, r24
    550a:	cb 01       	movw	r24, r22
    550c:	bc 01       	movw	r22, r24
    550e:	cd 01       	movw	r24, r26
    5510:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>

			}
			while (Local_H_2!=0);
    5514:	fe 01       	movw	r30, r28
    5516:	eb 53       	subi	r30, 0x3B	; 59
    5518:	fe 4f       	sbci	r31, 0xFE	; 254
    551a:	80 81       	ld	r24, Z
    551c:	88 23       	and	r24, r24
    551e:	09 f0       	breq	.+2      	; 0x5522 <main+0x3572>
    5520:	68 cf       	rjmp	.-304    	; 0x53f2 <main+0x3442>
		}
		if (Local_H_1>0)
    5522:	fe 01       	movw	r30, r28
    5524:	ea 53       	subi	r30, 0x3A	; 58
    5526:	fe 4f       	sbci	r31, 0xFE	; 254
    5528:	80 81       	ld	r24, Z
    552a:	88 23       	and	r24, r24
    552c:	09 f4       	brne	.+2      	; 0x5530 <main+0x3580>
    552e:	98 c0       	rjmp	.+304    	; 0x5660 <main+0x36b0>
    5530:	80 e0       	ldi	r24, 0x00	; 0
    5532:	90 e0       	ldi	r25, 0x00	; 0
    5534:	aa e7       	ldi	r26, 0x7A	; 122
    5536:	b4 e4       	ldi	r27, 0x44	; 68
    5538:	89 8f       	std	Y+25, r24	; 0x19
    553a:	9a 8f       	std	Y+26, r25	; 0x1a
    553c:	ab 8f       	std	Y+27, r26	; 0x1b
    553e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5540:	69 8d       	ldd	r22, Y+25	; 0x19
    5542:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5544:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5546:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5548:	20 e0       	ldi	r18, 0x00	; 0
    554a:	30 e0       	ldi	r19, 0x00	; 0
    554c:	4a ef       	ldi	r20, 0xFA	; 250
    554e:	54 e4       	ldi	r21, 0x44	; 68
    5550:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5554:	dc 01       	movw	r26, r24
    5556:	cb 01       	movw	r24, r22
    5558:	8d 8b       	std	Y+21, r24	; 0x15
    555a:	9e 8b       	std	Y+22, r25	; 0x16
    555c:	af 8b       	std	Y+23, r26	; 0x17
    555e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5560:	6d 89       	ldd	r22, Y+21	; 0x15
    5562:	7e 89       	ldd	r23, Y+22	; 0x16
    5564:	8f 89       	ldd	r24, Y+23	; 0x17
    5566:	98 8d       	ldd	r25, Y+24	; 0x18
    5568:	20 e0       	ldi	r18, 0x00	; 0
    556a:	30 e0       	ldi	r19, 0x00	; 0
    556c:	40 e8       	ldi	r20, 0x80	; 128
    556e:	5f e3       	ldi	r21, 0x3F	; 63
    5570:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5574:	88 23       	and	r24, r24
    5576:	2c f4       	brge	.+10     	; 0x5582 <main+0x35d2>
		__ticks = 1;
    5578:	81 e0       	ldi	r24, 0x01	; 1
    557a:	90 e0       	ldi	r25, 0x00	; 0
    557c:	9c 8b       	std	Y+20, r25	; 0x14
    557e:	8b 8b       	std	Y+19, r24	; 0x13
    5580:	3f c0       	rjmp	.+126    	; 0x5600 <main+0x3650>
	else if (__tmp > 65535)
    5582:	6d 89       	ldd	r22, Y+21	; 0x15
    5584:	7e 89       	ldd	r23, Y+22	; 0x16
    5586:	8f 89       	ldd	r24, Y+23	; 0x17
    5588:	98 8d       	ldd	r25, Y+24	; 0x18
    558a:	20 e0       	ldi	r18, 0x00	; 0
    558c:	3f ef       	ldi	r19, 0xFF	; 255
    558e:	4f e7       	ldi	r20, 0x7F	; 127
    5590:	57 e4       	ldi	r21, 0x47	; 71
    5592:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5596:	18 16       	cp	r1, r24
    5598:	4c f5       	brge	.+82     	; 0x55ec <main+0x363c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    559a:	69 8d       	ldd	r22, Y+25	; 0x19
    559c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    559e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    55a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    55a2:	20 e0       	ldi	r18, 0x00	; 0
    55a4:	30 e0       	ldi	r19, 0x00	; 0
    55a6:	40 e2       	ldi	r20, 0x20	; 32
    55a8:	51 e4       	ldi	r21, 0x41	; 65
    55aa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    55ae:	dc 01       	movw	r26, r24
    55b0:	cb 01       	movw	r24, r22
    55b2:	bc 01       	movw	r22, r24
    55b4:	cd 01       	movw	r24, r26
    55b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    55ba:	dc 01       	movw	r26, r24
    55bc:	cb 01       	movw	r24, r22
    55be:	9c 8b       	std	Y+20, r25	; 0x14
    55c0:	8b 8b       	std	Y+19, r24	; 0x13
    55c2:	0f c0       	rjmp	.+30     	; 0x55e2 <main+0x3632>
    55c4:	88 ec       	ldi	r24, 0xC8	; 200
    55c6:	90 e0       	ldi	r25, 0x00	; 0
    55c8:	9a 8b       	std	Y+18, r25	; 0x12
    55ca:	89 8b       	std	Y+17, r24	; 0x11
    55cc:	89 89       	ldd	r24, Y+17	; 0x11
    55ce:	9a 89       	ldd	r25, Y+18	; 0x12
    55d0:	01 97       	sbiw	r24, 0x01	; 1
    55d2:	f1 f7       	brne	.-4      	; 0x55d0 <main+0x3620>
    55d4:	9a 8b       	std	Y+18, r25	; 0x12
    55d6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    55d8:	8b 89       	ldd	r24, Y+19	; 0x13
    55da:	9c 89       	ldd	r25, Y+20	; 0x14
    55dc:	01 97       	sbiw	r24, 0x01	; 1
    55de:	9c 8b       	std	Y+20, r25	; 0x14
    55e0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    55e2:	8b 89       	ldd	r24, Y+19	; 0x13
    55e4:	9c 89       	ldd	r25, Y+20	; 0x14
    55e6:	00 97       	sbiw	r24, 0x00	; 0
    55e8:	69 f7       	brne	.-38     	; 0x55c4 <main+0x3614>
    55ea:	14 c0       	rjmp	.+40     	; 0x5614 <main+0x3664>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    55ec:	6d 89       	ldd	r22, Y+21	; 0x15
    55ee:	7e 89       	ldd	r23, Y+22	; 0x16
    55f0:	8f 89       	ldd	r24, Y+23	; 0x17
    55f2:	98 8d       	ldd	r25, Y+24	; 0x18
    55f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    55f8:	dc 01       	movw	r26, r24
    55fa:	cb 01       	movw	r24, r22
    55fc:	9c 8b       	std	Y+20, r25	; 0x14
    55fe:	8b 8b       	std	Y+19, r24	; 0x13
    5600:	8b 89       	ldd	r24, Y+19	; 0x13
    5602:	9c 89       	ldd	r25, Y+20	; 0x14
    5604:	98 8b       	std	Y+16, r25	; 0x10
    5606:	8f 87       	std	Y+15, r24	; 0x0f
    5608:	8f 85       	ldd	r24, Y+15	; 0x0f
    560a:	98 89       	ldd	r25, Y+16	; 0x10
    560c:	01 97       	sbiw	r24, 0x01	; 1
    560e:	f1 f7       	brne	.-4      	; 0x560c <main+0x365c>
    5610:	98 8b       	std	Y+16, r25	; 0x10
    5612:	8f 87       	std	Y+15, r24	; 0x0f
		{
			do
			{
				_delay_ms(1000);
				Local_H_1--;
    5614:	de 01       	movw	r26, r28
    5616:	aa 53       	subi	r26, 0x3A	; 58
    5618:	be 4f       	sbci	r27, 0xFE	; 254
    561a:	fe 01       	movw	r30, r28
    561c:	ea 53       	subi	r30, 0x3A	; 58
    561e:	fe 4f       	sbci	r31, 0xFE	; 254
    5620:	80 81       	ld	r24, Z
    5622:	81 50       	subi	r24, 0x01	; 1
    5624:	8c 93       	st	X, r24
				CLCD_voidGoToXY(0,0);
    5626:	80 e0       	ldi	r24, 0x00	; 0
    5628:	60 e0       	ldi	r22, 0x00	; 0
    562a:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
				CLCD_VoidWriteNumber(Local_H_1);
    562e:	fe 01       	movw	r30, r28
    5630:	ea 53       	subi	r30, 0x3A	; 58
    5632:	fe 4f       	sbci	r31, 0xFE	; 254
    5634:	80 81       	ld	r24, Z
    5636:	88 2f       	mov	r24, r24
    5638:	90 e0       	ldi	r25, 0x00	; 0
    563a:	a0 e0       	ldi	r26, 0x00	; 0
    563c:	b0 e0       	ldi	r27, 0x00	; 0
    563e:	bc 01       	movw	r22, r24
    5640:	cd 01       	movw	r24, r26
    5642:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    5646:	dc 01       	movw	r26, r24
    5648:	cb 01       	movw	r24, r22
    564a:	bc 01       	movw	r22, r24
    564c:	cd 01       	movw	r24, r26
    564e:	0e 94 b8 0b 	call	0x1770	; 0x1770 <CLCD_VoidWriteNumber>

			}
			while (Local_H_1!=0);
    5652:	fe 01       	movw	r30, r28
    5654:	ea 53       	subi	r30, 0x3A	; 58
    5656:	fe 4f       	sbci	r31, 0xFE	; 254
    5658:	80 81       	ld	r24, Z
    565a:	88 23       	and	r24, r24
    565c:	09 f0       	breq	.+2      	; 0x5660 <main+0x36b0>
    565e:	68 cf       	rjmp	.-304    	; 0x5530 <main+0x3580>
		}

		CLCD_voidGoToXY(1,5);
    5660:	81 e0       	ldi	r24, 0x01	; 1
    5662:	65 e0       	ldi	r22, 0x05	; 5
    5664:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <CLCD_voidGoToXY>
		CLCD_voidSendString("Time OUT");
    5668:	80 e6       	ldi	r24, 0x60	; 96
    566a:	90 e0       	ldi	r25, 0x00	; 0
    566c:	0e 94 2f 0b 	call	0x165e	; 0x165e <CLCD_voidSendString>
		CLCD_voidWriteSpecialCharacter(shape1,2,0,14);
    5670:	ce 01       	movw	r24, r28
    5672:	81 53       	subi	r24, 0x31	; 49
    5674:	9e 4f       	sbci	r25, 0xFE	; 254
    5676:	62 e0       	ldi	r22, 0x02	; 2
    5678:	40 e0       	ldi	r20, 0x00	; 0
    567a:	2e e0       	ldi	r18, 0x0E	; 14
    567c:	0e 94 77 0b 	call	0x16ee	; 0x16ee <CLCD_voidWriteSpecialCharacter>
		CLCD_voidWriteSpecialCharacter(shape2,3,1,14);
    5680:	ce 01       	movw	r24, r28
    5682:	89 52       	subi	r24, 0x29	; 41
    5684:	9e 4f       	sbci	r25, 0xFE	; 254
    5686:	63 e0       	ldi	r22, 0x03	; 3
    5688:	41 e0       	ldi	r20, 0x01	; 1
    568a:	2e e0       	ldi	r18, 0x0E	; 14
    568c:	0e 94 77 0b 	call	0x16ee	; 0x16ee <CLCD_voidWriteSpecialCharacter>

		DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN5,DIO_u8PIN_HIGH);
    5690:	82 e0       	ldi	r24, 0x02	; 2
    5692:	65 e0       	ldi	r22, 0x05	; 5
    5694:	41 e0       	ldi	r20, 0x01	; 1
    5696:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <DIO_u8SetPinValue>
    569a:	80 e0       	ldi	r24, 0x00	; 0
    569c:	90 e0       	ldi	r25, 0x00	; 0
    569e:	a8 ec       	ldi	r26, 0xC8	; 200
    56a0:	b2 e4       	ldi	r27, 0x42	; 66
    56a2:	8b 87       	std	Y+11, r24	; 0x0b
    56a4:	9c 87       	std	Y+12, r25	; 0x0c
    56a6:	ad 87       	std	Y+13, r26	; 0x0d
    56a8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    56aa:	6b 85       	ldd	r22, Y+11	; 0x0b
    56ac:	7c 85       	ldd	r23, Y+12	; 0x0c
    56ae:	8d 85       	ldd	r24, Y+13	; 0x0d
    56b0:	9e 85       	ldd	r25, Y+14	; 0x0e
    56b2:	20 e0       	ldi	r18, 0x00	; 0
    56b4:	30 e0       	ldi	r19, 0x00	; 0
    56b6:	4a ef       	ldi	r20, 0xFA	; 250
    56b8:	54 e4       	ldi	r21, 0x44	; 68
    56ba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    56be:	dc 01       	movw	r26, r24
    56c0:	cb 01       	movw	r24, r22
    56c2:	8f 83       	std	Y+7, r24	; 0x07
    56c4:	98 87       	std	Y+8, r25	; 0x08
    56c6:	a9 87       	std	Y+9, r26	; 0x09
    56c8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    56ca:	6f 81       	ldd	r22, Y+7	; 0x07
    56cc:	78 85       	ldd	r23, Y+8	; 0x08
    56ce:	89 85       	ldd	r24, Y+9	; 0x09
    56d0:	9a 85       	ldd	r25, Y+10	; 0x0a
    56d2:	20 e0       	ldi	r18, 0x00	; 0
    56d4:	30 e0       	ldi	r19, 0x00	; 0
    56d6:	40 e8       	ldi	r20, 0x80	; 128
    56d8:	5f e3       	ldi	r21, 0x3F	; 63
    56da:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    56de:	88 23       	and	r24, r24
    56e0:	2c f4       	brge	.+10     	; 0x56ec <main+0x373c>
		__ticks = 1;
    56e2:	81 e0       	ldi	r24, 0x01	; 1
    56e4:	90 e0       	ldi	r25, 0x00	; 0
    56e6:	9e 83       	std	Y+6, r25	; 0x06
    56e8:	8d 83       	std	Y+5, r24	; 0x05
    56ea:	3f c0       	rjmp	.+126    	; 0x576a <main+0x37ba>
	else if (__tmp > 65535)
    56ec:	6f 81       	ldd	r22, Y+7	; 0x07
    56ee:	78 85       	ldd	r23, Y+8	; 0x08
    56f0:	89 85       	ldd	r24, Y+9	; 0x09
    56f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    56f4:	20 e0       	ldi	r18, 0x00	; 0
    56f6:	3f ef       	ldi	r19, 0xFF	; 255
    56f8:	4f e7       	ldi	r20, 0x7F	; 127
    56fa:	57 e4       	ldi	r21, 0x47	; 71
    56fc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5700:	18 16       	cp	r1, r24
    5702:	4c f5       	brge	.+82     	; 0x5756 <main+0x37a6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5704:	6b 85       	ldd	r22, Y+11	; 0x0b
    5706:	7c 85       	ldd	r23, Y+12	; 0x0c
    5708:	8d 85       	ldd	r24, Y+13	; 0x0d
    570a:	9e 85       	ldd	r25, Y+14	; 0x0e
    570c:	20 e0       	ldi	r18, 0x00	; 0
    570e:	30 e0       	ldi	r19, 0x00	; 0
    5710:	40 e2       	ldi	r20, 0x20	; 32
    5712:	51 e4       	ldi	r21, 0x41	; 65
    5714:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5718:	dc 01       	movw	r26, r24
    571a:	cb 01       	movw	r24, r22
    571c:	bc 01       	movw	r22, r24
    571e:	cd 01       	movw	r24, r26
    5720:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5724:	dc 01       	movw	r26, r24
    5726:	cb 01       	movw	r24, r22
    5728:	9e 83       	std	Y+6, r25	; 0x06
    572a:	8d 83       	std	Y+5, r24	; 0x05
    572c:	0f c0       	rjmp	.+30     	; 0x574c <main+0x379c>
    572e:	88 ec       	ldi	r24, 0xC8	; 200
    5730:	90 e0       	ldi	r25, 0x00	; 0
    5732:	9c 83       	std	Y+4, r25	; 0x04
    5734:	8b 83       	std	Y+3, r24	; 0x03
    5736:	8b 81       	ldd	r24, Y+3	; 0x03
    5738:	9c 81       	ldd	r25, Y+4	; 0x04
    573a:	01 97       	sbiw	r24, 0x01	; 1
    573c:	f1 f7       	brne	.-4      	; 0x573a <main+0x378a>
    573e:	9c 83       	std	Y+4, r25	; 0x04
    5740:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5742:	8d 81       	ldd	r24, Y+5	; 0x05
    5744:	9e 81       	ldd	r25, Y+6	; 0x06
    5746:	01 97       	sbiw	r24, 0x01	; 1
    5748:	9e 83       	std	Y+6, r25	; 0x06
    574a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    574c:	8d 81       	ldd	r24, Y+5	; 0x05
    574e:	9e 81       	ldd	r25, Y+6	; 0x06
    5750:	00 97       	sbiw	r24, 0x00	; 0
    5752:	69 f7       	brne	.-38     	; 0x572e <main+0x377e>
    5754:	14 c0       	rjmp	.+40     	; 0x577e <main+0x37ce>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5756:	6f 81       	ldd	r22, Y+7	; 0x07
    5758:	78 85       	ldd	r23, Y+8	; 0x08
    575a:	89 85       	ldd	r24, Y+9	; 0x09
    575c:	9a 85       	ldd	r25, Y+10	; 0x0a
    575e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5762:	dc 01       	movw	r26, r24
    5764:	cb 01       	movw	r24, r22
    5766:	9e 83       	std	Y+6, r25	; 0x06
    5768:	8d 83       	std	Y+5, r24	; 0x05
    576a:	8d 81       	ldd	r24, Y+5	; 0x05
    576c:	9e 81       	ldd	r25, Y+6	; 0x06
    576e:	9a 83       	std	Y+2, r25	; 0x02
    5770:	89 83       	std	Y+1, r24	; 0x01
    5772:	89 81       	ldd	r24, Y+1	; 0x01
    5774:	9a 81       	ldd	r25, Y+2	; 0x02
    5776:	01 97       	sbiw	r24, 0x01	; 1
    5778:	f1 f7       	brne	.-4      	; 0x5776 <main+0x37c6>
    577a:	9a 83       	std	Y+2, r25	; 0x02
    577c:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(100);
		DIO_u8SetPinValue(DIO_u8PORTC,DIO_u8PIN5,DIO_u8PIN_LOW);
    577e:	82 e0       	ldi	r24, 0x02	; 2
    5780:	65 e0       	ldi	r22, 0x05	; 5
    5782:	40 e0       	ldi	r20, 0x00	; 0
    5784:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <DIO_u8SetPinValue>
    5788:	0c 94 6e 11 	jmp	0x22dc	; 0x22dc <main+0x32c>

0000578c <__divmodsi4>:
    578c:	97 fb       	bst	r25, 7
    578e:	09 2e       	mov	r0, r25
    5790:	05 26       	eor	r0, r21
    5792:	0e d0       	rcall	.+28     	; 0x57b0 <__divmodsi4_neg1>
    5794:	57 fd       	sbrc	r21, 7
    5796:	04 d0       	rcall	.+8      	; 0x57a0 <__divmodsi4_neg2>
    5798:	14 d0       	rcall	.+40     	; 0x57c2 <__udivmodsi4>
    579a:	0a d0       	rcall	.+20     	; 0x57b0 <__divmodsi4_neg1>
    579c:	00 1c       	adc	r0, r0
    579e:	38 f4       	brcc	.+14     	; 0x57ae <__divmodsi4_exit>

000057a0 <__divmodsi4_neg2>:
    57a0:	50 95       	com	r21
    57a2:	40 95       	com	r20
    57a4:	30 95       	com	r19
    57a6:	21 95       	neg	r18
    57a8:	3f 4f       	sbci	r19, 0xFF	; 255
    57aa:	4f 4f       	sbci	r20, 0xFF	; 255
    57ac:	5f 4f       	sbci	r21, 0xFF	; 255

000057ae <__divmodsi4_exit>:
    57ae:	08 95       	ret

000057b0 <__divmodsi4_neg1>:
    57b0:	f6 f7       	brtc	.-4      	; 0x57ae <__divmodsi4_exit>
    57b2:	90 95       	com	r25
    57b4:	80 95       	com	r24
    57b6:	70 95       	com	r23
    57b8:	61 95       	neg	r22
    57ba:	7f 4f       	sbci	r23, 0xFF	; 255
    57bc:	8f 4f       	sbci	r24, 0xFF	; 255
    57be:	9f 4f       	sbci	r25, 0xFF	; 255
    57c0:	08 95       	ret

000057c2 <__udivmodsi4>:
    57c2:	a1 e2       	ldi	r26, 0x21	; 33
    57c4:	1a 2e       	mov	r1, r26
    57c6:	aa 1b       	sub	r26, r26
    57c8:	bb 1b       	sub	r27, r27
    57ca:	fd 01       	movw	r30, r26
    57cc:	0d c0       	rjmp	.+26     	; 0x57e8 <__udivmodsi4_ep>

000057ce <__udivmodsi4_loop>:
    57ce:	aa 1f       	adc	r26, r26
    57d0:	bb 1f       	adc	r27, r27
    57d2:	ee 1f       	adc	r30, r30
    57d4:	ff 1f       	adc	r31, r31
    57d6:	a2 17       	cp	r26, r18
    57d8:	b3 07       	cpc	r27, r19
    57da:	e4 07       	cpc	r30, r20
    57dc:	f5 07       	cpc	r31, r21
    57de:	20 f0       	brcs	.+8      	; 0x57e8 <__udivmodsi4_ep>
    57e0:	a2 1b       	sub	r26, r18
    57e2:	b3 0b       	sbc	r27, r19
    57e4:	e4 0b       	sbc	r30, r20
    57e6:	f5 0b       	sbc	r31, r21

000057e8 <__udivmodsi4_ep>:
    57e8:	66 1f       	adc	r22, r22
    57ea:	77 1f       	adc	r23, r23
    57ec:	88 1f       	adc	r24, r24
    57ee:	99 1f       	adc	r25, r25
    57f0:	1a 94       	dec	r1
    57f2:	69 f7       	brne	.-38     	; 0x57ce <__udivmodsi4_loop>
    57f4:	60 95       	com	r22
    57f6:	70 95       	com	r23
    57f8:	80 95       	com	r24
    57fa:	90 95       	com	r25
    57fc:	9b 01       	movw	r18, r22
    57fe:	ac 01       	movw	r20, r24
    5800:	bd 01       	movw	r22, r26
    5802:	cf 01       	movw	r24, r30
    5804:	08 95       	ret

00005806 <__prologue_saves__>:
    5806:	2f 92       	push	r2
    5808:	3f 92       	push	r3
    580a:	4f 92       	push	r4
    580c:	5f 92       	push	r5
    580e:	6f 92       	push	r6
    5810:	7f 92       	push	r7
    5812:	8f 92       	push	r8
    5814:	9f 92       	push	r9
    5816:	af 92       	push	r10
    5818:	bf 92       	push	r11
    581a:	cf 92       	push	r12
    581c:	df 92       	push	r13
    581e:	ef 92       	push	r14
    5820:	ff 92       	push	r15
    5822:	0f 93       	push	r16
    5824:	1f 93       	push	r17
    5826:	cf 93       	push	r28
    5828:	df 93       	push	r29
    582a:	cd b7       	in	r28, 0x3d	; 61
    582c:	de b7       	in	r29, 0x3e	; 62
    582e:	ca 1b       	sub	r28, r26
    5830:	db 0b       	sbc	r29, r27
    5832:	0f b6       	in	r0, 0x3f	; 63
    5834:	f8 94       	cli
    5836:	de bf       	out	0x3e, r29	; 62
    5838:	0f be       	out	0x3f, r0	; 63
    583a:	cd bf       	out	0x3d, r28	; 61
    583c:	09 94       	ijmp

0000583e <__epilogue_restores__>:
    583e:	2a 88       	ldd	r2, Y+18	; 0x12
    5840:	39 88       	ldd	r3, Y+17	; 0x11
    5842:	48 88       	ldd	r4, Y+16	; 0x10
    5844:	5f 84       	ldd	r5, Y+15	; 0x0f
    5846:	6e 84       	ldd	r6, Y+14	; 0x0e
    5848:	7d 84       	ldd	r7, Y+13	; 0x0d
    584a:	8c 84       	ldd	r8, Y+12	; 0x0c
    584c:	9b 84       	ldd	r9, Y+11	; 0x0b
    584e:	aa 84       	ldd	r10, Y+10	; 0x0a
    5850:	b9 84       	ldd	r11, Y+9	; 0x09
    5852:	c8 84       	ldd	r12, Y+8	; 0x08
    5854:	df 80       	ldd	r13, Y+7	; 0x07
    5856:	ee 80       	ldd	r14, Y+6	; 0x06
    5858:	fd 80       	ldd	r15, Y+5	; 0x05
    585a:	0c 81       	ldd	r16, Y+4	; 0x04
    585c:	1b 81       	ldd	r17, Y+3	; 0x03
    585e:	aa 81       	ldd	r26, Y+2	; 0x02
    5860:	b9 81       	ldd	r27, Y+1	; 0x01
    5862:	ce 0f       	add	r28, r30
    5864:	d1 1d       	adc	r29, r1
    5866:	0f b6       	in	r0, 0x3f	; 63
    5868:	f8 94       	cli
    586a:	de bf       	out	0x3e, r29	; 62
    586c:	0f be       	out	0x3f, r0	; 63
    586e:	cd bf       	out	0x3d, r28	; 61
    5870:	ed 01       	movw	r28, r26
    5872:	08 95       	ret

00005874 <_exit>:
    5874:	f8 94       	cli

00005876 <__stop_program>:
    5876:	ff cf       	rjmp	.-2      	; 0x5876 <__stop_program>
